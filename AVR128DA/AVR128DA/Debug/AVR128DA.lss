
AVR128DA.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00804000  00002ffa  0000308e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002ffa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000005bd  00804038  00804038  000030c6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000030c6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003124  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000004f8  00000000  00000000  00003164  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00009cd4  00000000  00000000  0000365c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003c67  00000000  00000000  0000d330  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000036b6  00000000  00000000  00010f97  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000012cc  00000000  00000000  00014650  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002666  00000000  00000000  0001591c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00006dd1  00000000  00000000  00017f82  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004c0  00000000  00000000  0001ed53  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__ctors_end>
       4:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
       8:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
       c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      10:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      14:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      18:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      1c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      20:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      24:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      28:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      2c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      30:	0c 94 aa 02 	jmp	0x554	; 0x554 <__vector_12>
      34:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      38:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      3c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      40:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      44:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      48:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      4c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      50:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      54:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      58:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      5c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      60:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      64:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      68:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      6c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      70:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      74:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      78:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      7c:	0c 94 8f 0e 	jmp	0x1d1e	; 0x1d1e <__vector_31>
      80:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      84:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      88:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      8c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      90:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      94:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      98:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      9c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      a0:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      a4:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      a8:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      ac:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      b0:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      b4:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      b8:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      bc:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      c0:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      c4:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      c8:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      cc:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      d0:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      d4:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      d8:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      dc:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      e0:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
      e4:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>

000000e8 <__trampolines_end>:
      e8:	4e 41       	sbci	r20, 0x1E	; 30
      ea:	4e 49       	Address 0x000000ea is out of bounds.
.word	0xffff	; ????

000000eb <pstr_inity>:
      eb:	49 4e 49 54 59                                      INITY

000000f0 <pstr_inf>:
      f0:	49 4e 46                                            INF

000000f3 <pwr_m10>:
      f3:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     103:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000010b <pwr_p10>:
     10b:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     11b:	ca 1b 0e 5a ae c5 9d 74                             ...Z...t

00000123 <__c.4990>:
     123:	7c 0a 20 20 20 00                                   |.   .

00000129 <__c.4982>:
     129:	2e 00                                               ..

0000012b <__c.4980>:
     12b:	25 63 00                                            %c.

0000012e <__c.4978>:
     12e:	20 20 7c 00                                           |.

00000132 <__c.4973>:
     132:	20 30 78 25 30 38 58 00                              0x%08X.

0000013a <__c.4971>:
     13a:	20 30 78 25 30 38 58 3a 20 00                        0x%08X: .

00000144 <__c.4969>:
     144:	3e 3e 20 6d 64 70 20 61 64 64 72 20 5b 73 69 7a     >> mdp addr [siz
     154:	65 5d 20 0a 00                                      e] ..

00000159 <__c.4952>:
     159:	7c 0a 20 20 20 00                                   |.   .

0000015f <__c.4944>:
     15f:	2e 00                                               ..

00000161 <__c.4942>:
     161:	25 63 00                                            %c.

00000164 <__c.4940>:
     164:	20 20 7c 00                                           |.

00000168 <__c.4938>:
     168:	20 30 78 25 30 38 58 00                              0x%08X.

00000170 <__c.4936>:
     170:	20 30 78 25 30 38 58 3a 20 00                        0x%08X: .

0000017a <__c.4934>:
     17a:	3e 3e 20 6d 64 20 61 64 64 72 20 5b 73 69 7a 65     >> md addr [size
     18a:	5d 20 0a 00                                         ] ..

0000018e <__c.4920>:
     18e:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     19e:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 0d 0a 00     -------------...

000001ae <__c.4915>:
     1ae:	0d 0a 00                                            ...

000001b1 <__c.4912>:
     1b1:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 20 63 6d 64 20 6c     ---------- cmd l
     1c1:	69 73 74 20 2d 2d 2d 2d 2d 2d 2d 2d 2d 0d 0a 00     ist ---------...

000001d1 <__c.4910>:
     1d1:	0d 0a 00                                            ...

000001d4 <__c.4764>:
     1d4:	63 6c 69 23 20 00                                   cli# .

000001da <__c.4762>:
     1da:	0a 0d 00                                            ...

000001dd <__c.4834>:
     1dd:	0d 0a 00                                            ...

000001e0 <__c.4811>:
     1e0:	1b 5b 34 68 25 63 1b 5b 34 6c 00                    .[4h%c.[4l.

000001eb <__c.4803>:
     1eb:	08 20 08 1b 5b 31 50 00                             . ..[1P.

000001f3 <__c.4795>:
     1f3:	1b 5b 31 50 00                                      .[1P.

000001f8 <__c.4803>:
     1f8:	69 32 63 20 73 63 61 6e 0a 00                       i2c scan..

00000202 <__c.4798>:
     202:	5b 4f 4b 5d 20 41 64 64 72 20 3a 20 30 78 25 58     [OK] Addr : 0x%X
     212:	0a 00                                               ..

00000214 <pin_tbl>:
     214:	40 04 44 04 06 00                                   @.D...

0000021a <__ctors_end>:
     21a:	11 24       	eor	r1, r1
     21c:	1f be       	out	0x3f, r1	; 63
     21e:	cf ef       	ldi	r28, 0xFF	; 255
     220:	cd bf       	out	0x3d, r28	; 61
     222:	df e7       	ldi	r29, 0x7F	; 127
     224:	de bf       	out	0x3e, r29	; 62

00000226 <__do_copy_data>:
     226:	10 e4       	ldi	r17, 0x40	; 64
     228:	a0 e0       	ldi	r26, 0x00	; 0
     22a:	b0 e4       	ldi	r27, 0x40	; 64
     22c:	ea ef       	ldi	r30, 0xFA	; 250
     22e:	ff e2       	ldi	r31, 0x2F	; 47
     230:	00 e0       	ldi	r16, 0x00	; 0
     232:	0b bf       	out	0x3b, r16	; 59
     234:	02 c0       	rjmp	.+4      	; 0x23a <__do_copy_data+0x14>
     236:	07 90       	elpm	r0, Z+
     238:	0d 92       	st	X+, r0
     23a:	a8 33       	cpi	r26, 0x38	; 56
     23c:	b1 07       	cpc	r27, r17
     23e:	d9 f7       	brne	.-10     	; 0x236 <__do_copy_data+0x10>

00000240 <__do_clear_bss>:
     240:	25 e4       	ldi	r18, 0x45	; 69
     242:	a8 e3       	ldi	r26, 0x38	; 56
     244:	b0 e4       	ldi	r27, 0x40	; 64
     246:	01 c0       	rjmp	.+2      	; 0x24a <.do_clear_bss_start>

00000248 <.do_clear_bss_loop>:
     248:	1d 92       	st	X+, r1

0000024a <.do_clear_bss_start>:
     24a:	a5 3f       	cpi	r26, 0xF5	; 245
     24c:	b2 07       	cpc	r27, r18
     24e:	e1 f7       	brne	.-8      	; 0x248 <.do_clear_bss_loop>
     250:	0e 94 c7 0e 	call	0x1d8e	; 0x1d8e <main>
     254:	0c 94 fb 17 	jmp	0x2ff6	; 0x2ff6 <_exit>

00000258 <__bad_interrupt>:
     258:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000025c <memcpy_PF>:
     25c:	6b bf       	out	0x3b, r22	; 59
     25e:	fa 01       	movw	r30, r20
     260:	dc 01       	movw	r26, r24
     262:	02 c0       	rjmp	.+4      	; 0x268 <memcpy_PF+0xc>
     264:	07 90       	elpm	r0, Z+
     266:	0d 92       	st	X+, r0
     268:	21 50       	subi	r18, 0x01	; 1
     26a:	30 40       	sbci	r19, 0x00	; 0
     26c:	d8 f7       	brcc	.-10     	; 0x264 <memcpy_PF+0x8>
     26e:	08 95       	ret

00000270 <ssd1306_command>:
	cmd_buf[0] = SSD1306_CMD_COL_ADDR;
	cmd_buf[1] = start;
	cmd_buf[2] = end;
	
	ssd1306_command(cmd_buf, 3);
}
     270:	cf 92       	push	r12
     272:	df 92       	push	r13
     274:	ef 92       	push	r14
     276:	ff 92       	push	r15
     278:	0f 93       	push	r16
     27a:	1f 93       	push	r17
     27c:	cf 93       	push	r28
     27e:	df 93       	push	r29
     280:	8c 01       	movw	r16, r24
     282:	6b 01       	movw	r12, r22
     284:	80 e0       	ldi	r24, 0x00	; 0
     286:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <i2cStart>
     28a:	68 e7       	ldi	r22, 0x78	; 120
     28c:	80 e0       	ldi	r24, 0x00	; 0
     28e:	0e 94 89 0b 	call	0x1712	; 0x1712 <i2cSendAddr>
     292:	60 e0       	ldi	r22, 0x00	; 0
     294:	80 e0       	ldi	r24, 0x00	; 0
     296:	0e 94 be 0b 	call	0x177c	; 0x177c <i2cSendData>
     29a:	c0 e0       	ldi	r28, 0x00	; 0
     29c:	d0 e0       	ldi	r29, 0x00	; 0
     29e:	0b c0       	rjmp	.+22     	; 0x2b6 <ssd1306_command+0x46>
     2a0:	78 01       	movw	r14, r16
     2a2:	8f ef       	ldi	r24, 0xFF	; 255
     2a4:	e8 1a       	sub	r14, r24
     2a6:	f8 0a       	sbc	r15, r24
     2a8:	f8 01       	movw	r30, r16
     2aa:	60 81       	ld	r22, Z
     2ac:	80 e0       	ldi	r24, 0x00	; 0
     2ae:	0e 94 be 0b 	call	0x177c	; 0x177c <i2cSendData>
     2b2:	21 96       	adiw	r28, 0x01	; 1
     2b4:	87 01       	movw	r16, r14
     2b6:	cc 15       	cp	r28, r12
     2b8:	dd 05       	cpc	r29, r13
     2ba:	90 f3       	brcs	.-28     	; 0x2a0 <ssd1306_command+0x30>
     2bc:	80 e0       	ldi	r24, 0x00	; 0
     2be:	0e 94 ef 0b 	call	0x17de	; 0x17de <i2cEnd>
     2c2:	df 91       	pop	r29
     2c4:	cf 91       	pop	r28
     2c6:	1f 91       	pop	r17
     2c8:	0f 91       	pop	r16
     2ca:	ff 90       	pop	r15
     2cc:	ef 90       	pop	r14
     2ce:	df 90       	pop	r13
     2d0:	cf 90       	pop	r12
     2d2:	08 95       	ret

000002d4 <ssd1306_data>:
     2d4:	cf 92       	push	r12
     2d6:	df 92       	push	r13
     2d8:	ef 92       	push	r14
     2da:	ff 92       	push	r15
     2dc:	0f 93       	push	r16
     2de:	1f 93       	push	r17
     2e0:	cf 93       	push	r28
     2e2:	df 93       	push	r29
     2e4:	8c 01       	movw	r16, r24
     2e6:	6b 01       	movw	r12, r22
     2e8:	80 e0       	ldi	r24, 0x00	; 0
     2ea:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <i2cStart>
     2ee:	68 e7       	ldi	r22, 0x78	; 120
     2f0:	80 e0       	ldi	r24, 0x00	; 0
     2f2:	0e 94 89 0b 	call	0x1712	; 0x1712 <i2cSendAddr>
     2f6:	60 e4       	ldi	r22, 0x40	; 64
     2f8:	80 e0       	ldi	r24, 0x00	; 0
     2fa:	0e 94 be 0b 	call	0x177c	; 0x177c <i2cSendData>
     2fe:	c0 e0       	ldi	r28, 0x00	; 0
     300:	d0 e0       	ldi	r29, 0x00	; 0
     302:	0b c0       	rjmp	.+22     	; 0x31a <ssd1306_data+0x46>
     304:	78 01       	movw	r14, r16
     306:	8f ef       	ldi	r24, 0xFF	; 255
     308:	e8 1a       	sub	r14, r24
     30a:	f8 0a       	sbc	r15, r24
     30c:	f8 01       	movw	r30, r16
     30e:	60 81       	ld	r22, Z
     310:	80 e0       	ldi	r24, 0x00	; 0
     312:	0e 94 be 0b 	call	0x177c	; 0x177c <i2cSendData>
     316:	21 96       	adiw	r28, 0x01	; 1
     318:	87 01       	movw	r16, r14
     31a:	cc 15       	cp	r28, r12
     31c:	dd 05       	cpc	r29, r13
     31e:	90 f3       	brcs	.-28     	; 0x304 <ssd1306_data+0x30>
     320:	80 e0       	ldi	r24, 0x00	; 0
     322:	0e 94 ef 0b 	call	0x17de	; 0x17de <i2cEnd>
     326:	df 91       	pop	r29
     328:	cf 91       	pop	r28
     32a:	1f 91       	pop	r17
     32c:	0f 91       	pop	r16
     32e:	ff 90       	pop	r15
     330:	ef 90       	pop	r14
     332:	df 90       	pop	r13
     334:	cf 90       	pop	r12
     336:	08 95       	ret

00000338 <ssd1306_set_addr_mode>:
     338:	cf 93       	push	r28
     33a:	df 93       	push	r29
     33c:	00 d0       	rcall	.+0      	; 0x33e <ssd1306_set_addr_mode+0x6>
     33e:	cd b7       	in	r28, 0x3d	; 61
     340:	de b7       	in	r29, 0x3e	; 62
     342:	90 e2       	ldi	r25, 0x20	; 32
     344:	99 83       	std	Y+1, r25	; 0x01
     346:	8a 83       	std	Y+2, r24	; 0x02
     348:	62 e0       	ldi	r22, 0x02	; 2
     34a:	70 e0       	ldi	r23, 0x00	; 0
     34c:	ce 01       	movw	r24, r28
     34e:	01 96       	adiw	r24, 0x01	; 1
     350:	0e 94 38 01 	call	0x270	; 0x270 <ssd1306_command>
     354:	0f 90       	pop	r0
     356:	0f 90       	pop	r0
     358:	df 91       	pop	r29
     35a:	cf 91       	pop	r28
     35c:	08 95       	ret

0000035e <ssd1306_set_page_start>:
     35e:	cf 93       	push	r28
     360:	df 93       	push	r29
     362:	1f 92       	push	r1
     364:	cd b7       	in	r28, 0x3d	; 61
     366:	de b7       	in	r29, 0x3e	; 62
     368:	80 6b       	ori	r24, 0xB0	; 176
     36a:	89 83       	std	Y+1, r24	; 0x01
     36c:	61 e0       	ldi	r22, 0x01	; 1
     36e:	70 e0       	ldi	r23, 0x00	; 0
     370:	ce 01       	movw	r24, r28
     372:	01 96       	adiw	r24, 0x01	; 1
     374:	0e 94 38 01 	call	0x270	; 0x270 <ssd1306_command>
     378:	0f 90       	pop	r0
     37a:	df 91       	pop	r29
     37c:	cf 91       	pop	r28
     37e:	08 95       	ret

00000380 <ssd1306_set_column_addr>:

void ssd1306_set_column_addr(uint8_t column)
{
     380:	1f 93       	push	r17
     382:	cf 93       	push	r28
     384:	df 93       	push	r29
     386:	1f 92       	push	r1
     388:	cd b7       	in	r28, 0x3d	; 61
     38a:	de b7       	in	r29, 0x3e	; 62
     38c:	18 2f       	mov	r17, r24
	uint8_t cmd;
	
	cmd = SSD1306_CMD_COL_LO_ADDR | (column & 0xF);
     38e:	8f 70       	andi	r24, 0x0F	; 15
     390:	89 83       	std	Y+1, r24	; 0x01
	ssd1306_command(&cmd, 1);
     392:	61 e0       	ldi	r22, 0x01	; 1
     394:	70 e0       	ldi	r23, 0x00	; 0
     396:	ce 01       	movw	r24, r28
     398:	01 96       	adiw	r24, 0x01	; 1
     39a:	0e 94 38 01 	call	0x270	; 0x270 <ssd1306_command>
	
	cmd = SSD1306_CMD_COL_HI_ADDR | ((column >> 4) & 0xF);
     39e:	12 95       	swap	r17
     3a0:	1f 70       	andi	r17, 0x0F	; 15
     3a2:	10 61       	ori	r17, 0x10	; 16
     3a4:	19 83       	std	Y+1, r17	; 0x01
	ssd1306_command(&cmd, 1);
     3a6:	61 e0       	ldi	r22, 0x01	; 1
     3a8:	70 e0       	ldi	r23, 0x00	; 0
     3aa:	ce 01       	movw	r24, r28
     3ac:	01 96       	adiw	r24, 0x01	; 1
     3ae:	0e 94 38 01 	call	0x270	; 0x270 <ssd1306_command>
}
     3b2:	0f 90       	pop	r0
     3b4:	df 91       	pop	r29
     3b6:	cf 91       	pop	r28
     3b8:	1f 91       	pop	r17
     3ba:	08 95       	ret

000003bc <clear_screen>:

void clear_screen(void)
{
     3bc:	cf 93       	push	r28
	uint8_t page;
	uint8_t col;
	
	for(page=0; page<PAGE_NUM; page++)
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	0f c0       	rjmp	.+30     	; 0x3e0 <clear_screen+0x24>
		for(col=0; col<COL_NUM; col++)
			gddram[page][col] = 0;
     3c2:	20 e8       	ldi	r18, 0x80	; 128
     3c4:	92 9f       	mul	r25, r18
     3c6:	f0 01       	movw	r30, r0
     3c8:	11 24       	eor	r1, r1
     3ca:	e8 5c       	subi	r30, 0xC8	; 200
     3cc:	ff 4b       	sbci	r31, 0xBF	; 191
     3ce:	e8 0f       	add	r30, r24
     3d0:	f1 1d       	adc	r31, r1
     3d2:	10 82       	st	Z, r1
{
	uint8_t page;
	uint8_t col;
	
	for(page=0; page<PAGE_NUM; page++)
		for(col=0; col<COL_NUM; col++)
     3d4:	8f 5f       	subi	r24, 0xFF	; 255
     3d6:	01 c0       	rjmp	.+2      	; 0x3da <clear_screen+0x1e>
     3d8:	80 e0       	ldi	r24, 0x00	; 0
     3da:	88 23       	and	r24, r24
     3dc:	94 f7       	brge	.-28     	; 0x3c2 <clear_screen+0x6>
void clear_screen(void)
{
	uint8_t page;
	uint8_t col;
	
	for(page=0; page<PAGE_NUM; page++)
     3de:	9f 5f       	subi	r25, 0xFF	; 255
     3e0:	94 30       	cpi	r25, 0x04	; 4
     3e2:	d0 f3       	brcs	.-12     	; 0x3d8 <clear_screen+0x1c>
     3e4:	c0 e0       	ldi	r28, 0x00	; 0
     3e6:	0a c0       	rjmp	.+20     	; 0x3fc <clear_screen+0x40>
			gddram[page][col] = 0;

			
	for(page=0; page<PAGE_NUM; page++)
	{
		ssd1306_set_page_start(page);
     3e8:	8c 2f       	mov	r24, r28
     3ea:	0e 94 af 01 	call	0x35e	; 0x35e <ssd1306_set_page_start>
		ssd1306_data(&gddram[0][0], COL_NUM);
     3ee:	60 e8       	ldi	r22, 0x80	; 128
     3f0:	70 e0       	ldi	r23, 0x00	; 0
     3f2:	88 e3       	ldi	r24, 0x38	; 56
     3f4:	90 e4       	ldi	r25, 0x40	; 64
     3f6:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <ssd1306_data>
	for(page=0; page<PAGE_NUM; page++)
		for(col=0; col<COL_NUM; col++)
			gddram[page][col] = 0;

			
	for(page=0; page<PAGE_NUM; page++)
     3fa:	cf 5f       	subi	r28, 0xFF	; 255
     3fc:	c4 30       	cpi	r28, 0x04	; 4
     3fe:	a0 f3       	brcs	.-24     	; 0x3e8 <clear_screen+0x2c>
	{
		ssd1306_set_page_start(page);
		ssd1306_data(&gddram[0][0], COL_NUM);
	}
}
     400:	cf 91       	pop	r28
     402:	08 95       	ret

00000404 <draw_dot>:

void draw_dot(uint8_t val, uint8_t row, uint8_t col)
{
     404:	1f 93       	push	r17
     406:	cf 93       	push	r28
     408:	df 93       	push	r29
     40a:	14 2f       	mov	r17, r20
	uint8_t page = row >> 3;
     40c:	76 2f       	mov	r23, r22
     40e:	76 95       	lsr	r23
     410:	76 95       	lsr	r23
     412:	76 95       	lsr	r23
	uint8_t *dot = &gddram[page][col];
     414:	27 2f       	mov	r18, r23
     416:	30 e0       	ldi	r19, 0x00	; 0
     418:	50 e0       	ldi	r21, 0x00	; 0
     41a:	e9 01       	movw	r28, r18
     41c:	d6 95       	lsr	r29
     41e:	dc 2f       	mov	r29, r28
     420:	cc 27       	eor	r28, r28
     422:	d7 95       	ror	r29
     424:	c7 95       	ror	r28
     426:	c4 0f       	add	r28, r20
     428:	d5 1f       	adc	r29, r21
     42a:	c8 5c       	subi	r28, 0xC8	; 200
     42c:	df 4b       	sbci	r29, 0xBF	; 191
	
	if(val)
     42e:	88 23       	and	r24, r24
     430:	b1 f0       	breq	.+44     	; 0x45e <draw_dot+0x5a>
	{
		*dot |= 1 << (row & 7);
     432:	67 70       	andi	r22, 0x07	; 7
     434:	81 e0       	ldi	r24, 0x01	; 1
     436:	90 e0       	ldi	r25, 0x00	; 0
     438:	02 c0       	rjmp	.+4      	; 0x43e <draw_dot+0x3a>
     43a:	88 0f       	add	r24, r24
     43c:	99 1f       	adc	r25, r25
     43e:	6a 95       	dec	r22
     440:	e2 f7       	brpl	.-8      	; 0x43a <draw_dot+0x36>
     442:	f9 01       	movw	r30, r18
     444:	f6 95       	lsr	r31
     446:	fe 2f       	mov	r31, r30
     448:	ee 27       	eor	r30, r30
     44a:	f7 95       	ror	r31
     44c:	e7 95       	ror	r30
     44e:	e8 5c       	subi	r30, 0xC8	; 200
     450:	ff 4b       	sbci	r31, 0xBF	; 191
     452:	e4 0f       	add	r30, r20
     454:	f5 1f       	adc	r31, r21
     456:	90 81       	ld	r25, Z
     458:	89 2b       	or	r24, r25
     45a:	80 83       	st	Z, r24
     45c:	16 c0       	rjmp	.+44     	; 0x48a <draw_dot+0x86>
	}
	else
	{
		*dot &= ~(1 << (row & 7));
     45e:	67 70       	andi	r22, 0x07	; 7
     460:	81 e0       	ldi	r24, 0x01	; 1
     462:	90 e0       	ldi	r25, 0x00	; 0
     464:	02 c0       	rjmp	.+4      	; 0x46a <draw_dot+0x66>
     466:	88 0f       	add	r24, r24
     468:	99 1f       	adc	r25, r25
     46a:	6a 95       	dec	r22
     46c:	e2 f7       	brpl	.-8      	; 0x466 <draw_dot+0x62>
     46e:	36 95       	lsr	r19
     470:	32 2f       	mov	r19, r18
     472:	22 27       	eor	r18, r18
     474:	37 95       	ror	r19
     476:	27 95       	ror	r18
     478:	28 5c       	subi	r18, 0xC8	; 200
     47a:	3f 4b       	sbci	r19, 0xBF	; 191
     47c:	f9 01       	movw	r30, r18
     47e:	e4 0f       	add	r30, r20
     480:	f5 1f       	adc	r31, r21
     482:	80 95       	com	r24
     484:	90 81       	ld	r25, Z
     486:	89 23       	and	r24, r25
     488:	80 83       	st	Z, r24
	}
	
	ssd1306_set_page_start(page);
     48a:	87 2f       	mov	r24, r23
     48c:	0e 94 af 01 	call	0x35e	; 0x35e <ssd1306_set_page_start>
	ssd1306_set_column_addr(col);
     490:	81 2f       	mov	r24, r17
     492:	0e 94 c0 01 	call	0x380	; 0x380 <ssd1306_set_column_addr>
	ssd1306_data(dot, 1);
     496:	61 e0       	ldi	r22, 0x01	; 1
     498:	70 e0       	ldi	r23, 0x00	; 0
     49a:	ce 01       	movw	r24, r28
     49c:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <ssd1306_data>
}
     4a0:	df 91       	pop	r29
     4a2:	cf 91       	pop	r28
     4a4:	1f 91       	pop	r17
     4a6:	08 95       	ret

000004a8 <display_test_pattern>:

void display_test_pattern()
{
     4a8:	cf 93       	push	r28
	draw_dot(1, rand()&0x1F, rand()&0x7F);
     4aa:	0e 94 97 11 	call	0x232e	; 0x232e <rand>
     4ae:	c8 2f       	mov	r28, r24
     4b0:	0e 94 97 11 	call	0x232e	; 0x232e <rand>
     4b4:	4c 2f       	mov	r20, r28
     4b6:	4f 77       	andi	r20, 0x7F	; 127
     4b8:	68 2f       	mov	r22, r24
     4ba:	6f 71       	andi	r22, 0x1F	; 31
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	0e 94 02 02 	call	0x404	; 0x404 <draw_dot>
}
     4c2:	cf 91       	pop	r28
     4c4:	08 95       	ret

000004c6 <apInit>:



void apInit(void)
{
	cliOpen(_DEF_UART1, 115200);
     4c6:	40 e0       	ldi	r20, 0x00	; 0
     4c8:	52 ec       	ldi	r21, 0xC2	; 194
     4ca:	61 e0       	ldi	r22, 0x01	; 1
     4cc:	70 e0       	ldi	r23, 0x00	; 0
     4ce:	80 e0       	ldi	r24, 0x00	; 0
     4d0:	0e 94 ab 05 	call	0xb56	; 0xb56 <cliOpen>
	i2cBegin(_DEF_I2C1, 100000);
     4d4:	40 ea       	ldi	r20, 0xA0	; 160
     4d6:	56 e8       	ldi	r21, 0x86	; 134
     4d8:	61 e0       	ldi	r22, 0x01	; 1
     4da:	70 e0       	ldi	r23, 0x00	; 0
     4dc:	80 e0       	ldi	r24, 0x00	; 0
     4de:	0e 94 31 0b 	call	0x1662	; 0x1662 <i2cBegin>
     4e2:	08 95       	ret

000004e4 <apMain>:
void apMain(void)
{
	int cnt = 0;
	uint32_t preTime;
	
	GLCD_Setup();
     4e4:	0e 94 ad 0c 	call	0x195a	; 0x195a <GLCD_Setup>
	ssd1306_set_addr_mode(PAGE);
     4e8:	82 e0       	ldi	r24, 0x02	; 2
     4ea:	0e 94 9c 01 	call	0x338	; 0x338 <ssd1306_set_addr_mode>
	clear_screen();
     4ee:	0e 94 de 01 	call	0x3bc	; 0x3bc <clear_screen>
	
	preTime = millis();
     4f2:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <millis>
     4f6:	6b 01       	movw	r12, r22
     4f8:	7c 01       	movw	r14, r24
	i2cBegin(_DEF_I2C1, 100000);
}

void apMain(void)
{
	int cnt = 0;
     4fa:	80 e0       	ldi	r24, 0x00	; 0
     4fc:	90 e0       	ldi	r25, 0x00	; 0
	
	preTime = millis();
	while (1)
	{
		
		if(cnt++ == 1000)
     4fe:	ec 01       	movw	r28, r24
     500:	21 96       	adiw	r28, 0x01	; 1
     502:	88 3e       	cpi	r24, 0xE8	; 232
     504:	93 40       	sbci	r25, 0x03	; 3
     506:	69 f4       	brne	.+26     	; 0x522 <apMain+0x3e>
		{
			clear_screen();
     508:	0e 94 de 01 	call	0x3bc	; 0x3bc <clear_screen>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     50c:	8f ef       	ldi	r24, 0xFF	; 255
     50e:	9e e9       	ldi	r25, 0x9E	; 158
     510:	24 e2       	ldi	r18, 0x24	; 36
     512:	81 50       	subi	r24, 0x01	; 1
     514:	90 40       	sbci	r25, 0x00	; 0
     516:	20 40       	sbci	r18, 0x00	; 0
     518:	e1 f7       	brne	.-8      	; 0x512 <apMain+0x2e>
     51a:	00 c0       	rjmp	.+0      	; 0x51c <apMain+0x38>
     51c:	00 00       	nop
			_delay_ms(500);
			cnt = 0;
     51e:	c0 e0       	ldi	r28, 0x00	; 0
     520:	d0 e0       	ldi	r29, 0x00	; 0
		}
		display_test_pattern();
     522:	0e 94 54 02 	call	0x4a8	; 0x4a8 <display_test_pattern>
		
		if(millis() - preTime >= 10)
     526:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <millis>
     52a:	dc 01       	movw	r26, r24
     52c:	cb 01       	movw	r24, r22
     52e:	8c 19       	sub	r24, r12
     530:	9d 09       	sbc	r25, r13
     532:	ae 09       	sbc	r26, r14
     534:	bf 09       	sbc	r27, r15
     536:	0a 97       	sbiw	r24, 0x0a	; 10
     538:	a1 05       	cpc	r26, r1
     53a:	b1 05       	cpc	r27, r1
     53c:	38 f0       	brcs	.+14     	; 0x54c <apMain+0x68>
		{
			preTime = millis();
     53e:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <millis>
     542:	6b 01       	movw	r12, r22
     544:	7c 01       	movw	r14, r24
			ledToggle(_DEF_LED1);
     546:	80 e0       	ldi	r24, 0x00	; 0
     548:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <ledToggle>
			
		}
		
		cliMain();
     54c:	0e 94 88 08 	call	0x1110	; 0x1110 <cliMain>
	}
     550:	ce 01       	movw	r24, r28
     552:	d5 cf       	rjmp	.-86     	; 0x4fe <apMain+0x1a>

00000554 <__vector_12>:

static volatile uint32_t ms_cnt = 0;


ISR(TCB0_INT_vect)
{
     554:	1f 92       	push	r1
     556:	0f 92       	push	r0
     558:	0f b6       	in	r0, 0x3f	; 63
     55a:	0f 92       	push	r0
     55c:	11 24       	eor	r1, r1
     55e:	8f 93       	push	r24
     560:	9f 93       	push	r25
     562:	af 93       	push	r26
     564:	bf 93       	push	r27
	ms_cnt++;
     566:	80 91 38 42 	lds	r24, 0x4238	; 0x804238 <ms_cnt>
     56a:	90 91 39 42 	lds	r25, 0x4239	; 0x804239 <ms_cnt+0x1>
     56e:	a0 91 3a 42 	lds	r26, 0x423A	; 0x80423a <ms_cnt+0x2>
     572:	b0 91 3b 42 	lds	r27, 0x423B	; 0x80423b <ms_cnt+0x3>
     576:	01 96       	adiw	r24, 0x01	; 1
     578:	a1 1d       	adc	r26, r1
     57a:	b1 1d       	adc	r27, r1
     57c:	80 93 38 42 	sts	0x4238, r24	; 0x804238 <ms_cnt>
     580:	90 93 39 42 	sts	0x4239, r25	; 0x804239 <ms_cnt+0x1>
     584:	a0 93 3a 42 	sts	0x423A, r26	; 0x80423a <ms_cnt+0x2>
     588:	b0 93 3b 42 	sts	0x423B, r27	; 0x80423b <ms_cnt+0x3>
	TCB0.INTFLAGS = (1 << TCB_CAPT_bp);
     58c:	81 e0       	ldi	r24, 0x01	; 1
     58e:	80 93 06 0b 	sts	0x0B06, r24	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7e0b06>
}
     592:	bf 91       	pop	r27
     594:	af 91       	pop	r26
     596:	9f 91       	pop	r25
     598:	8f 91       	pop	r24
     59a:	0f 90       	pop	r0
     59c:	0f be       	out	0x3f, r0	; 63
     59e:	0f 90       	pop	r0
     5a0:	1f 90       	pop	r1
     5a2:	18 95       	reti

000005a4 <bspInit>:



bool bspInit(void)
{
	CCP = CCP_IOREG_gc;
     5a4:	88 ed       	ldi	r24, 0xD8	; 216
     5a6:	84 bf       	out	0x34, r24	; 52
	CLKCTRL.XOSC32KCTRLA = (1 << CLKCTRL_ENABLE_bp);
     5a8:	e0 e6       	ldi	r30, 0x60	; 96
     5aa:	f0 e0       	ldi	r31, 0x00	; 0
     5ac:	91 e0       	ldi	r25, 0x01	; 1
     5ae:	94 8f       	std	Z+28, r25	; 0x1c
		
	RTC.CLKSEL = (0x02 << RTC_CLKSEL_gp);
     5b0:	22 e0       	ldi	r18, 0x02	; 2
     5b2:	20 93 47 01 	sts	0x0147, r18	; 0x800147 <__TEXT_REGION_LENGTH__+0x7e0147>
		
	CCP = CCP_IOREG_gc;
     5b6:	84 bf       	out	0x34, r24	; 52
	CLKCTRL.OSCHFCTRLA = (0x09 << CLKCTRL_FREQSEL_gp)     // OSCHF = 24Mhz
     5b8:	25 e2       	ldi	r18, 0x25	; 37
     5ba:	20 87       	std	Z+8, r18	; 0x08
					   | (0x01 << CLKCTRL_AUTOTUNE_bp);   // AUTOTUNE Enable
		
	CCP = CCP_IOREG_gc;
     5bc:	84 bf       	out	0x34, r24	; 52
	CLKCTRL.MCLKCTRLA = (0x00 << CLKCTRL_CLKSEL_gp);
     5be:	10 82       	st	Z, r1
		
	CCP = CCP_IOREG_gc;
     5c0:	84 bf       	out	0x34, r24	; 52
	CLKCTRL.MCLKCTRLB = (0x00 << CLKCTRL_PEN_bp);
     5c2:	11 82       	std	Z+1, r1	; 0x01
		
		
	TCB0.CTRLA = (0x00 << TCB_CLKSEL_gp);
     5c4:	e0 e0       	ldi	r30, 0x00	; 0
     5c6:	fb e0       	ldi	r31, 0x0B	; 11
     5c8:	10 82       	st	Z, r1
	TCB0.CTRLB = (0x00 << TCB_CNTMODE_gp);
     5ca:	11 82       	std	Z+1, r1	; 0x01
	TCB0.INTCTRL = (1 << TCB_CAPT_bp);
     5cc:	95 83       	std	Z+5, r25	; 0x05
	TCB0.CCMP = (1000 * (F_CPU / 1000000)) - 1;
     5ce:	8f eb       	ldi	r24, 0xBF	; 191
     5d0:	9d e5       	ldi	r25, 0x5D	; 93
     5d2:	84 87       	std	Z+12, r24	; 0x0c
     5d4:	95 87       	std	Z+13, r25	; 0x0d
	TCB0.CTRLA |= (1 << TCB_ENABLE_bp);
     5d6:	80 81       	ld	r24, Z
     5d8:	81 60       	ori	r24, 0x01	; 1
     5da:	80 83       	st	Z, r24
		
	PORTC.DIRSET = (1 << 6);
     5dc:	80 e4       	ldi	r24, 0x40	; 64
     5de:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <__TEXT_REGION_LENGTH__+0x7e0441>
		
	sei();
     5e2:	78 94       	sei


	return true;
}
     5e4:	81 e0       	ldi	r24, 0x01	; 1
     5e6:	08 95       	ret

000005e8 <millis>:
}

uint32_t millis(void)
{
	uint32_t ret;
	uint8_t old_sreg = SREG;
     5e8:	2f b7       	in	r18, 0x3f	; 63
	
	cli();
     5ea:	f8 94       	cli
	ret = ms_cnt;
     5ec:	60 91 38 42 	lds	r22, 0x4238	; 0x804238 <ms_cnt>
     5f0:	70 91 39 42 	lds	r23, 0x4239	; 0x804239 <ms_cnt+0x1>
     5f4:	80 91 3a 42 	lds	r24, 0x423A	; 0x80423a <ms_cnt+0x2>
     5f8:	90 91 3b 42 	lds	r25, 0x423B	; 0x80423b <ms_cnt+0x3>
	SREG = old_sreg;
     5fc:	2f bf       	out	0x3f, r18	; 63

	return ret;
}
     5fe:	08 95       	ret

00000600 <qbufferCreate>:
{

}

bool qbufferCreate(qbuffer_t *p_node, uint8_t *p_buf, uint32_t length)
{
     600:	fc 01       	movw	r30, r24
	bool ret = true;


	p_node->ptr_in  = 0;
     602:	10 82       	st	Z, r1
     604:	11 82       	std	Z+1, r1	; 0x01
     606:	12 82       	std	Z+2, r1	; 0x02
     608:	13 82       	std	Z+3, r1	; 0x03
	p_node->ptr_out = 0;
     60a:	14 82       	std	Z+4, r1	; 0x04
     60c:	15 82       	std	Z+5, r1	; 0x05
     60e:	16 82       	std	Z+6, r1	; 0x06
     610:	17 82       	std	Z+7, r1	; 0x07
	p_node->length  = length;
     612:	20 87       	std	Z+8, r18	; 0x08
     614:	31 87       	std	Z+9, r19	; 0x09
     616:	42 87       	std	Z+10, r20	; 0x0a
     618:	53 87       	std	Z+11, r21	; 0x0b
	p_node->p_buf   = p_buf;
     61a:	64 87       	std	Z+12, r22	; 0x0c
     61c:	75 87       	std	Z+13, r23	; 0x0d

	if (p_node->p_buf == NULL)
     61e:	67 2b       	or	r22, r23
     620:	31 f4       	brne	.+12     	; 0x62e <qbufferCreate+0x2e>
	{
		p_node->length = 0;
     622:	10 86       	std	Z+8, r1	; 0x08
     624:	11 86       	std	Z+9, r1	; 0x09
     626:	12 86       	std	Z+10, r1	; 0x0a
     628:	13 86       	std	Z+11, r1	; 0x0b
		ret = false;
     62a:	80 e0       	ldi	r24, 0x00	; 0
     62c:	08 95       	ret

}

bool qbufferCreate(qbuffer_t *p_node, uint8_t *p_buf, uint32_t length)
{
	bool ret = true;
     62e:	81 e0       	ldi	r24, 0x01	; 1
		p_node->length = 0;
		ret = false;
	}

	return ret;
}
     630:	08 95       	ret

00000632 <qbufferWrite>:

bool qbufferWrite(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
     632:	4f 92       	push	r4
     634:	5f 92       	push	r5
     636:	6f 92       	push	r6
     638:	7f 92       	push	r7
     63a:	8f 92       	push	r8
     63c:	9f 92       	push	r9
     63e:	af 92       	push	r10
     640:	bf 92       	push	r11
     642:	cf 92       	push	r12
     644:	df 92       	push	r13
     646:	ef 92       	push	r14
     648:	ff 92       	push	r15
     64a:	0f 93       	push	r16
     64c:	1f 93       	push	r17
     64e:	cf 93       	push	r28
     650:	df 93       	push	r29
     652:	fc 01       	movw	r30, r24
     654:	8b 01       	movw	r16, r22
     656:	49 01       	movw	r8, r18
     658:	5a 01       	movw	r10, r20
	bool ret = true;
	uint32_t index;
	uint32_t next_index;
	uint32_t i;

	if (p_node->p_buf == NULL) return false;
     65a:	84 85       	ldd	r24, Z+12	; 0x0c
     65c:	95 85       	ldd	r25, Z+13	; 0x0d
     65e:	89 2b       	or	r24, r25
     660:	e1 f1       	breq	.+120    	; 0x6da <qbufferWrite+0xa8>
     662:	40 e0       	ldi	r20, 0x00	; 0
     664:	50 e0       	ldi	r21, 0x00	; 0
     666:	ba 01       	movw	r22, r20
     668:	31 c0       	rjmp	.+98     	; 0x6cc <qbufferWrite+0x9a>


	for (i=0; i<length; i++)
	{
		index      = p_node->ptr_in;
     66a:	c0 80       	ld	r12, Z
     66c:	d1 80       	ldd	r13, Z+1	; 0x01
     66e:	e2 80       	ldd	r14, Z+2	; 0x02
     670:	f3 80       	ldd	r15, Z+3	; 0x03
		next_index = p_node->ptr_in + 1;
     672:	d7 01       	movw	r26, r14
     674:	c6 01       	movw	r24, r12
     676:	01 96       	adiw	r24, 0x01	; 1
     678:	a1 1d       	adc	r26, r1
     67a:	b1 1d       	adc	r27, r1

		if (next_index == p_node->length)
     67c:	40 84       	ldd	r4, Z+8	; 0x08
     67e:	51 84       	ldd	r5, Z+9	; 0x09
     680:	62 84       	ldd	r6, Z+10	; 0x0a
     682:	73 84       	ldd	r7, Z+11	; 0x0b
     684:	84 15       	cp	r24, r4
     686:	95 05       	cpc	r25, r5
     688:	a6 05       	cpc	r26, r6
     68a:	b7 05       	cpc	r27, r7
     68c:	19 f4       	brne	.+6      	; 0x694 <qbufferWrite+0x62>
		{
			next_index = 0;;
     68e:	80 e0       	ldi	r24, 0x00	; 0
     690:	90 e0       	ldi	r25, 0x00	; 0
     692:	dc 01       	movw	r26, r24
		}

		if (next_index != p_node->ptr_out)
     694:	44 80       	ldd	r4, Z+4	; 0x04
     696:	55 80       	ldd	r5, Z+5	; 0x05
     698:	66 80       	ldd	r6, Z+6	; 0x06
     69a:	77 80       	ldd	r7, Z+7	; 0x07
     69c:	84 15       	cp	r24, r4
     69e:	95 05       	cpc	r25, r5
     6a0:	a6 05       	cpc	r26, r6
     6a2:	b7 05       	cpc	r27, r7
     6a4:	e1 f0       	breq	.+56     	; 0x6de <qbufferWrite+0xac>
		{
			p_node->p_buf[index] = p_data[i];
     6a6:	c4 85       	ldd	r28, Z+12	; 0x0c
     6a8:	d5 85       	ldd	r29, Z+13	; 0x0d
     6aa:	cc 0e       	add	r12, r28
     6ac:	dd 1e       	adc	r13, r29
     6ae:	78 01       	movw	r14, r16
     6b0:	e4 0e       	add	r14, r20
     6b2:	f5 1e       	adc	r15, r21
     6b4:	e7 01       	movw	r28, r14
     6b6:	28 81       	ld	r18, Y
     6b8:	e6 01       	movw	r28, r12
     6ba:	28 83       	st	Y, r18
			p_node->ptr_in       = next_index;
     6bc:	80 83       	st	Z, r24
     6be:	91 83       	std	Z+1, r25	; 0x01
     6c0:	a2 83       	std	Z+2, r26	; 0x02
     6c2:	b3 83       	std	Z+3, r27	; 0x03
	uint32_t i;

	if (p_node->p_buf == NULL) return false;


	for (i=0; i<length; i++)
     6c4:	4f 5f       	subi	r20, 0xFF	; 255
     6c6:	5f 4f       	sbci	r21, 0xFF	; 255
     6c8:	6f 4f       	sbci	r22, 0xFF	; 255
     6ca:	7f 4f       	sbci	r23, 0xFF	; 255
     6cc:	48 15       	cp	r20, r8
     6ce:	59 05       	cpc	r21, r9
     6d0:	6a 05       	cpc	r22, r10
     6d2:	7b 05       	cpc	r23, r11
     6d4:	50 f2       	brcs	.-108    	; 0x66a <qbufferWrite+0x38>
	return ret;
}

bool qbufferWrite(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = true;
     6d6:	81 e0       	ldi	r24, 0x01	; 1
     6d8:	03 c0       	rjmp	.+6      	; 0x6e0 <qbufferWrite+0xae>
	uint32_t index;
	uint32_t next_index;
	uint32_t i;

	if (p_node->p_buf == NULL) return false;
     6da:	80 e0       	ldi	r24, 0x00	; 0
     6dc:	01 c0       	rjmp	.+2      	; 0x6e0 <qbufferWrite+0xae>
			p_node->p_buf[index] = p_data[i];
			p_node->ptr_in       = next_index;
		}
		else
		{
			ret = false; // ERR_FULL
     6de:	80 e0       	ldi	r24, 0x00	; 0
			break;
		}
	}

	return ret;
}
     6e0:	df 91       	pop	r29
     6e2:	cf 91       	pop	r28
     6e4:	1f 91       	pop	r17
     6e6:	0f 91       	pop	r16
     6e8:	ff 90       	pop	r15
     6ea:	ef 90       	pop	r14
     6ec:	df 90       	pop	r13
     6ee:	cf 90       	pop	r12
     6f0:	bf 90       	pop	r11
     6f2:	af 90       	pop	r10
     6f4:	9f 90       	pop	r9
     6f6:	8f 90       	pop	r8
     6f8:	7f 90       	pop	r7
     6fa:	6f 90       	pop	r6
     6fc:	5f 90       	pop	r5
     6fe:	4f 90       	pop	r4
     700:	08 95       	ret

00000702 <qbufferRead>:

bool qbufferRead(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
     702:	4f 92       	push	r4
     704:	5f 92       	push	r5
     706:	6f 92       	push	r6
     708:	7f 92       	push	r7
     70a:	8f 92       	push	r8
     70c:	9f 92       	push	r9
     70e:	af 92       	push	r10
     710:	bf 92       	push	r11
     712:	cf 92       	push	r12
     714:	df 92       	push	r13
     716:	ef 92       	push	r14
     718:	ff 92       	push	r15
     71a:	0f 93       	push	r16
     71c:	1f 93       	push	r17
     71e:	cf 93       	push	r28
     720:	df 93       	push	r29
     722:	fc 01       	movw	r30, r24
     724:	cb 01       	movw	r24, r22
     726:	49 01       	movw	r8, r18
     728:	5a 01       	movw	r10, r20
	bool ret = true;
	uint32_t index;
	uint32_t next_index;
	uint32_t i;

	if (p_node->p_buf == NULL) return false;
     72a:	24 85       	ldd	r18, Z+12	; 0x0c
     72c:	35 85       	ldd	r19, Z+13	; 0x0d
     72e:	23 2b       	or	r18, r19
     730:	e1 f1       	breq	.+120    	; 0x7aa <qbufferRead+0xa8>
     732:	40 e0       	ldi	r20, 0x00	; 0
     734:	50 e0       	ldi	r21, 0x00	; 0
     736:	ba 01       	movw	r22, r20
     738:	31 c0       	rjmp	.+98     	; 0x79c <qbufferRead+0x9a>


	for (i=0; i<length; i++)
	{
		index      = p_node->ptr_out;
     73a:	04 81       	ldd	r16, Z+4	; 0x04
     73c:	15 81       	ldd	r17, Z+5	; 0x05
     73e:	26 81       	ldd	r18, Z+6	; 0x06
     740:	37 81       	ldd	r19, Z+7	; 0x07
		next_index = p_node->ptr_out + 1;
     742:	68 01       	movw	r12, r16
     744:	79 01       	movw	r14, r18
     746:	af ef       	ldi	r26, 0xFF	; 255
     748:	ca 1a       	sub	r12, r26
     74a:	da 0a       	sbc	r13, r26
     74c:	ea 0a       	sbc	r14, r26
     74e:	fa 0a       	sbc	r15, r26

		if (next_index == p_node->length)
     750:	40 84       	ldd	r4, Z+8	; 0x08
     752:	51 84       	ldd	r5, Z+9	; 0x09
     754:	62 84       	ldd	r6, Z+10	; 0x0a
     756:	73 84       	ldd	r7, Z+11	; 0x0b
     758:	c4 14       	cp	r12, r4
     75a:	d5 04       	cpc	r13, r5
     75c:	e6 04       	cpc	r14, r6
     75e:	f7 04       	cpc	r15, r7
     760:	19 f4       	brne	.+6      	; 0x768 <qbufferRead+0x66>
		{
			next_index = 0;
     762:	c1 2c       	mov	r12, r1
     764:	d1 2c       	mov	r13, r1
     766:	76 01       	movw	r14, r12
		}

		if (index != p_node->ptr_in)
     768:	40 80       	ld	r4, Z
     76a:	51 80       	ldd	r5, Z+1	; 0x01
     76c:	62 80       	ldd	r6, Z+2	; 0x02
     76e:	73 80       	ldd	r7, Z+3	; 0x03
     770:	04 15       	cp	r16, r4
     772:	15 05       	cpc	r17, r5
     774:	26 05       	cpc	r18, r6
     776:	37 05       	cpc	r19, r7
     778:	d1 f0       	breq	.+52     	; 0x7ae <qbufferRead+0xac>
		{
			p_data[i]       = p_node->p_buf[index];
     77a:	dc 01       	movw	r26, r24
     77c:	a4 0f       	add	r26, r20
     77e:	b5 1f       	adc	r27, r21
     780:	c4 85       	ldd	r28, Z+12	; 0x0c
     782:	d5 85       	ldd	r29, Z+13	; 0x0d
     784:	c0 0f       	add	r28, r16
     786:	d1 1f       	adc	r29, r17
     788:	28 81       	ld	r18, Y
     78a:	2c 93       	st	X, r18
			p_node->ptr_out = next_index;
     78c:	c4 82       	std	Z+4, r12	; 0x04
     78e:	d5 82       	std	Z+5, r13	; 0x05
     790:	e6 82       	std	Z+6, r14	; 0x06
     792:	f7 82       	std	Z+7, r15	; 0x07
	uint32_t i;

	if (p_node->p_buf == NULL) return false;


	for (i=0; i<length; i++)
     794:	4f 5f       	subi	r20, 0xFF	; 255
     796:	5f 4f       	sbci	r21, 0xFF	; 255
     798:	6f 4f       	sbci	r22, 0xFF	; 255
     79a:	7f 4f       	sbci	r23, 0xFF	; 255
     79c:	48 15       	cp	r20, r8
     79e:	59 05       	cpc	r21, r9
     7a0:	6a 05       	cpc	r22, r10
     7a2:	7b 05       	cpc	r23, r11
     7a4:	50 f2       	brcs	.-108    	; 0x73a <qbufferRead+0x38>
	return ret;
}

bool qbufferRead(qbuffer_t *p_node, uint8_t *p_data, uint32_t length)
{
	bool ret = true;
     7a6:	81 e0       	ldi	r24, 0x01	; 1
     7a8:	03 c0       	rjmp	.+6      	; 0x7b0 <qbufferRead+0xae>
	uint32_t index;
	uint32_t next_index;
	uint32_t i;

	if (p_node->p_buf == NULL) return false;
     7aa:	80 e0       	ldi	r24, 0x00	; 0
     7ac:	01 c0       	rjmp	.+2      	; 0x7b0 <qbufferRead+0xae>
			p_data[i]       = p_node->p_buf[index];
			p_node->ptr_out = next_index;
		}
		else
		{
			ret = false; // ERR_EMPTY
     7ae:	80 e0       	ldi	r24, 0x00	; 0
			break;
		}
	}

	return ret;
}
     7b0:	df 91       	pop	r29
     7b2:	cf 91       	pop	r28
     7b4:	1f 91       	pop	r17
     7b6:	0f 91       	pop	r16
     7b8:	ff 90       	pop	r15
     7ba:	ef 90       	pop	r14
     7bc:	df 90       	pop	r13
     7be:	cf 90       	pop	r12
     7c0:	bf 90       	pop	r11
     7c2:	af 90       	pop	r10
     7c4:	9f 90       	pop	r9
     7c6:	8f 90       	pop	r8
     7c8:	7f 90       	pop	r7
     7ca:	6f 90       	pop	r6
     7cc:	5f 90       	pop	r5
     7ce:	4f 90       	pop	r4
     7d0:	08 95       	ret

000007d2 <qbufferAvailable>:

uint32_t qbufferAvailable(qbuffer_t *p_node)
{
     7d2:	cf 92       	push	r12
     7d4:	df 92       	push	r13
     7d6:	ef 92       	push	r14
     7d8:	ff 92       	push	r15
     7da:	fc 01       	movw	r30, r24
	uint32_t length;


	length = (p_node->length + p_node->ptr_in - p_node->ptr_out) % p_node->length;
     7dc:	20 85       	ldd	r18, Z+8	; 0x08
     7de:	31 85       	ldd	r19, Z+9	; 0x09
     7e0:	42 85       	ldd	r20, Z+10	; 0x0a
     7e2:	53 85       	ldd	r21, Z+11	; 0x0b
     7e4:	80 81       	ld	r24, Z
     7e6:	91 81       	ldd	r25, Z+1	; 0x01
     7e8:	a2 81       	ldd	r26, Z+2	; 0x02
     7ea:	b3 81       	ldd	r27, Z+3	; 0x03
     7ec:	82 0f       	add	r24, r18
     7ee:	93 1f       	adc	r25, r19
     7f0:	a4 1f       	adc	r26, r20
     7f2:	b5 1f       	adc	r27, r21
     7f4:	c4 80       	ldd	r12, Z+4	; 0x04
     7f6:	d5 80       	ldd	r13, Z+5	; 0x05
     7f8:	e6 80       	ldd	r14, Z+6	; 0x06
     7fa:	f7 80       	ldd	r15, Z+7	; 0x07
     7fc:	bc 01       	movw	r22, r24
     7fe:	cd 01       	movw	r24, r26
     800:	6c 19       	sub	r22, r12
     802:	7d 09       	sbc	r23, r13
     804:	8e 09       	sbc	r24, r14
     806:	9f 09       	sbc	r25, r15
     808:	0e 94 16 11 	call	0x222c	; 0x222c <__udivmodsi4>

	return length;
}
     80c:	ff 90       	pop	r15
     80e:	ef 90       	pop	r14
     810:	df 90       	pop	r13
     812:	cf 90       	pop	r12
     814:	08 95       	ret

00000816 <cliLineClean>:
	}
	else
	{
		return false;
	}
}
     816:	fc 01       	movw	r30, r24
     818:	ef 5a       	subi	r30, 0xAF	; 175
     81a:	fd 4f       	sbci	r31, 0xFD	; 253
     81c:	10 82       	st	Z, r1
     81e:	31 97       	sbiw	r30, 0x01	; 1
     820:	10 82       	st	Z, r1
     822:	31 97       	sbiw	r30, 0x01	; 1
     824:	2f e2       	ldi	r18, 0x2F	; 47
     826:	20 83       	st	Z, r18
     828:	f0 97       	sbiw	r30, 0x30	; 48
     82a:	10 82       	st	Z, r1
     82c:	08 95       	ret

0000082e <cliLineAdd>:
     82e:	fc 01       	movw	r30, r24
     830:	ef 5a       	subi	r30, 0xAF	; 175
     832:	fe 4f       	sbci	r31, 0xFE	; 254
     834:	50 81       	ld	r21, Z
     836:	25 2f       	mov	r18, r21
     838:	30 e0       	ldi	r19, 0x00	; 0
     83a:	43 e3       	ldi	r20, 0x33	; 51
     83c:	42 9f       	mul	r20, r18
     83e:	d0 01       	movw	r26, r0
     840:	43 9f       	mul	r20, r19
     842:	b0 0d       	add	r27, r0
     844:	11 24       	eor	r1, r1
     846:	a8 0f       	add	r26, r24
     848:	b9 1f       	adc	r27, r25
     84a:	ad 5a       	subi	r26, 0xAD	; 173
     84c:	be 4f       	sbci	r27, 0xFE	; 254
     84e:	e2 53       	subi	r30, 0x32	; 50
     850:	ff 4f       	sbci	r31, 0xFF	; 255
     852:	01 90       	ld	r0, Z+
     854:	0d 92       	st	X+, r0
     856:	4a 95       	dec	r20
     858:	e1 f7       	brne	.-8      	; 0x852 <cliLineAdd+0x24>
     85a:	fc 01       	movw	r30, r24
     85c:	ee 5a       	subi	r30, 0xAE	; 174
     85e:	fe 4f       	sbci	r31, 0xFE	; 254
     860:	40 81       	ld	r20, Z
     862:	44 30       	cpi	r20, 0x04	; 4
     864:	10 f4       	brcc	.+4      	; 0x86a <cliLineAdd+0x3c>
     866:	4f 5f       	subi	r20, 0xFF	; 255
     868:	40 83       	st	Z, r20
     86a:	fc 01       	movw	r30, r24
     86c:	e0 5b       	subi	r30, 0xB0	; 176
     86e:	fe 4f       	sbci	r31, 0xFE	; 254
     870:	50 83       	st	Z, r21
     872:	2f 5f       	subi	r18, 0xFF	; 255
     874:	3f 4f       	sbci	r19, 0xFF	; 255
     876:	23 70       	andi	r18, 0x03	; 3
     878:	30 78       	andi	r19, 0x80	; 128
     87a:	33 23       	and	r19, r19
     87c:	34 f4       	brge	.+12     	; 0x88a <cliLineAdd+0x5c>
     87e:	21 50       	subi	r18, 0x01	; 1
     880:	31 09       	sbc	r19, r1
     882:	2c 6f       	ori	r18, 0xFC	; 252
     884:	3f 6f       	ori	r19, 0xFF	; 255
     886:	2f 5f       	subi	r18, 0xFF	; 255
     888:	3f 4f       	sbci	r19, 0xFF	; 255
     88a:	fc 01       	movw	r30, r24
     88c:	ef 5a       	subi	r30, 0xAF	; 175
     88e:	fe 4f       	sbci	r31, 0xFE	; 254
     890:	20 83       	st	Z, r18
     892:	32 97       	sbiw	r30, 0x02	; 2
     894:	21 e0       	ldi	r18, 0x01	; 1
     896:	20 83       	st	Z, r18
     898:	08 95       	ret

0000089a <cliToUpper>:
     89a:	fc 01       	movw	r30, r24
     89c:	20 e0       	ldi	r18, 0x00	; 0
     89e:	30 e0       	ldi	r19, 0x00	; 0
     8a0:	0e c0       	rjmp	.+28     	; 0x8be <cliToUpper+0x24>
     8a2:	df 01       	movw	r26, r30
     8a4:	a2 0f       	add	r26, r18
     8a6:	b3 1f       	adc	r27, r19
     8a8:	9c 91       	ld	r25, X
     8aa:	99 23       	and	r25, r25
     8ac:	59 f0       	breq	.+22     	; 0x8c4 <cliToUpper+0x2a>
     8ae:	4f e9       	ldi	r20, 0x9F	; 159
     8b0:	49 0f       	add	r20, r25
     8b2:	4a 31       	cpi	r20, 0x1A	; 26
     8b4:	08 f4       	brcc	.+2      	; 0x8b8 <cliToUpper+0x1e>
     8b6:	90 52       	subi	r25, 0x20	; 32
     8b8:	9c 93       	st	X, r25
     8ba:	2f 5f       	subi	r18, 0xFF	; 255
     8bc:	3f 4f       	sbci	r19, 0xFF	; 255
     8be:	2e 30       	cpi	r18, 0x0E	; 14
     8c0:	31 05       	cpc	r19, r1
     8c2:	78 f3       	brcs	.-34     	; 0x8a2 <cliToUpper+0x8>
     8c4:	2e 30       	cpi	r18, 0x0E	; 14
     8c6:	31 05       	cpc	r19, r1
     8c8:	29 f4       	brne	.+10     	; 0x8d4 <cliToUpper+0x3a>
     8ca:	21 50       	subi	r18, 0x01	; 1
     8cc:	31 09       	sbc	r19, r1
     8ce:	e2 0f       	add	r30, r18
     8d0:	f3 1f       	adc	r31, r19
     8d2:	10 82       	st	Z, r1
     8d4:	08 95       	ret

000008d6 <cliArgsGetStr>:
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	20 91 90 45 	lds	r18, 0x4590	; 0x804590 <cli_node+0x354>
     8dc:	30 91 91 45 	lds	r19, 0x4591	; 0x804591 <cli_node+0x355>
     8e0:	82 17       	cp	r24, r18
     8e2:	93 07       	cpc	r25, r19
     8e4:	58 f4       	brcc	.+22     	; 0x8fc <cliArgsGetStr+0x26>
     8e6:	e0 91 92 45 	lds	r30, 0x4592	; 0x804592 <cli_node+0x356>
     8ea:	f0 91 93 45 	lds	r31, 0x4593	; 0x804593 <cli_node+0x357>
     8ee:	88 0f       	add	r24, r24
     8f0:	99 1f       	adc	r25, r25
     8f2:	e8 0f       	add	r30, r24
     8f4:	f9 1f       	adc	r31, r25
     8f6:	80 81       	ld	r24, Z
     8f8:	91 81       	ldd	r25, Z+1	; 0x01
     8fa:	08 95       	ret
     8fc:	80 e0       	ldi	r24, 0x00	; 0
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	08 95       	ret

00000902 <cliArgsIsStr>:
     902:	28 2f       	mov	r18, r24
     904:	30 e0       	ldi	r19, 0x00	; 0
     906:	80 91 90 45 	lds	r24, 0x4590	; 0x804590 <cli_node+0x354>
     90a:	90 91 91 45 	lds	r25, 0x4591	; 0x804591 <cli_node+0x355>
     90e:	28 17       	cp	r18, r24
     910:	39 07       	cpc	r19, r25
     912:	88 f4       	brcc	.+34     	; 0x936 <cliArgsIsStr+0x34>
     914:	cb 01       	movw	r24, r22
     916:	e0 91 92 45 	lds	r30, 0x4592	; 0x804592 <cli_node+0x356>
     91a:	f0 91 93 45 	lds	r31, 0x4593	; 0x804593 <cli_node+0x357>
     91e:	22 0f       	add	r18, r18
     920:	33 1f       	adc	r19, r19
     922:	e2 0f       	add	r30, r18
     924:	f3 1f       	adc	r31, r19
     926:	60 81       	ld	r22, Z
     928:	71 81       	ldd	r23, Z+1	; 0x01
     92a:	0e 94 4e 14 	call	0x289c	; 0x289c <strcmp>
     92e:	89 2b       	or	r24, r25
     930:	21 f0       	breq	.+8      	; 0x93a <cliArgsIsStr+0x38>
     932:	80 e0       	ldi	r24, 0x00	; 0
     934:	08 95       	ret
     936:	80 e0       	ldi	r24, 0x00	; 0
     938:	08 95       	ret
     93a:	81 e0       	ldi	r24, 0x01	; 1
     93c:	08 95       	ret

0000093e <cliArgsGetFloat>:
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	20 91 90 45 	lds	r18, 0x4590	; 0x804590 <cli_node+0x354>
     944:	30 91 91 45 	lds	r19, 0x4591	; 0x804591 <cli_node+0x355>
     948:	82 17       	cp	r24, r18
     94a:	93 07       	cpc	r25, r19
     94c:	78 f4       	brcc	.+30     	; 0x96c <cliArgsGetFloat+0x2e>
     94e:	e0 91 92 45 	lds	r30, 0x4592	; 0x804592 <cli_node+0x356>
     952:	f0 91 93 45 	lds	r31, 0x4593	; 0x804593 <cli_node+0x357>
     956:	88 0f       	add	r24, r24
     958:	99 1f       	adc	r25, r25
     95a:	e8 0f       	add	r30, r24
     95c:	f9 1f       	adc	r31, r25
     95e:	60 e0       	ldi	r22, 0x00	; 0
     960:	70 e0       	ldi	r23, 0x00	; 0
     962:	80 81       	ld	r24, Z
     964:	91 81       	ldd	r25, Z+1	; 0x01
     966:	0e 94 a6 11 	call	0x234c	; 0x234c <strtod>
     96a:	08 95       	ret
     96c:	60 e0       	ldi	r22, 0x00	; 0
     96e:	70 e0       	ldi	r23, 0x00	; 0
     970:	cb 01       	movw	r24, r22
     972:	08 95       	ret

00000974 <cliArgsGetData>:
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	20 91 90 45 	lds	r18, 0x4590	; 0x804590 <cli_node+0x354>
     97a:	30 91 91 45 	lds	r19, 0x4591	; 0x804591 <cli_node+0x355>
     97e:	82 17       	cp	r24, r18
     980:	93 07       	cpc	r25, r19
     982:	88 f4       	brcc	.+34     	; 0x9a6 <cliArgsGetData+0x32>
     984:	e0 91 92 45 	lds	r30, 0x4592	; 0x804592 <cli_node+0x356>
     988:	f0 91 93 45 	lds	r31, 0x4593	; 0x804593 <cli_node+0x357>
     98c:	88 0f       	add	r24, r24
     98e:	99 1f       	adc	r25, r25
     990:	e8 0f       	add	r30, r24
     992:	f9 1f       	adc	r31, r25
     994:	40 e0       	ldi	r20, 0x00	; 0
     996:	50 e0       	ldi	r21, 0x00	; 0
     998:	60 e0       	ldi	r22, 0x00	; 0
     99a:	70 e0       	ldi	r23, 0x00	; 0
     99c:	80 81       	ld	r24, Z
     99e:	91 81       	ldd	r25, Z+1	; 0x01
     9a0:	0e 94 02 13 	call	0x2604	; 0x2604 <strtoul>
     9a4:	08 95       	ret
     9a6:	60 e0       	ldi	r22, 0x00	; 0
     9a8:	70 e0       	ldi	r23, 0x00	; 0
     9aa:	80 e0       	ldi	r24, 0x00	; 0
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	08 95       	ret

000009b0 <cliLineChange>:
     9b0:	1f 93       	push	r17
     9b2:	cf 93       	push	r28
     9b4:	df 93       	push	r29
     9b6:	fc 01       	movw	r30, r24
     9b8:	ee 5a       	subi	r30, 0xAE	; 174
     9ba:	fe 4f       	sbci	r31, 0xFE	; 254
     9bc:	20 81       	ld	r18, Z
     9be:	22 23       	and	r18, r18
     9c0:	09 f4       	brne	.+2      	; 0x9c4 <cliLineChange+0x14>
     9c2:	74 c0       	rjmp	.+232    	; 0xaac <cliLineChange+0xfc>
     9c4:	16 2f       	mov	r17, r22
     9c6:	ec 01       	movw	r28, r24
     9c8:	e2 50       	subi	r30, 0x02	; 2
     9ca:	ff 4f       	sbci	r31, 0xFF	; 255
     9cc:	80 81       	ld	r24, Z
     9ce:	88 23       	and	r24, r24
     9d0:	79 f0       	breq	.+30     	; 0x9f0 <cliLineChange+0x40>
     9d2:	1f 92       	push	r1
     9d4:	8f 93       	push	r24
     9d6:	84 e0       	ldi	r24, 0x04	; 4
     9d8:	90 e4       	ldi	r25, 0x40	; 64
     9da:	9f 93       	push	r25
     9dc:	8f 93       	push	r24
     9de:	88 81       	ld	r24, Y
     9e0:	8f 93       	push	r24
     9e2:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <uartPrintf>
     9e6:	0f 90       	pop	r0
     9e8:	0f 90       	pop	r0
     9ea:	0f 90       	pop	r0
     9ec:	0f 90       	pop	r0
     9ee:	0f 90       	pop	r0
     9f0:	fe 01       	movw	r30, r28
     9f2:	ef 5a       	subi	r30, 0xAF	; 175
     9f4:	fd 4f       	sbci	r31, 0xFD	; 253
     9f6:	80 81       	ld	r24, Z
     9f8:	88 23       	and	r24, r24
     9fa:	79 f0       	breq	.+30     	; 0xa1a <cliLineChange+0x6a>
     9fc:	1f 92       	push	r1
     9fe:	8f 93       	push	r24
     a00:	8a e0       	ldi	r24, 0x0A	; 10
     a02:	90 e4       	ldi	r25, 0x40	; 64
     a04:	9f 93       	push	r25
     a06:	8f 93       	push	r24
     a08:	88 81       	ld	r24, Y
     a0a:	8f 93       	push	r24
     a0c:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <uartPrintf>
     a10:	0f 90       	pop	r0
     a12:	0f 90       	pop	r0
     a14:	0f 90       	pop	r0
     a16:	0f 90       	pop	r0
     a18:	0f 90       	pop	r0
     a1a:	11 30       	cpi	r17, 0x01	; 1
     a1c:	f1 f4       	brne	.+60     	; 0xa5a <cliLineChange+0xaa>
     a1e:	fe 01       	movw	r30, r28
     a20:	e1 5b       	subi	r30, 0xB1	; 177
     a22:	fe 4f       	sbci	r31, 0xFE	; 254
     a24:	80 81       	ld	r24, Z
     a26:	88 23       	and	r24, r24
     a28:	21 f0       	breq	.+8      	; 0xa32 <cliLineChange+0x82>
     a2a:	32 96       	adiw	r30, 0x02	; 2
     a2c:	80 81       	ld	r24, Z
     a2e:	31 97       	sbiw	r30, 0x01	; 1
     a30:	80 83       	st	Z, r24
     a32:	fe 01       	movw	r30, r28
     a34:	e0 5b       	subi	r30, 0xB0	; 176
     a36:	fe 4f       	sbci	r31, 0xFE	; 254
     a38:	80 81       	ld	r24, Z
     a3a:	de 01       	movw	r26, r28
     a3c:	ae 5a       	subi	r26, 0xAE	; 174
     a3e:	be 4f       	sbci	r27, 0xFE	; 254
     a40:	6c 91       	ld	r22, X
     a42:	70 e0       	ldi	r23, 0x00	; 0
     a44:	9b 01       	movw	r18, r22
     a46:	28 0f       	add	r18, r24
     a48:	31 1d       	adc	r19, r1
     a4a:	87 fd       	sbrc	r24, 7
     a4c:	3a 95       	dec	r19
     a4e:	c9 01       	movw	r24, r18
     a50:	01 97       	sbiw	r24, 0x01	; 1
     a52:	0e 94 02 11 	call	0x2204	; 0x2204 <__divmodhi4>
     a56:	80 83       	st	Z, r24
     a58:	10 c0       	rjmp	.+32     	; 0xa7a <cliLineChange+0xca>
     a5a:	fe 01       	movw	r30, r28
     a5c:	e0 5b       	subi	r30, 0xB0	; 176
     a5e:	fe 4f       	sbci	r31, 0xFE	; 254
     a60:	80 81       	ld	r24, Z
     a62:	08 2e       	mov	r0, r24
     a64:	00 0c       	add	r0, r0
     a66:	99 0b       	sbc	r25, r25
     a68:	01 96       	adiw	r24, 0x01	; 1
     a6a:	de 01       	movw	r26, r28
     a6c:	ae 5a       	subi	r26, 0xAE	; 174
     a6e:	be 4f       	sbci	r27, 0xFE	; 254
     a70:	6c 91       	ld	r22, X
     a72:	70 e0       	ldi	r23, 0x00	; 0
     a74:	0e 94 02 11 	call	0x2204	; 0x2204 <__divmodhi4>
     a78:	80 83       	st	Z, r24
     a7a:	de 01       	movw	r26, r28
     a7c:	a1 5e       	subi	r26, 0xE1	; 225
     a7e:	bd 4f       	sbci	r27, 0xFD	; 253
     a80:	fe 01       	movw	r30, r28
     a82:	33 e3       	ldi	r19, 0x33	; 51
     a84:	83 9f       	mul	r24, r19
     a86:	e0 0d       	add	r30, r0
     a88:	f1 1d       	adc	r31, r1
     a8a:	11 24       	eor	r1, r1
     a8c:	ed 5a       	subi	r30, 0xAD	; 173
     a8e:	fe 4f       	sbci	r31, 0xFE	; 254
     a90:	83 e3       	ldi	r24, 0x33	; 51
     a92:	01 90       	ld	r0, Z+
     a94:	0d 92       	st	X+, r0
     a96:	8a 95       	dec	r24
     a98:	e1 f7       	brne	.-8      	; 0xa92 <cliLineChange+0xe2>
     a9a:	fe 01       	movw	r30, r28
     a9c:	ef 5a       	subi	r30, 0xAF	; 175
     a9e:	fd 4f       	sbci	r31, 0xFD	; 253
     aa0:	80 81       	ld	r24, Z
     aa2:	31 97       	sbiw	r30, 0x01	; 1
     aa4:	80 83       	st	Z, r24
     aa6:	c1 5b       	subi	r28, 0xB1	; 177
     aa8:	de 4f       	sbci	r29, 0xFE	; 254
     aaa:	18 82       	st	Y, r1
     aac:	df 91       	pop	r29
     aae:	cf 91       	pop	r28
     ab0:	1f 91       	pop	r17
     ab2:	08 95       	ret

00000ab4 <cliParseArgs>:
     ab4:	cf 92       	push	r12
     ab6:	df 92       	push	r13
     ab8:	ef 92       	push	r14
     aba:	ff 92       	push	r15
     abc:	0f 93       	push	r16
     abe:	1f 93       	push	r17
     ac0:	cf 93       	push	r28
     ac2:	df 93       	push	r29
     ac4:	00 d0       	rcall	.+0      	; 0xac6 <cliParseArgs+0x12>
     ac6:	cd b7       	in	r28, 0x3d	; 61
     ac8:	de b7       	in	r29, 0x3e	; 62
     aca:	6c 01       	movw	r12, r24
     acc:	fc 01       	movw	r30, r24
     ace:	e3 5f       	subi	r30, 0xF3	; 243
     ad0:	fe 4f       	sbci	r31, 0xFE	; 254
     ad2:	10 82       	st	Z, r1
     ad4:	11 82       	std	Z+1, r1	; 0x01
     ad6:	7c 01       	movw	r14, r24
     ad8:	81 ef       	ldi	r24, 0xF1	; 241
     ada:	e8 1a       	sub	r14, r24
     adc:	8e ef       	ldi	r24, 0xFE	; 254
     ade:	f8 0a       	sbc	r15, r24
     ae0:	f7 01       	movw	r30, r14
     ae2:	10 82       	st	Z, r1
     ae4:	11 82       	std	Z+1, r1	; 0x01
     ae6:	ae 01       	movw	r20, r28
     ae8:	4f 5f       	subi	r20, 0xFF	; 255
     aea:	5f 4f       	sbci	r21, 0xFF	; 255
     aec:	60 e1       	ldi	r22, 0x10	; 16
     aee:	70 e4       	ldi	r23, 0x40	; 64
     af0:	c6 01       	movw	r24, r12
     af2:	81 5e       	subi	r24, 0xE1	; 225
     af4:	9d 4f       	sbci	r25, 0xFD	; 253
     af6:	0e 94 5e 14 	call	0x28bc	; 0x28bc <strtok_r>
     afa:	20 e0       	ldi	r18, 0x00	; 0
     afc:	30 e0       	ldi	r19, 0x00	; 0
     afe:	14 c0       	rjmp	.+40     	; 0xb28 <cliParseArgs+0x74>
     b00:	89 01       	movw	r16, r18
     b02:	0f 5f       	subi	r16, 0xFF	; 255
     b04:	1f 4f       	sbci	r17, 0xFF	; 255
     b06:	22 0f       	add	r18, r18
     b08:	33 1f       	adc	r19, r19
     b0a:	f7 01       	movw	r30, r14
     b0c:	e2 0f       	add	r30, r18
     b0e:	f3 1f       	adc	r31, r19
     b10:	80 83       	st	Z, r24
     b12:	91 83       	std	Z+1, r25	; 0x01
     b14:	ae 01       	movw	r20, r28
     b16:	4f 5f       	subi	r20, 0xFF	; 255
     b18:	5f 4f       	sbci	r21, 0xFF	; 255
     b1a:	60 e1       	ldi	r22, 0x10	; 16
     b1c:	70 e4       	ldi	r23, 0x40	; 64
     b1e:	80 e0       	ldi	r24, 0x00	; 0
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	0e 94 5e 14 	call	0x28bc	; 0x28bc <strtok_r>
     b26:	98 01       	movw	r18, r16
     b28:	00 97       	sbiw	r24, 0x00	; 0
     b2a:	51 f7       	brne	.-44     	; 0xb00 <cliParseArgs+0x4c>
     b2c:	f6 01       	movw	r30, r12
     b2e:	e3 5f       	subi	r30, 0xF3	; 243
     b30:	fe 4f       	sbci	r31, 0xFE	; 254
     b32:	20 83       	st	Z, r18
     b34:	31 83       	std	Z+1, r19	; 0x01
     b36:	23 2b       	or	r18, r19
     b38:	11 f4       	brne	.+4      	; 0xb3e <cliParseArgs+0x8a>
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	01 c0       	rjmp	.+2      	; 0xb40 <cliParseArgs+0x8c>
     b3e:	81 e0       	ldi	r24, 0x01	; 1
     b40:	0f 90       	pop	r0
     b42:	0f 90       	pop	r0
     b44:	df 91       	pop	r29
     b46:	cf 91       	pop	r28
     b48:	1f 91       	pop	r17
     b4a:	0f 91       	pop	r16
     b4c:	ff 90       	pop	r15
     b4e:	ef 90       	pop	r14
     b50:	df 90       	pop	r13
     b52:	cf 90       	pop	r12
     b54:	08 95       	ret

00000b56 <cliOpen>:
     b56:	0f 93       	push	r16
     b58:	1f 93       	push	r17
     b5a:	cf 93       	push	r28
     b5c:	df 93       	push	r29
     b5e:	ec e3       	ldi	r30, 0x3C	; 60
     b60:	f2 e4       	ldi	r31, 0x42	; 66
     b62:	80 83       	st	Z, r24
     b64:	95 81       	ldd	r25, Z+5	; 0x05
     b66:	99 23       	and	r25, r25
     b68:	69 f0       	breq	.+26     	; 0xb84 <cliOpen+0x2e>
     b6a:	00 91 3d 42 	lds	r16, 0x423D	; 0x80423d <cli_node+0x1>
     b6e:	10 91 3e 42 	lds	r17, 0x423E	; 0x80423e <cli_node+0x2>
     b72:	20 91 3f 42 	lds	r18, 0x423F	; 0x80423f <cli_node+0x3>
     b76:	30 91 40 42 	lds	r19, 0x4240	; 0x804240 <cli_node+0x4>
     b7a:	04 17       	cp	r16, r20
     b7c:	15 07       	cpc	r17, r21
     b7e:	26 07       	cpc	r18, r22
     b80:	37 07       	cpc	r19, r23
     b82:	49 f0       	breq	.+18     	; 0xb96 <cliOpen+0x40>
     b84:	cc e3       	ldi	r28, 0x3C	; 60
     b86:	d2 e4       	ldi	r29, 0x42	; 66
     b88:	49 83       	std	Y+1, r20	; 0x01
     b8a:	5a 83       	std	Y+2, r21	; 0x02
     b8c:	6b 83       	std	Y+3, r22	; 0x03
     b8e:	7c 83       	std	Y+4, r23	; 0x04
     b90:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <uartOpen>
     b94:	8d 83       	std	Y+5, r24	; 0x05
     b96:	80 91 41 42 	lds	r24, 0x4241	; 0x804241 <cli_node+0x5>
     b9a:	df 91       	pop	r29
     b9c:	cf 91       	pop	r28
     b9e:	1f 91       	pop	r17
     ba0:	0f 91       	pop	r16
     ba2:	08 95       	ret

00000ba4 <cliPrintf>:
     ba4:	cf 93       	push	r28
     ba6:	df 93       	push	r29
     ba8:	cd b7       	in	r28, 0x3d	; 61
     baa:	de b7       	in	r29, 0x3e	; 62
     bac:	9e 01       	movw	r18, r28
     bae:	2b 5f       	subi	r18, 0xFB	; 251
     bb0:	3f 4f       	sbci	r19, 0xFF	; 255
     bb2:	f9 01       	movw	r30, r18
     bb4:	41 91       	ld	r20, Z+
     bb6:	51 91       	ld	r21, Z+
     bb8:	9f 01       	movw	r18, r30
     bba:	60 e0       	ldi	r22, 0x00	; 0
     bbc:	71 e0       	ldi	r23, 0x01	; 1
     bbe:	89 e4       	ldi	r24, 0x49	; 73
     bc0:	92 e4       	ldi	r25, 0x42	; 66
     bc2:	0e 94 8d 14 	call	0x291a	; 0x291a <vsnprintf>
     bc6:	9c 01       	movw	r18, r24
     bc8:	99 0f       	add	r25, r25
     bca:	44 0b       	sbc	r20, r20
     bcc:	55 0b       	sbc	r21, r21
     bce:	69 e4       	ldi	r22, 0x49	; 73
     bd0:	72 e4       	ldi	r23, 0x42	; 66
     bd2:	80 91 3c 42 	lds	r24, 0x423C	; 0x80423c <cli_node>
     bd6:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <uartWrite>
     bda:	df 91       	pop	r29
     bdc:	cf 91       	pop	r28
     bde:	08 95       	ret

00000be0 <cliPrintf_P>:
     be0:	cf 93       	push	r28
     be2:	df 93       	push	r29
     be4:	cd b7       	in	r28, 0x3d	; 61
     be6:	de b7       	in	r29, 0x3e	; 62
     be8:	9e 01       	movw	r18, r28
     bea:	2b 5f       	subi	r18, 0xFB	; 251
     bec:	3f 4f       	sbci	r19, 0xFF	; 255
     bee:	f9 01       	movw	r30, r18
     bf0:	41 91       	ld	r20, Z+
     bf2:	51 91       	ld	r21, Z+
     bf4:	9f 01       	movw	r18, r30
     bf6:	60 e0       	ldi	r22, 0x00	; 0
     bf8:	71 e0       	ldi	r23, 0x01	; 1
     bfa:	89 e4       	ldi	r24, 0x49	; 73
     bfc:	92 e4       	ldi	r25, 0x42	; 66
     bfe:	0e 94 c0 14 	call	0x2980	; 0x2980 <vsnprintf_P>
     c02:	9c 01       	movw	r18, r24
     c04:	99 0f       	add	r25, r25
     c06:	44 0b       	sbc	r20, r20
     c08:	55 0b       	sbc	r21, r21
     c0a:	69 e4       	ldi	r22, 0x49	; 73
     c0c:	72 e4       	ldi	r23, 0x42	; 66
     c0e:	80 91 3c 42 	lds	r24, 0x423C	; 0x80423c <cli_node>
     c12:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <uartWrite>
     c16:	df 91       	pop	r29
     c18:	cf 91       	pop	r28
     c1a:	08 95       	ret

00000c1c <cliRunCmd>:
     c1c:	0f 93       	push	r16
     c1e:	1f 93       	push	r17
     c20:	cf 93       	push	r28
     c22:	df 93       	push	r29
     c24:	8c 01       	movw	r16, r24
     c26:	0e 94 5a 05 	call	0xab4	; 0xab4 <cliParseArgs>
     c2a:	88 23       	and	r24, r24
     c2c:	09 f4       	brne	.+2      	; 0xc30 <cliRunCmd+0x14>
     c2e:	50 c0       	rjmp	.+160    	; 0xcd0 <cliRunCmd+0xb4>
     c30:	8d ed       	ldi	r24, 0xDD	; 221
     c32:	91 e0       	ldi	r25, 0x01	; 1
     c34:	9f 93       	push	r25
     c36:	8f 93       	push	r24
     c38:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
     c3c:	f8 01       	movw	r30, r16
     c3e:	e1 5f       	subi	r30, 0xF1	; 241
     c40:	fe 4f       	sbci	r31, 0xFE	; 254
     c42:	80 81       	ld	r24, Z
     c44:	91 81       	ldd	r25, Z+1	; 0x01
     c46:	0e 94 4d 04 	call	0x89a	; 0x89a <cliToUpper>
     c4a:	0f 90       	pop	r0
     c4c:	0f 90       	pop	r0
     c4e:	c0 e0       	ldi	r28, 0x00	; 0
     c50:	d0 e0       	ldi	r29, 0x00	; 0
     c52:	36 c0       	rjmp	.+108    	; 0xcc0 <cliRunCmd+0xa4>
     c54:	be 01       	movw	r22, r28
     c56:	62 95       	swap	r22
     c58:	72 95       	swap	r23
     c5a:	70 7f       	andi	r23, 0xF0	; 240
     c5c:	76 27       	eor	r23, r22
     c5e:	60 7f       	andi	r22, 0xF0	; 240
     c60:	76 27       	eor	r23, r22
     c62:	6c 5a       	subi	r22, 0xAC	; 172
     c64:	7d 4f       	sbci	r23, 0xFD	; 253
     c66:	60 0f       	add	r22, r16
     c68:	71 1f       	adc	r23, r17
     c6a:	f8 01       	movw	r30, r16
     c6c:	e1 5f       	subi	r30, 0xF1	; 241
     c6e:	fe 4f       	sbci	r31, 0xFE	; 254
     c70:	80 81       	ld	r24, Z
     c72:	91 81       	ldd	r25, Z+1	; 0x01
     c74:	0e 94 4e 14 	call	0x289c	; 0x289c <strcmp>
     c78:	89 2b       	or	r24, r25
     c7a:	09 f5       	brne	.+66     	; 0xcbe <cliRunCmd+0xa2>
     c7c:	f8 01       	movw	r30, r16
     c7e:	e3 5f       	subi	r30, 0xF3	; 243
     c80:	fe 4f       	sbci	r31, 0xFE	; 254
     c82:	20 81       	ld	r18, Z
     c84:	31 81       	ldd	r19, Z+1	; 0x01
     c86:	21 50       	subi	r18, 0x01	; 1
     c88:	31 09       	sbc	r19, r1
     c8a:	c8 01       	movw	r24, r16
     c8c:	8c 5a       	subi	r24, 0xAC	; 172
     c8e:	9c 4f       	sbci	r25, 0xFC	; 252
     c90:	fc 01       	movw	r30, r24
     c92:	20 83       	st	Z, r18
     c94:	31 83       	std	Z+1, r19	; 0x01
     c96:	98 01       	movw	r18, r16
     c98:	2f 5e       	subi	r18, 0xEF	; 239
     c9a:	3e 4f       	sbci	r19, 0xFE	; 254
     c9c:	32 96       	adiw	r30, 0x02	; 2
     c9e:	20 83       	st	Z, r18
     ca0:	31 83       	std	Z+1, r19	; 0x01
     ca2:	c2 95       	swap	r28
     ca4:	d2 95       	swap	r29
     ca6:	d0 7f       	andi	r29, 0xF0	; 240
     ca8:	dc 27       	eor	r29, r28
     caa:	c0 7f       	andi	r28, 0xF0	; 240
     cac:	dc 27       	eor	r29, r28
     cae:	c0 0f       	add	r28, r16
     cb0:	d1 1f       	adc	r29, r17
     cb2:	ce 59       	subi	r28, 0x9E	; 158
     cb4:	dd 4f       	sbci	r29, 0xFD	; 253
     cb6:	e8 81       	ld	r30, Y
     cb8:	f9 81       	ldd	r31, Y+1	; 0x01
     cba:	09 95       	icall
     cbc:	09 c0       	rjmp	.+18     	; 0xcd0 <cliRunCmd+0xb4>
     cbe:	21 96       	adiw	r28, 0x01	; 1
     cc0:	f8 01       	movw	r30, r16
     cc2:	ee 5a       	subi	r30, 0xAE	; 174
     cc4:	fd 4f       	sbci	r31, 0xFD	; 253
     cc6:	80 81       	ld	r24, Z
     cc8:	91 81       	ldd	r25, Z+1	; 0x01
     cca:	c8 17       	cp	r28, r24
     ccc:	d9 07       	cpc	r29, r25
     cce:	10 f2       	brcs	.-124    	; 0xc54 <cliRunCmd+0x38>
     cd0:	80 e0       	ldi	r24, 0x00	; 0
     cd2:	df 91       	pop	r29
     cd4:	cf 91       	pop	r28
     cd6:	1f 91       	pop	r17
     cd8:	0f 91       	pop	r16
     cda:	08 95       	ret

00000cdc <cliShowPrompt>:
     cdc:	8a ed       	ldi	r24, 0xDA	; 218
     cde:	91 e0       	ldi	r25, 0x01	; 1
     ce0:	9f 93       	push	r25
     ce2:	8f 93       	push	r24
     ce4:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
     ce8:	84 ed       	ldi	r24, 0xD4	; 212
     cea:	91 e0       	ldi	r25, 0x01	; 1
     cec:	9f 93       	push	r25
     cee:	8f 93       	push	r24
     cf0:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
     cf4:	0f 90       	pop	r0
     cf6:	0f 90       	pop	r0
     cf8:	0f 90       	pop	r0
     cfa:	0f 90       	pop	r0
     cfc:	08 95       	ret

00000cfe <cliUpdate>:
     cfe:	ef 92       	push	r14
     d00:	ff 92       	push	r15
     d02:	0f 93       	push	r16
     d04:	1f 93       	push	r17
     d06:	cf 93       	push	r28
     d08:	df 93       	push	r29
     d0a:	cd b7       	in	r28, 0x3d	; 61
     d0c:	de b7       	in	r29, 0x3e	; 62
     d0e:	29 97       	sbiw	r28, 0x09	; 9
     d10:	cd bf       	out	0x3d, r28	; 61
     d12:	de bf       	out	0x3e, r29	; 62
     d14:	8c 01       	movw	r16, r24
     d16:	69 87       	std	Y+9, r22	; 0x09
     d18:	dc 01       	movw	r26, r24
     d1a:	1c 96       	adiw	r26, 0x0c	; 12
     d1c:	8c 91       	ld	r24, X
     d1e:	81 11       	cpse	r24, r1
     d20:	16 c1       	rjmp	.+556    	; 0xf4e <cliUpdate+0x250>
     d22:	6d 30       	cpi	r22, 0x0D	; 13
     d24:	51 f0       	breq	.+20     	; 0xd3a <cliUpdate+0x3c>
     d26:	20 f4       	brcc	.+8      	; 0xd30 <cliUpdate+0x32>
     d28:	68 30       	cpi	r22, 0x08	; 8
     d2a:	09 f4       	brne	.+2      	; 0xd2e <cliUpdate+0x30>
     d2c:	56 c0       	rjmp	.+172    	; 0xdda <cliUpdate+0xdc>
     d2e:	a2 c0       	rjmp	.+324    	; 0xe74 <cliUpdate+0x176>
     d30:	6b 31       	cpi	r22, 0x1B	; 27
     d32:	c9 f0       	breq	.+50     	; 0xd66 <cliUpdate+0x68>
     d34:	6f 37       	cpi	r22, 0x7F	; 127
     d36:	d9 f0       	breq	.+54     	; 0xd6e <cliUpdate+0x70>
     d38:	9d c0       	rjmp	.+314    	; 0xe74 <cliUpdate+0x176>
     d3a:	f8 01       	movw	r30, r16
     d3c:	e1 5e       	subi	r30, 0xE1	; 225
     d3e:	fd 4f       	sbci	r31, 0xFD	; 253
     d40:	82 a9       	ldd	r24, Z+50	; 0x32
     d42:	88 23       	and	r24, r24
     d44:	31 f0       	breq	.+12     	; 0xd52 <cliUpdate+0x54>
     d46:	c8 01       	movw	r24, r16
     d48:	0e 94 17 04 	call	0x82e	; 0x82e <cliLineAdd>
     d4c:	c8 01       	movw	r24, r16
     d4e:	0e 94 0e 06 	call	0xc1c	; 0xc1c <cliRunCmd>
     d52:	f8 01       	movw	r30, r16
     d54:	e1 5e       	subi	r30, 0xE1	; 225
     d56:	fd 4f       	sbci	r31, 0xFD	; 253
     d58:	12 aa       	std	Z+50, r1	; 0x32
     d5a:	11 aa       	std	Z+49, r1	; 0x31
     d5c:	10 82       	st	Z, r1
     d5e:	c8 01       	movw	r24, r16
     d60:	0e 94 6e 06 	call	0xcdc	; 0xcdc <cliShowPrompt>
     d64:	f4 c0       	rjmp	.+488    	; 0xf4e <cliUpdate+0x250>
     d66:	81 e0       	ldi	r24, 0x01	; 1
     d68:	f8 01       	movw	r30, r16
     d6a:	84 87       	std	Z+12, r24	; 0x0c
     d6c:	f0 c0       	rjmp	.+480    	; 0xf4e <cliUpdate+0x250>
     d6e:	f8 01       	movw	r30, r16
     d70:	e1 5e       	subi	r30, 0xE1	; 225
     d72:	fd 4f       	sbci	r31, 0xFD	; 253
     d74:	61 a9       	ldd	r22, Z+49	; 0x31
     d76:	f2 a8       	ldd	r15, Z+50	; 0x32
     d78:	6f 15       	cp	r22, r15
     d7a:	08 f0       	brcs	.+2      	; 0xd7e <cliUpdate+0x80>
     d7c:	e8 c0       	rjmp	.+464    	; 0xf4e <cliUpdate+0x250>
     d7e:	7f 2d       	mov	r23, r15
     d80:	76 1b       	sub	r23, r22
     d82:	21 e0       	ldi	r18, 0x01	; 1
     d84:	30 e0       	ldi	r19, 0x00	; 0
     d86:	12 c0       	rjmp	.+36     	; 0xdac <cliUpdate+0xae>
     d88:	c9 01       	movw	r24, r18
     d8a:	86 0f       	add	r24, r22
     d8c:	91 1d       	adc	r25, r1
     d8e:	ac 01       	movw	r20, r24
     d90:	41 50       	subi	r20, 0x01	; 1
     d92:	51 09       	sbc	r21, r1
     d94:	f8 01       	movw	r30, r16
     d96:	e1 5e       	subi	r30, 0xE1	; 225
     d98:	fd 4f       	sbci	r31, 0xFD	; 253
     d9a:	df 01       	movw	r26, r30
     d9c:	a8 0f       	add	r26, r24
     d9e:	b9 1f       	adc	r27, r25
     da0:	8c 91       	ld	r24, X
     da2:	e4 0f       	add	r30, r20
     da4:	f5 1f       	adc	r31, r21
     da6:	80 83       	st	Z, r24
     da8:	2f 5f       	subi	r18, 0xFF	; 255
     daa:	3f 4f       	sbci	r19, 0xFF	; 255
     dac:	87 2f       	mov	r24, r23
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	28 17       	cp	r18, r24
     db2:	39 07       	cpc	r19, r25
     db4:	4c f3       	brlt	.-46     	; 0xd88 <cliUpdate+0x8a>
     db6:	af ef       	ldi	r26, 0xFF	; 255
     db8:	af 0d       	add	r26, r15
     dba:	f8 01       	movw	r30, r16
     dbc:	e1 5e       	subi	r30, 0xE1	; 225
     dbe:	fd 4f       	sbci	r31, 0xFD	; 253
     dc0:	a2 ab       	std	Z+50, r26	; 0x32
     dc2:	ea 0f       	add	r30, r26
     dc4:	f1 1d       	adc	r31, r1
     dc6:	10 82       	st	Z, r1
     dc8:	83 ef       	ldi	r24, 0xF3	; 243
     dca:	91 e0       	ldi	r25, 0x01	; 1
     dcc:	9f 93       	push	r25
     dce:	8f 93       	push	r24
     dd0:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
     dd4:	0f 90       	pop	r0
     dd6:	0f 90       	pop	r0
     dd8:	ba c0       	rjmp	.+372    	; 0xf4e <cliUpdate+0x250>
     dda:	f8 01       	movw	r30, r16
     ddc:	e1 5e       	subi	r30, 0xE1	; 225
     dde:	fd 4f       	sbci	r31, 0xFD	; 253
     de0:	82 a9       	ldd	r24, Z+50	; 0x32
     de2:	88 23       	and	r24, r24
     de4:	a9 f1       	breq	.+106    	; 0xe50 <cliUpdate+0x152>
     de6:	61 a9       	ldd	r22, Z+49	; 0x31
     de8:	66 23       	and	r22, r22
     dea:	91 f1       	breq	.+100    	; 0xe50 <cliUpdate+0x152>
     dec:	86 13       	cpse	r24, r22
     dee:	05 c0       	rjmp	.+10     	; 0xdfa <cliUpdate+0xfc>
     df0:	81 50       	subi	r24, 0x01	; 1
     df2:	82 ab       	std	Z+50, r24	; 0x32
     df4:	e8 0f       	add	r30, r24
     df6:	f1 1d       	adc	r31, r1
     df8:	10 82       	st	Z, r1
     dfa:	f8 01       	movw	r30, r16
     dfc:	e1 5e       	subi	r30, 0xE1	; 225
     dfe:	fd 4f       	sbci	r31, 0xFD	; 253
     e00:	f2 a8       	ldd	r15, Z+50	; 0x32
     e02:	6f 15       	cp	r22, r15
     e04:	28 f5       	brcc	.+74     	; 0xe50 <cliUpdate+0x152>
     e06:	7f 2d       	mov	r23, r15
     e08:	76 1b       	sub	r23, r22
     e0a:	20 e0       	ldi	r18, 0x00	; 0
     e0c:	30 e0       	ldi	r19, 0x00	; 0
     e0e:	12 c0       	rjmp	.+36     	; 0xe34 <cliUpdate+0x136>
     e10:	c9 01       	movw	r24, r18
     e12:	86 0f       	add	r24, r22
     e14:	91 1d       	adc	r25, r1
     e16:	ac 01       	movw	r20, r24
     e18:	41 50       	subi	r20, 0x01	; 1
     e1a:	51 09       	sbc	r21, r1
     e1c:	f8 01       	movw	r30, r16
     e1e:	e1 5e       	subi	r30, 0xE1	; 225
     e20:	fd 4f       	sbci	r31, 0xFD	; 253
     e22:	df 01       	movw	r26, r30
     e24:	a8 0f       	add	r26, r24
     e26:	b9 1f       	adc	r27, r25
     e28:	8c 91       	ld	r24, X
     e2a:	e4 0f       	add	r30, r20
     e2c:	f5 1f       	adc	r31, r21
     e2e:	80 83       	st	Z, r24
     e30:	2f 5f       	subi	r18, 0xFF	; 255
     e32:	3f 4f       	sbci	r19, 0xFF	; 255
     e34:	87 2f       	mov	r24, r23
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	28 17       	cp	r18, r24
     e3a:	39 07       	cpc	r19, r25
     e3c:	4c f3       	brlt	.-46     	; 0xe10 <cliUpdate+0x112>
     e3e:	af ef       	ldi	r26, 0xFF	; 255
     e40:	af 0d       	add	r26, r15
     e42:	f8 01       	movw	r30, r16
     e44:	e1 5e       	subi	r30, 0xE1	; 225
     e46:	fd 4f       	sbci	r31, 0xFD	; 253
     e48:	a2 ab       	std	Z+50, r26	; 0x32
     e4a:	ea 0f       	add	r30, r26
     e4c:	f1 1d       	adc	r31, r1
     e4e:	10 82       	st	Z, r1
     e50:	f8 01       	movw	r30, r16
     e52:	e1 5e       	subi	r30, 0xE1	; 225
     e54:	fd 4f       	sbci	r31, 0xFD	; 253
     e56:	81 a9       	ldd	r24, Z+49	; 0x31
     e58:	88 23       	and	r24, r24
     e5a:	09 f4       	brne	.+2      	; 0xe5e <cliUpdate+0x160>
     e5c:	78 c0       	rjmp	.+240    	; 0xf4e <cliUpdate+0x250>
     e5e:	81 50       	subi	r24, 0x01	; 1
     e60:	81 ab       	std	Z+49, r24	; 0x31
     e62:	8b ee       	ldi	r24, 0xEB	; 235
     e64:	91 e0       	ldi	r25, 0x01	; 1
     e66:	9f 93       	push	r25
     e68:	8f 93       	push	r24
     e6a:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
     e6e:	0f 90       	pop	r0
     e70:	0f 90       	pop	r0
     e72:	6d c0       	rjmp	.+218    	; 0xf4e <cliUpdate+0x250>
     e74:	f8 01       	movw	r30, r16
     e76:	e1 5e       	subi	r30, 0xE1	; 225
     e78:	fd 4f       	sbci	r31, 0xFD	; 253
     e7a:	42 a9       	ldd	r20, Z+50	; 0x32
     e7c:	24 2f       	mov	r18, r20
     e7e:	30 e0       	ldi	r19, 0x00	; 0
     e80:	2f 5f       	subi	r18, 0xFF	; 255
     e82:	3f 4f       	sbci	r19, 0xFF	; 255
     e84:	80 a9       	ldd	r24, Z+48	; 0x30
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	28 17       	cp	r18, r24
     e8a:	39 07       	cpc	r19, r25
     e8c:	0c f0       	brlt	.+2      	; 0xe90 <cliUpdate+0x192>
     e8e:	5f c0       	rjmp	.+190    	; 0xf4e <cliUpdate+0x250>
     e90:	81 a9       	ldd	r24, Z+49	; 0x31
     e92:	48 13       	cpse	r20, r24
     e94:	1c c0       	rjmp	.+56     	; 0xece <cliUpdate+0x1d0>
     e96:	21 e0       	ldi	r18, 0x01	; 1
     e98:	30 e0       	ldi	r19, 0x00	; 0
     e9a:	40 e0       	ldi	r20, 0x00	; 0
     e9c:	50 e0       	ldi	r21, 0x00	; 0
     e9e:	be 01       	movw	r22, r28
     ea0:	67 5f       	subi	r22, 0xF7	; 247
     ea2:	7f 4f       	sbci	r23, 0xFF	; 255
     ea4:	d8 01       	movw	r26, r16
     ea6:	8c 91       	ld	r24, X
     ea8:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <uartWrite>
     eac:	f8 01       	movw	r30, r16
     eae:	e1 5e       	subi	r30, 0xE1	; 225
     eb0:	fd 4f       	sbci	r31, 0xFD	; 253
     eb2:	91 a9       	ldd	r25, Z+49	; 0x31
     eb4:	df 01       	movw	r26, r30
     eb6:	a9 0f       	add	r26, r25
     eb8:	b1 1d       	adc	r27, r1
     eba:	89 85       	ldd	r24, Y+9	; 0x09
     ebc:	8c 93       	st	X, r24
     ebe:	82 a9       	ldd	r24, Z+50	; 0x32
     ec0:	8f 5f       	subi	r24, 0xFF	; 255
     ec2:	82 ab       	std	Z+50, r24	; 0x32
     ec4:	9f 5f       	subi	r25, 0xFF	; 255
     ec6:	91 ab       	std	Z+49, r25	; 0x31
     ec8:	e8 0f       	add	r30, r24
     eca:	f1 1d       	adc	r31, r1
     ecc:	10 82       	st	Z, r1
     ece:	f8 01       	movw	r30, r16
     ed0:	e1 5e       	subi	r30, 0xE1	; 225
     ed2:	fd 4f       	sbci	r31, 0xFD	; 253
     ed4:	f1 a8       	ldd	r15, Z+49	; 0x31
     ed6:	72 a9       	ldd	r23, Z+50	; 0x32
     ed8:	f7 16       	cp	r15, r23
     eda:	c8 f5       	brcc	.+114    	; 0xf4e <cliUpdate+0x250>
     edc:	a7 2f       	mov	r26, r23
     ede:	af 19       	sub	r26, r15
     ee0:	20 e0       	ldi	r18, 0x00	; 0
     ee2:	30 e0       	ldi	r19, 0x00	; 0
     ee4:	12 c0       	rjmp	.+36     	; 0xf0a <cliUpdate+0x20c>
     ee6:	87 2f       	mov	r24, r23
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	82 1b       	sub	r24, r18
     eec:	93 0b       	sbc	r25, r19
     eee:	fc 01       	movw	r30, r24
     ef0:	31 97       	sbiw	r30, 0x01	; 1
     ef2:	a8 01       	movw	r20, r16
     ef4:	41 5e       	subi	r20, 0xE1	; 225
     ef6:	5d 4f       	sbci	r21, 0xFD	; 253
     ef8:	e4 0f       	add	r30, r20
     efa:	f5 1f       	adc	r31, r21
     efc:	60 81       	ld	r22, Z
     efe:	fa 01       	movw	r30, r20
     f00:	e8 0f       	add	r30, r24
     f02:	f9 1f       	adc	r31, r25
     f04:	60 83       	st	Z, r22
     f06:	2f 5f       	subi	r18, 0xFF	; 255
     f08:	3f 4f       	sbci	r19, 0xFF	; 255
     f0a:	8a 2f       	mov	r24, r26
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	28 17       	cp	r18, r24
     f10:	39 07       	cpc	r19, r25
     f12:	4c f3       	brlt	.-46     	; 0xee6 <cliUpdate+0x1e8>
     f14:	89 85       	ldd	r24, Y+9	; 0x09
     f16:	f8 01       	movw	r30, r16
     f18:	e1 5e       	subi	r30, 0xE1	; 225
     f1a:	fd 4f       	sbci	r31, 0xFD	; 253
     f1c:	9f 01       	movw	r18, r30
     f1e:	2f 0d       	add	r18, r15
     f20:	31 1d       	adc	r19, r1
     f22:	d9 01       	movw	r26, r18
     f24:	8c 93       	st	X, r24
     f26:	7f 5f       	subi	r23, 0xFF	; 255
     f28:	72 ab       	std	Z+50, r23	; 0x32
     f2a:	b1 e0       	ldi	r27, 0x01	; 1
     f2c:	bf 0d       	add	r27, r15
     f2e:	b1 ab       	std	Z+49, r27	; 0x31
     f30:	e7 0f       	add	r30, r23
     f32:	f1 1d       	adc	r31, r1
     f34:	10 82       	st	Z, r1
     f36:	1f 92       	push	r1
     f38:	8f 93       	push	r24
     f3a:	80 ee       	ldi	r24, 0xE0	; 224
     f3c:	91 e0       	ldi	r25, 0x01	; 1
     f3e:	9f 93       	push	r25
     f40:	8f 93       	push	r24
     f42:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
     f46:	0f 90       	pop	r0
     f48:	0f 90       	pop	r0
     f4a:	0f 90       	pop	r0
     f4c:	0f 90       	pop	r0
     f4e:	f8 01       	movw	r30, r16
     f50:	84 85       	ldd	r24, Z+12	; 0x0c
     f52:	82 30       	cpi	r24, 0x02	; 2
     f54:	69 f0       	breq	.+26     	; 0xf70 <cliUpdate+0x272>
     f56:	18 f4       	brcc	.+6      	; 0xf5e <cliUpdate+0x260>
     f58:	81 30       	cpi	r24, 0x01	; 1
     f5a:	39 f0       	breq	.+14     	; 0xf6a <cliUpdate+0x26c>
     f5c:	ce c0       	rjmp	.+412    	; 0x10fa <cliUpdate+0x3fc>
     f5e:	83 30       	cpi	r24, 0x03	; 3
     f60:	59 f0       	breq	.+22     	; 0xf78 <cliUpdate+0x27a>
     f62:	84 30       	cpi	r24, 0x04	; 4
     f64:	09 f4       	brne	.+2      	; 0xf68 <cliUpdate+0x26a>
     f66:	c8 c0       	rjmp	.+400    	; 0x10f8 <cliUpdate+0x3fa>
     f68:	c8 c0       	rjmp	.+400    	; 0x10fa <cliUpdate+0x3fc>
     f6a:	82 e0       	ldi	r24, 0x02	; 2
     f6c:	84 87       	std	Z+12, r24	; 0x0c
     f6e:	c5 c0       	rjmp	.+394    	; 0x10fa <cliUpdate+0x3fc>
     f70:	83 e0       	ldi	r24, 0x03	; 3
     f72:	f8 01       	movw	r30, r16
     f74:	84 87       	std	Z+12, r24	; 0x0c
     f76:	c1 c0       	rjmp	.+386    	; 0x10fa <cliUpdate+0x3fc>
     f78:	14 86       	std	Z+12, r1	; 0x0c
     f7a:	89 85       	ldd	r24, Y+9	; 0x09
     f7c:	84 34       	cpi	r24, 0x44	; 68
     f7e:	c1 f4       	brne	.+48     	; 0xfb0 <cliUpdate+0x2b2>
     f80:	f8 01       	movw	r30, r16
     f82:	e1 5e       	subi	r30, 0xE1	; 225
     f84:	fd 4f       	sbci	r31, 0xFD	; 253
     f86:	91 a9       	ldd	r25, Z+49	; 0x31
     f88:	99 23       	and	r25, r25
     f8a:	91 f0       	breq	.+36     	; 0xfb0 <cliUpdate+0x2b2>
     f8c:	91 50       	subi	r25, 0x01	; 1
     f8e:	91 ab       	std	Z+49, r25	; 0x31
     f90:	9b e1       	ldi	r25, 0x1B	; 27
     f92:	99 83       	std	Y+1, r25	; 0x01
     f94:	9b e5       	ldi	r25, 0x5B	; 91
     f96:	9a 83       	std	Y+2, r25	; 0x02
     f98:	8b 83       	std	Y+3, r24	; 0x03
     f9a:	23 e0       	ldi	r18, 0x03	; 3
     f9c:	30 e0       	ldi	r19, 0x00	; 0
     f9e:	40 e0       	ldi	r20, 0x00	; 0
     fa0:	50 e0       	ldi	r21, 0x00	; 0
     fa2:	be 01       	movw	r22, r28
     fa4:	6f 5f       	subi	r22, 0xFF	; 255
     fa6:	7f 4f       	sbci	r23, 0xFF	; 255
     fa8:	f8 01       	movw	r30, r16
     faa:	80 81       	ld	r24, Z
     fac:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <uartWrite>
     fb0:	89 85       	ldd	r24, Y+9	; 0x09
     fb2:	83 34       	cpi	r24, 0x43	; 67
     fb4:	c9 f4       	brne	.+50     	; 0xfe8 <cliUpdate+0x2ea>
     fb6:	f8 01       	movw	r30, r16
     fb8:	e1 5e       	subi	r30, 0xE1	; 225
     fba:	fd 4f       	sbci	r31, 0xFD	; 253
     fbc:	91 a9       	ldd	r25, Z+49	; 0x31
     fbe:	22 a9       	ldd	r18, Z+50	; 0x32
     fc0:	92 17       	cp	r25, r18
     fc2:	90 f4       	brcc	.+36     	; 0xfe8 <cliUpdate+0x2ea>
     fc4:	9f 5f       	subi	r25, 0xFF	; 255
     fc6:	91 ab       	std	Z+49, r25	; 0x31
     fc8:	9b e1       	ldi	r25, 0x1B	; 27
     fca:	99 83       	std	Y+1, r25	; 0x01
     fcc:	9b e5       	ldi	r25, 0x5B	; 91
     fce:	9a 83       	std	Y+2, r25	; 0x02
     fd0:	8b 83       	std	Y+3, r24	; 0x03
     fd2:	23 e0       	ldi	r18, 0x03	; 3
     fd4:	30 e0       	ldi	r19, 0x00	; 0
     fd6:	40 e0       	ldi	r20, 0x00	; 0
     fd8:	50 e0       	ldi	r21, 0x00	; 0
     fda:	be 01       	movw	r22, r28
     fdc:	6f 5f       	subi	r22, 0xFF	; 255
     fde:	7f 4f       	sbci	r23, 0xFF	; 255
     fe0:	d8 01       	movw	r26, r16
     fe2:	8c 91       	ld	r24, X
     fe4:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <uartWrite>
     fe8:	89 85       	ldd	r24, Y+9	; 0x09
     fea:	81 34       	cpi	r24, 0x41	; 65
     fec:	89 f4       	brne	.+34     	; 0x1010 <cliUpdate+0x312>
     fee:	61 e0       	ldi	r22, 0x01	; 1
     ff0:	c8 01       	movw	r24, r16
     ff2:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <cliLineChange>
     ff6:	c8 01       	movw	r24, r16
     ff8:	81 5e       	subi	r24, 0xE1	; 225
     ffa:	9d 4f       	sbci	r25, 0xFD	; 253
     ffc:	9f 93       	push	r25
     ffe:	8f 93       	push	r24
    1000:	f8 01       	movw	r30, r16
    1002:	80 81       	ld	r24, Z
    1004:	8f 93       	push	r24
    1006:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <uartPrintf>
    100a:	0f 90       	pop	r0
    100c:	0f 90       	pop	r0
    100e:	0f 90       	pop	r0
    1010:	89 85       	ldd	r24, Y+9	; 0x09
    1012:	82 34       	cpi	r24, 0x42	; 66
    1014:	89 f4       	brne	.+34     	; 0x1038 <cliUpdate+0x33a>
    1016:	60 e0       	ldi	r22, 0x00	; 0
    1018:	c8 01       	movw	r24, r16
    101a:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <cliLineChange>
    101e:	c8 01       	movw	r24, r16
    1020:	81 5e       	subi	r24, 0xE1	; 225
    1022:	9d 4f       	sbci	r25, 0xFD	; 253
    1024:	9f 93       	push	r25
    1026:	8f 93       	push	r24
    1028:	d8 01       	movw	r26, r16
    102a:	8c 91       	ld	r24, X
    102c:	8f 93       	push	r24
    102e:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <uartPrintf>
    1032:	0f 90       	pop	r0
    1034:	0f 90       	pop	r0
    1036:	0f 90       	pop	r0
    1038:	89 85       	ldd	r24, Y+9	; 0x09
    103a:	81 33       	cpi	r24, 0x31	; 49
    103c:	e9 f4       	brne	.+58     	; 0x1078 <cliUpdate+0x37a>
    103e:	78 01       	movw	r14, r16
    1040:	b1 ee       	ldi	r27, 0xE1	; 225
    1042:	eb 1a       	sub	r14, r27
    1044:	bd ef       	ldi	r27, 0xFD	; 253
    1046:	fb 0a       	sbc	r15, r27
    1048:	f7 01       	movw	r30, r14
    104a:	81 a9       	ldd	r24, Z+49	; 0x31
    104c:	1f 92       	push	r1
    104e:	8f 93       	push	r24
    1050:	84 e0       	ldi	r24, 0x04	; 4
    1052:	90 e4       	ldi	r25, 0x40	; 64
    1054:	9f 93       	push	r25
    1056:	8f 93       	push	r24
    1058:	d8 01       	movw	r26, r16
    105a:	8c 91       	ld	r24, X
    105c:	8f 93       	push	r24
    105e:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <uartPrintf>
    1062:	f7 01       	movw	r30, r14
    1064:	11 aa       	std	Z+49, r1	; 0x31
    1066:	84 e0       	ldi	r24, 0x04	; 4
    1068:	d8 01       	movw	r26, r16
    106a:	1c 96       	adiw	r26, 0x0c	; 12
    106c:	8c 93       	st	X, r24
    106e:	0f 90       	pop	r0
    1070:	0f 90       	pop	r0
    1072:	0f 90       	pop	r0
    1074:	0f 90       	pop	r0
    1076:	0f 90       	pop	r0
    1078:	89 85       	ldd	r24, Y+9	; 0x09
    107a:	84 33       	cpi	r24, 0x34	; 52
    107c:	f1 f5       	brne	.+124    	; 0x10fa <cliUpdate+0x3fc>
    107e:	f8 01       	movw	r30, r16
    1080:	e1 5e       	subi	r30, 0xE1	; 225
    1082:	fd 4f       	sbci	r31, 0xFD	; 253
    1084:	21 a9       	ldd	r18, Z+49	; 0x31
    1086:	82 a9       	ldd	r24, Z+50	; 0x32
    1088:	28 17       	cp	r18, r24
    108a:	98 f4       	brcc	.+38     	; 0x10b2 <cliUpdate+0x3b4>
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	82 1b       	sub	r24, r18
    1090:	91 09       	sbc	r25, r1
    1092:	9f 93       	push	r25
    1094:	8f 93       	push	r24
    1096:	87 e1       	ldi	r24, 0x17	; 23
    1098:	90 e4       	ldi	r25, 0x40	; 64
    109a:	9f 93       	push	r25
    109c:	8f 93       	push	r24
    109e:	f8 01       	movw	r30, r16
    10a0:	80 81       	ld	r24, Z
    10a2:	8f 93       	push	r24
    10a4:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <uartPrintf>
    10a8:	0f 90       	pop	r0
    10aa:	0f 90       	pop	r0
    10ac:	0f 90       	pop	r0
    10ae:	0f 90       	pop	r0
    10b0:	0f 90       	pop	r0
    10b2:	f8 01       	movw	r30, r16
    10b4:	e1 5e       	subi	r30, 0xE1	; 225
    10b6:	fd 4f       	sbci	r31, 0xFD	; 253
    10b8:	81 a9       	ldd	r24, Z+49	; 0x31
    10ba:	22 a9       	ldd	r18, Z+50	; 0x32
    10bc:	28 17       	cp	r18, r24
    10be:	98 f4       	brcc	.+38     	; 0x10e6 <cliUpdate+0x3e8>
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	82 1b       	sub	r24, r18
    10c4:	91 09       	sbc	r25, r1
    10c6:	9f 93       	push	r25
    10c8:	8f 93       	push	r24
    10ca:	84 e0       	ldi	r24, 0x04	; 4
    10cc:	90 e4       	ldi	r25, 0x40	; 64
    10ce:	9f 93       	push	r25
    10d0:	8f 93       	push	r24
    10d2:	d8 01       	movw	r26, r16
    10d4:	8c 91       	ld	r24, X
    10d6:	8f 93       	push	r24
    10d8:	0e 94 63 0e 	call	0x1cc6	; 0x1cc6 <uartPrintf>
    10dc:	0f 90       	pop	r0
    10de:	0f 90       	pop	r0
    10e0:	0f 90       	pop	r0
    10e2:	0f 90       	pop	r0
    10e4:	0f 90       	pop	r0
    10e6:	f8 01       	movw	r30, r16
    10e8:	e1 5e       	subi	r30, 0xE1	; 225
    10ea:	fd 4f       	sbci	r31, 0xFD	; 253
    10ec:	82 a9       	ldd	r24, Z+50	; 0x32
    10ee:	81 ab       	std	Z+49, r24	; 0x31
    10f0:	84 e0       	ldi	r24, 0x04	; 4
    10f2:	f8 01       	movw	r30, r16
    10f4:	84 87       	std	Z+12, r24	; 0x0c
    10f6:	01 c0       	rjmp	.+2      	; 0x10fa <cliUpdate+0x3fc>
    10f8:	14 86       	std	Z+12, r1	; 0x0c
    10fa:	80 e0       	ldi	r24, 0x00	; 0
    10fc:	29 96       	adiw	r28, 0x09	; 9
    10fe:	cd bf       	out	0x3d, r28	; 61
    1100:	de bf       	out	0x3e, r29	; 62
    1102:	df 91       	pop	r29
    1104:	cf 91       	pop	r28
    1106:	1f 91       	pop	r17
    1108:	0f 91       	pop	r16
    110a:	ff 90       	pop	r15
    110c:	ef 90       	pop	r14
    110e:	08 95       	ret

00001110 <cliMain>:
    1110:	cf 93       	push	r28
    1112:	c0 91 41 42 	lds	r28, 0x4241	; 0x804241 <cli_node+0x5>
    1116:	cc 23       	and	r28, r28
    1118:	89 f0       	breq	.+34     	; 0x113c <cliMain+0x2c>
    111a:	80 91 3c 42 	lds	r24, 0x423C	; 0x80423c <cli_node>
    111e:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <uartAvailable>
    1122:	67 2b       	or	r22, r23
    1124:	68 2b       	or	r22, r24
    1126:	69 2b       	or	r22, r25
    1128:	49 f0       	breq	.+18     	; 0x113c <cliMain+0x2c>
    112a:	80 91 3c 42 	lds	r24, 0x423C	; 0x80423c <cli_node>
    112e:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <uartRead>
    1132:	68 2f       	mov	r22, r24
    1134:	8c e3       	ldi	r24, 0x3C	; 60
    1136:	92 e4       	ldi	r25, 0x42	; 66
    1138:	0e 94 7f 06 	call	0xcfe	; 0xcfe <cliUpdate>
    113c:	8c 2f       	mov	r24, r28
    113e:	cf 91       	pop	r28
    1140:	08 95       	ret

00001142 <cliShowList>:
    1142:	cf 93       	push	r28
    1144:	df 93       	push	r29
    1146:	81 ed       	ldi	r24, 0xD1	; 209
    1148:	91 e0       	ldi	r25, 0x01	; 1
    114a:	9f 93       	push	r25
    114c:	8f 93       	push	r24
    114e:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    1152:	81 eb       	ldi	r24, 0xB1	; 177
    1154:	91 e0       	ldi	r25, 0x01	; 1
    1156:	9f 93       	push	r25
    1158:	8f 93       	push	r24
    115a:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    115e:	0f 90       	pop	r0
    1160:	0f 90       	pop	r0
    1162:	0f 90       	pop	r0
    1164:	0f 90       	pop	r0
    1166:	c0 e0       	ldi	r28, 0x00	; 0
    1168:	d0 e0       	ldi	r29, 0x00	; 0
    116a:	18 c0       	rjmp	.+48     	; 0x119c <cliShowList+0x5a>
    116c:	ce 01       	movw	r24, r28
    116e:	82 95       	swap	r24
    1170:	92 95       	swap	r25
    1172:	90 7f       	andi	r25, 0xF0	; 240
    1174:	98 27       	eor	r25, r24
    1176:	80 7f       	andi	r24, 0xF0	; 240
    1178:	98 27       	eor	r25, r24
    117a:	80 57       	subi	r24, 0x70	; 112
    117c:	9b 4b       	sbci	r25, 0xBB	; 187
    117e:	9f 93       	push	r25
    1180:	8f 93       	push	r24
    1182:	0e 94 d2 05 	call	0xba4	; 0xba4 <cliPrintf>
    1186:	8e ea       	ldi	r24, 0xAE	; 174
    1188:	91 e0       	ldi	r25, 0x01	; 1
    118a:	9f 93       	push	r25
    118c:	8f 93       	push	r24
    118e:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    1192:	21 96       	adiw	r28, 0x01	; 1
    1194:	0f 90       	pop	r0
    1196:	0f 90       	pop	r0
    1198:	0f 90       	pop	r0
    119a:	0f 90       	pop	r0
    119c:	80 91 8e 44 	lds	r24, 0x448E	; 0x80448e <cli_node+0x252>
    11a0:	90 91 8f 44 	lds	r25, 0x448F	; 0x80448f <cli_node+0x253>
    11a4:	c8 17       	cp	r28, r24
    11a6:	d9 07       	cpc	r29, r25
    11a8:	08 f3       	brcs	.-62     	; 0x116c <cliShowList+0x2a>
    11aa:	8e e8       	ldi	r24, 0x8E	; 142
    11ac:	91 e0       	ldi	r25, 0x01	; 1
    11ae:	9f 93       	push	r25
    11b0:	8f 93       	push	r24
    11b2:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    11b6:	0f 90       	pop	r0
    11b8:	0f 90       	pop	r0
    11ba:	df 91       	pop	r29
    11bc:	cf 91       	pop	r28
    11be:	08 95       	ret

000011c0 <cliMemoryDump>:
    11c0:	6f 92       	push	r6
    11c2:	7f 92       	push	r7
    11c4:	8f 92       	push	r8
    11c6:	9f 92       	push	r9
    11c8:	af 92       	push	r10
    11ca:	bf 92       	push	r11
    11cc:	cf 92       	push	r12
    11ce:	df 92       	push	r13
    11d0:	ef 92       	push	r14
    11d2:	ff 92       	push	r15
    11d4:	0f 93       	push	r16
    11d6:	1f 93       	push	r17
    11d8:	cf 93       	push	r28
    11da:	df 93       	push	r29
    11dc:	00 d0       	rcall	.+0      	; 0x11de <cliMemoryDump+0x1e>
    11de:	00 d0       	rcall	.+0      	; 0x11e0 <cliMemoryDump+0x20>
    11e0:	cd b7       	in	r28, 0x3d	; 61
    11e2:	de b7       	in	r29, 0x3e	; 62
    11e4:	fc 01       	movw	r30, r24
    11e6:	20 81       	ld	r18, Z
    11e8:	31 81       	ldd	r19, Z+1	; 0x01
    11ea:	02 81       	ldd	r16, Z+2	; 0x02
    11ec:	13 81       	ldd	r17, Z+3	; 0x03
    11ee:	21 15       	cp	r18, r1
    11f0:	31 05       	cpc	r19, r1
    11f2:	49 f4       	brne	.+18     	; 0x1206 <cliMemoryDump+0x46>
    11f4:	8a e7       	ldi	r24, 0x7A	; 122
    11f6:	91 e0       	ldi	r25, 0x01	; 1
    11f8:	9f 93       	push	r25
    11fa:	8f 93       	push	r24
    11fc:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    1200:	0f 90       	pop	r0
    1202:	0f 90       	pop	r0
    1204:	a8 c0       	rjmp	.+336    	; 0x1356 <cliMemoryDump+0x196>
    1206:	22 30       	cpi	r18, 0x02	; 2
    1208:	31 05       	cpc	r19, r1
    120a:	5c f0       	brlt	.+22     	; 0x1222 <cliMemoryDump+0x62>
    120c:	40 e0       	ldi	r20, 0x00	; 0
    120e:	50 e0       	ldi	r21, 0x00	; 0
    1210:	60 e0       	ldi	r22, 0x00	; 0
    1212:	70 e0       	ldi	r23, 0x00	; 0
    1214:	f8 01       	movw	r30, r16
    1216:	82 81       	ldd	r24, Z+2	; 0x02
    1218:	93 81       	ldd	r25, Z+3	; 0x03
    121a:	0e 94 02 13 	call	0x2604	; 0x2604 <strtoul>
    121e:	3b 01       	movw	r6, r22
    1220:	04 c0       	rjmp	.+8      	; 0x122a <cliMemoryDump+0x6a>
    1222:	68 94       	set
    1224:	66 24       	eor	r6, r6
    1226:	64 f8       	bld	r6, 4
    1228:	71 2c       	mov	r7, r1
    122a:	f8 01       	movw	r30, r16
    122c:	80 81       	ld	r24, Z
    122e:	91 81       	ldd	r25, Z+1	; 0x01
    1230:	0e 94 0f 14 	call	0x281e	; 0x281e <atoi>
    1234:	6c 01       	movw	r12, r24
    1236:	8d e1       	ldi	r24, 0x1D	; 29
    1238:	90 e4       	ldi	r25, 0x40	; 64
    123a:	9f 93       	push	r25
    123c:	8f 93       	push	r24
    123e:	0e 94 d2 05 	call	0xba4	; 0xba4 <cliPrintf>
    1242:	0f 90       	pop	r0
    1244:	0f 90       	pop	r0
    1246:	46 01       	movw	r8, r12
    1248:	e1 2c       	mov	r14, r1
    124a:	f1 2c       	mov	r15, r1
    124c:	80 c0       	rjmp	.+256    	; 0x134e <cliMemoryDump+0x18e>
    124e:	c7 01       	movw	r24, r14
    1250:	83 70       	andi	r24, 0x03	; 3
    1252:	99 27       	eor	r25, r25
    1254:	89 2b       	or	r24, r25
    1256:	61 f4       	brne	.+24     	; 0x1270 <cliMemoryDump+0xb0>
    1258:	df 92       	push	r13
    125a:	cf 92       	push	r12
    125c:	80 e7       	ldi	r24, 0x70	; 112
    125e:	91 e0       	ldi	r25, 0x01	; 1
    1260:	9f 93       	push	r25
    1262:	8f 93       	push	r24
    1264:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    1268:	0f 90       	pop	r0
    126a:	0f 90       	pop	r0
    126c:	0f 90       	pop	r0
    126e:	0f 90       	pop	r0
    1270:	f6 01       	movw	r30, r12
    1272:	81 81       	ldd	r24, Z+1	; 0x01
    1274:	8f 93       	push	r24
    1276:	80 81       	ld	r24, Z
    1278:	8f 93       	push	r24
    127a:	88 e6       	ldi	r24, 0x68	; 104
    127c:	91 e0       	ldi	r25, 0x01	; 1
    127e:	9f 93       	push	r25
    1280:	8f 93       	push	r24
    1282:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    1286:	c7 01       	movw	r24, r14
    1288:	83 70       	andi	r24, 0x03	; 3
    128a:	90 78       	andi	r25, 0x80	; 128
    128c:	0f 90       	pop	r0
    128e:	0f 90       	pop	r0
    1290:	0f 90       	pop	r0
    1292:	0f 90       	pop	r0
    1294:	99 23       	and	r25, r25
    1296:	24 f4       	brge	.+8      	; 0x12a0 <cliMemoryDump+0xe0>
    1298:	01 97       	sbiw	r24, 0x01	; 1
    129a:	8c 6f       	ori	r24, 0xFC	; 252
    129c:	9f 6f       	ori	r25, 0xFF	; 255
    129e:	01 96       	adiw	r24, 0x01	; 1
    12a0:	03 97       	sbiw	r24, 0x03	; 3
    12a2:	09 f0       	breq	.+2      	; 0x12a6 <cliMemoryDump+0xe6>
    12a4:	4e c0       	rjmp	.+156    	; 0x1342 <cliMemoryDump+0x182>
    12a6:	84 e6       	ldi	r24, 0x64	; 100
    12a8:	91 e0       	ldi	r25, 0x01	; 1
    12aa:	9f 93       	push	r25
    12ac:	8f 93       	push	r24
    12ae:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    12b2:	0f 90       	pop	r0
    12b4:	0f 90       	pop	r0
    12b6:	a1 2c       	mov	r10, r1
    12b8:	b1 2c       	mov	r11, r1
    12ba:	37 c0       	rjmp	.+110    	; 0x132a <cliMemoryDump+0x16a>
    12bc:	f4 01       	movw	r30, r8
    12be:	80 81       	ld	r24, Z
    12c0:	91 81       	ldd	r25, Z+1	; 0x01
    12c2:	a2 81       	ldd	r26, Z+2	; 0x02
    12c4:	b3 81       	ldd	r27, Z+3	; 0x03
    12c6:	89 83       	std	Y+1, r24	; 0x01
    12c8:	9a 83       	std	Y+2, r25	; 0x02
    12ca:	ab 83       	std	Y+3, r26	; 0x03
    12cc:	bc 83       	std	Y+4, r27	; 0x04
    12ce:	00 e0       	ldi	r16, 0x00	; 0
    12d0:	10 e0       	ldi	r17, 0x00	; 0
    12d2:	22 c0       	rjmp	.+68     	; 0x1318 <cliMemoryDump+0x158>
    12d4:	e1 e0       	ldi	r30, 0x01	; 1
    12d6:	f0 e0       	ldi	r31, 0x00	; 0
    12d8:	ec 0f       	add	r30, r28
    12da:	fd 1f       	adc	r31, r29
    12dc:	e0 0f       	add	r30, r16
    12de:	f1 1f       	adc	r31, r17
    12e0:	80 81       	ld	r24, Z
    12e2:	90 ee       	ldi	r25, 0xE0	; 224
    12e4:	98 0f       	add	r25, r24
    12e6:	9f 35       	cpi	r25, 0x5F	; 95
    12e8:	68 f4       	brcc	.+26     	; 0x1304 <cliMemoryDump+0x144>
    12ea:	1f 92       	push	r1
    12ec:	8f 93       	push	r24
    12ee:	81 e6       	ldi	r24, 0x61	; 97
    12f0:	91 e0       	ldi	r25, 0x01	; 1
    12f2:	9f 93       	push	r25
    12f4:	8f 93       	push	r24
    12f6:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    12fa:	0f 90       	pop	r0
    12fc:	0f 90       	pop	r0
    12fe:	0f 90       	pop	r0
    1300:	0f 90       	pop	r0
    1302:	08 c0       	rjmp	.+16     	; 0x1314 <cliMemoryDump+0x154>
    1304:	8f e5       	ldi	r24, 0x5F	; 95
    1306:	91 e0       	ldi	r25, 0x01	; 1
    1308:	9f 93       	push	r25
    130a:	8f 93       	push	r24
    130c:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    1310:	0f 90       	pop	r0
    1312:	0f 90       	pop	r0
    1314:	0f 5f       	subi	r16, 0xFF	; 255
    1316:	1f 4f       	sbci	r17, 0xFF	; 255
    1318:	04 30       	cpi	r16, 0x04	; 4
    131a:	11 05       	cpc	r17, r1
    131c:	dc f2       	brlt	.-74     	; 0x12d4 <cliMemoryDump+0x114>
    131e:	f2 e0       	ldi	r31, 0x02	; 2
    1320:	8f 0e       	add	r8, r31
    1322:	91 1c       	adc	r9, r1
    1324:	8f ef       	ldi	r24, 0xFF	; 255
    1326:	a8 1a       	sub	r10, r24
    1328:	b8 0a       	sbc	r11, r24
    132a:	e4 e0       	ldi	r30, 0x04	; 4
    132c:	ae 16       	cp	r10, r30
    132e:	b1 04       	cpc	r11, r1
    1330:	2c f2       	brlt	.-118    	; 0x12bc <cliMemoryDump+0xfc>
    1332:	89 e5       	ldi	r24, 0x59	; 89
    1334:	91 e0       	ldi	r25, 0x01	; 1
    1336:	9f 93       	push	r25
    1338:	8f 93       	push	r24
    133a:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    133e:	0f 90       	pop	r0
    1340:	0f 90       	pop	r0
    1342:	f2 e0       	ldi	r31, 0x02	; 2
    1344:	cf 0e       	add	r12, r31
    1346:	d1 1c       	adc	r13, r1
    1348:	8f ef       	ldi	r24, 0xFF	; 255
    134a:	e8 1a       	sub	r14, r24
    134c:	f8 0a       	sbc	r15, r24
    134e:	e6 14       	cp	r14, r6
    1350:	f7 04       	cpc	r15, r7
    1352:	0c f4       	brge	.+2      	; 0x1356 <cliMemoryDump+0x196>
    1354:	7c cf       	rjmp	.-264    	; 0x124e <cliMemoryDump+0x8e>
    1356:	24 96       	adiw	r28, 0x04	; 4
    1358:	cd bf       	out	0x3d, r28	; 61
    135a:	de bf       	out	0x3e, r29	; 62
    135c:	df 91       	pop	r29
    135e:	cf 91       	pop	r28
    1360:	1f 91       	pop	r17
    1362:	0f 91       	pop	r16
    1364:	ff 90       	pop	r15
    1366:	ef 90       	pop	r14
    1368:	df 90       	pop	r13
    136a:	cf 90       	pop	r12
    136c:	bf 90       	pop	r11
    136e:	af 90       	pop	r10
    1370:	9f 90       	pop	r9
    1372:	8f 90       	pop	r8
    1374:	7f 90       	pop	r7
    1376:	6f 90       	pop	r6
    1378:	08 95       	ret

0000137a <cliMemoryDump_P>:
    137a:	2f 92       	push	r2
    137c:	3f 92       	push	r3
    137e:	4f 92       	push	r4
    1380:	5f 92       	push	r5
    1382:	6f 92       	push	r6
    1384:	7f 92       	push	r7
    1386:	8f 92       	push	r8
    1388:	9f 92       	push	r9
    138a:	af 92       	push	r10
    138c:	bf 92       	push	r11
    138e:	cf 92       	push	r12
    1390:	df 92       	push	r13
    1392:	ef 92       	push	r14
    1394:	ff 92       	push	r15
    1396:	0f 93       	push	r16
    1398:	1f 93       	push	r17
    139a:	cf 93       	push	r28
    139c:	df 93       	push	r29
    139e:	00 d0       	rcall	.+0      	; 0x13a0 <cliMemoryDump_P+0x26>
    13a0:	00 d0       	rcall	.+0      	; 0x13a2 <cliMemoryDump_P+0x28>
    13a2:	cd b7       	in	r28, 0x3d	; 61
    13a4:	de b7       	in	r29, 0x3e	; 62
    13a6:	fc 01       	movw	r30, r24
    13a8:	20 81       	ld	r18, Z
    13aa:	31 81       	ldd	r19, Z+1	; 0x01
    13ac:	02 81       	ldd	r16, Z+2	; 0x02
    13ae:	13 81       	ldd	r17, Z+3	; 0x03
    13b0:	21 15       	cp	r18, r1
    13b2:	31 05       	cpc	r19, r1
    13b4:	49 f4       	brne	.+18     	; 0x13c8 <cliMemoryDump_P+0x4e>
    13b6:	84 e4       	ldi	r24, 0x44	; 68
    13b8:	91 e0       	ldi	r25, 0x01	; 1
    13ba:	9f 93       	push	r25
    13bc:	8f 93       	push	r24
    13be:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    13c2:	0f 90       	pop	r0
    13c4:	0f 90       	pop	r0
    13c6:	b8 c0       	rjmp	.+368    	; 0x1538 <cliMemoryDump_P+0x1be>
    13c8:	22 30       	cpi	r18, 0x02	; 2
    13ca:	31 05       	cpc	r19, r1
    13cc:	5c f0       	brlt	.+22     	; 0x13e4 <cliMemoryDump_P+0x6a>
    13ce:	40 e0       	ldi	r20, 0x00	; 0
    13d0:	50 e0       	ldi	r21, 0x00	; 0
    13d2:	60 e0       	ldi	r22, 0x00	; 0
    13d4:	70 e0       	ldi	r23, 0x00	; 0
    13d6:	f8 01       	movw	r30, r16
    13d8:	82 81       	ldd	r24, Z+2	; 0x02
    13da:	93 81       	ldd	r25, Z+3	; 0x03
    13dc:	0e 94 02 13 	call	0x2604	; 0x2604 <strtoul>
    13e0:	1b 01       	movw	r2, r22
    13e2:	04 c0       	rjmp	.+8      	; 0x13ec <cliMemoryDump_P+0x72>
    13e4:	68 94       	set
    13e6:	22 24       	eor	r2, r2
    13e8:	24 f8       	bld	r2, 4
    13ea:	31 2c       	mov	r3, r1
    13ec:	40 e0       	ldi	r20, 0x00	; 0
    13ee:	50 e0       	ldi	r21, 0x00	; 0
    13f0:	60 e0       	ldi	r22, 0x00	; 0
    13f2:	70 e0       	ldi	r23, 0x00	; 0
    13f4:	f8 01       	movw	r30, r16
    13f6:	80 81       	ld	r24, Z
    13f8:	91 81       	ldd	r25, Z+1	; 0x01
    13fa:	0e 94 02 13 	call	0x2604	; 0x2604 <strtoul>
    13fe:	4b 01       	movw	r8, r22
    1400:	5c 01       	movw	r10, r24
    1402:	8d e1       	ldi	r24, 0x1D	; 29
    1404:	90 e4       	ldi	r25, 0x40	; 64
    1406:	9f 93       	push	r25
    1408:	8f 93       	push	r24
    140a:	0e 94 d2 05 	call	0xba4	; 0xba4 <cliPrintf>
    140e:	0f 90       	pop	r0
    1410:	0f 90       	pop	r0
    1412:	24 01       	movw	r4, r8
    1414:	35 01       	movw	r6, r10
    1416:	e1 2c       	mov	r14, r1
    1418:	f1 2c       	mov	r15, r1
    141a:	8a c0       	rjmp	.+276    	; 0x1530 <cliMemoryDump_P+0x1b6>
    141c:	c7 01       	movw	r24, r14
    141e:	83 70       	andi	r24, 0x03	; 3
    1420:	99 27       	eor	r25, r25
    1422:	89 2b       	or	r24, r25
    1424:	61 f4       	brne	.+24     	; 0x143e <cliMemoryDump_P+0xc4>
    1426:	9f 92       	push	r9
    1428:	8f 92       	push	r8
    142a:	8a e3       	ldi	r24, 0x3A	; 58
    142c:	91 e0       	ldi	r25, 0x01	; 1
    142e:	9f 93       	push	r25
    1430:	8f 93       	push	r24
    1432:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    1436:	0f 90       	pop	r0
    1438:	0f 90       	pop	r0
    143a:	0f 90       	pop	r0
    143c:	0f 90       	pop	r0
    143e:	ab be       	out	0x3b, r10	; 59
    1440:	f4 01       	movw	r30, r8
    1442:	87 91       	elpm	r24, Z+
    1444:	97 91       	elpm	r25, Z+
    1446:	a7 91       	elpm	r26, Z+
    1448:	b6 91       	elpm	r27, Z
    144a:	bf 93       	push	r27
    144c:	af 93       	push	r26
    144e:	9f 93       	push	r25
    1450:	8f 93       	push	r24
    1452:	82 e3       	ldi	r24, 0x32	; 50
    1454:	91 e0       	ldi	r25, 0x01	; 1
    1456:	9f 93       	push	r25
    1458:	8f 93       	push	r24
    145a:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    145e:	c7 01       	movw	r24, r14
    1460:	83 70       	andi	r24, 0x03	; 3
    1462:	90 78       	andi	r25, 0x80	; 128
    1464:	0f 90       	pop	r0
    1466:	0f 90       	pop	r0
    1468:	0f 90       	pop	r0
    146a:	0f 90       	pop	r0
    146c:	0f 90       	pop	r0
    146e:	0f 90       	pop	r0
    1470:	99 23       	and	r25, r25
    1472:	24 f4       	brge	.+8      	; 0x147c <cliMemoryDump_P+0x102>
    1474:	01 97       	sbiw	r24, 0x01	; 1
    1476:	8c 6f       	ori	r24, 0xFC	; 252
    1478:	9f 6f       	ori	r25, 0xFF	; 255
    147a:	01 96       	adiw	r24, 0x01	; 1
    147c:	03 97       	sbiw	r24, 0x03	; 3
    147e:	09 f0       	breq	.+2      	; 0x1482 <cliMemoryDump_P+0x108>
    1480:	4f c0       	rjmp	.+158    	; 0x1520 <cliMemoryDump_P+0x1a6>
    1482:	8e e2       	ldi	r24, 0x2E	; 46
    1484:	91 e0       	ldi	r25, 0x01	; 1
    1486:	9f 93       	push	r25
    1488:	8f 93       	push	r24
    148a:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    148e:	0f 90       	pop	r0
    1490:	0f 90       	pop	r0
    1492:	c1 2c       	mov	r12, r1
    1494:	d1 2c       	mov	r13, r1
    1496:	38 c0       	rjmp	.+112    	; 0x1508 <cliMemoryDump_P+0x18e>
    1498:	24 e0       	ldi	r18, 0x04	; 4
    149a:	30 e0       	ldi	r19, 0x00	; 0
    149c:	b3 01       	movw	r22, r6
    149e:	a2 01       	movw	r20, r4
    14a0:	ce 01       	movw	r24, r28
    14a2:	01 96       	adiw	r24, 0x01	; 1
    14a4:	0e 94 2e 01 	call	0x25c	; 0x25c <memcpy_PF>
    14a8:	00 e0       	ldi	r16, 0x00	; 0
    14aa:	10 e0       	ldi	r17, 0x00	; 0
    14ac:	22 c0       	rjmp	.+68     	; 0x14f2 <cliMemoryDump_P+0x178>
    14ae:	e1 e0       	ldi	r30, 0x01	; 1
    14b0:	f0 e0       	ldi	r31, 0x00	; 0
    14b2:	ec 0f       	add	r30, r28
    14b4:	fd 1f       	adc	r31, r29
    14b6:	e0 0f       	add	r30, r16
    14b8:	f1 1f       	adc	r31, r17
    14ba:	80 81       	ld	r24, Z
    14bc:	90 ee       	ldi	r25, 0xE0	; 224
    14be:	98 0f       	add	r25, r24
    14c0:	9f 35       	cpi	r25, 0x5F	; 95
    14c2:	68 f4       	brcc	.+26     	; 0x14de <cliMemoryDump_P+0x164>
    14c4:	1f 92       	push	r1
    14c6:	8f 93       	push	r24
    14c8:	8b e2       	ldi	r24, 0x2B	; 43
    14ca:	91 e0       	ldi	r25, 0x01	; 1
    14cc:	9f 93       	push	r25
    14ce:	8f 93       	push	r24
    14d0:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    14d4:	0f 90       	pop	r0
    14d6:	0f 90       	pop	r0
    14d8:	0f 90       	pop	r0
    14da:	0f 90       	pop	r0
    14dc:	08 c0       	rjmp	.+16     	; 0x14ee <cliMemoryDump_P+0x174>
    14de:	89 e2       	ldi	r24, 0x29	; 41
    14e0:	91 e0       	ldi	r25, 0x01	; 1
    14e2:	9f 93       	push	r25
    14e4:	8f 93       	push	r24
    14e6:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    14ea:	0f 90       	pop	r0
    14ec:	0f 90       	pop	r0
    14ee:	0f 5f       	subi	r16, 0xFF	; 255
    14f0:	1f 4f       	sbci	r17, 0xFF	; 255
    14f2:	04 30       	cpi	r16, 0x04	; 4
    14f4:	11 05       	cpc	r17, r1
    14f6:	dc f2       	brlt	.-74     	; 0x14ae <cliMemoryDump_P+0x134>
    14f8:	f4 e0       	ldi	r31, 0x04	; 4
    14fa:	4f 0e       	add	r4, r31
    14fc:	51 1c       	adc	r5, r1
    14fe:	61 1c       	adc	r6, r1
    1500:	71 1c       	adc	r7, r1
    1502:	8f ef       	ldi	r24, 0xFF	; 255
    1504:	c8 1a       	sub	r12, r24
    1506:	d8 0a       	sbc	r13, r24
    1508:	e4 e0       	ldi	r30, 0x04	; 4
    150a:	ce 16       	cp	r12, r30
    150c:	d1 04       	cpc	r13, r1
    150e:	24 f2       	brlt	.-120    	; 0x1498 <cliMemoryDump_P+0x11e>
    1510:	83 e2       	ldi	r24, 0x23	; 35
    1512:	91 e0       	ldi	r25, 0x01	; 1
    1514:	9f 93       	push	r25
    1516:	8f 93       	push	r24
    1518:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    151c:	0f 90       	pop	r0
    151e:	0f 90       	pop	r0
    1520:	f4 e0       	ldi	r31, 0x04	; 4
    1522:	8f 0e       	add	r8, r31
    1524:	91 1c       	adc	r9, r1
    1526:	a1 1c       	adc	r10, r1
    1528:	b1 1c       	adc	r11, r1
    152a:	8f ef       	ldi	r24, 0xFF	; 255
    152c:	e8 1a       	sub	r14, r24
    152e:	f8 0a       	sbc	r15, r24
    1530:	e2 14       	cp	r14, r2
    1532:	f3 04       	cpc	r15, r3
    1534:	0c f4       	brge	.+2      	; 0x1538 <cliMemoryDump_P+0x1be>
    1536:	72 cf       	rjmp	.-284    	; 0x141c <cliMemoryDump_P+0xa2>
    1538:	24 96       	adiw	r28, 0x04	; 4
    153a:	cd bf       	out	0x3d, r28	; 61
    153c:	de bf       	out	0x3e, r29	; 62
    153e:	df 91       	pop	r29
    1540:	cf 91       	pop	r28
    1542:	1f 91       	pop	r17
    1544:	0f 91       	pop	r16
    1546:	ff 90       	pop	r15
    1548:	ef 90       	pop	r14
    154a:	df 90       	pop	r13
    154c:	cf 90       	pop	r12
    154e:	bf 90       	pop	r11
    1550:	af 90       	pop	r10
    1552:	9f 90       	pop	r9
    1554:	8f 90       	pop	r8
    1556:	7f 90       	pop	r7
    1558:	6f 90       	pop	r6
    155a:	5f 90       	pop	r5
    155c:	4f 90       	pop	r4
    155e:	3f 90       	pop	r3
    1560:	2f 90       	pop	r2
    1562:	08 95       	ret

00001564 <cliAdd>:

bool cliAdd(const char *cmd_str, void (*p_func)(cli_args_t *))
{
    1564:	ef 92       	push	r14
    1566:	ff 92       	push	r15
    1568:	0f 93       	push	r16
    156a:	1f 93       	push	r17
    156c:	cf 93       	push	r28
    156e:	df 93       	push	r29
	bool ret = true;
	cli_t *p_cli = &cli_node;
	uint16_t index;

	if (p_cli->cmd_count >= CLI_CMD_LIST_MAX)
    1570:	20 91 8e 44 	lds	r18, 0x448E	; 0x80448e <cli_node+0x252>
    1574:	30 91 8f 44 	lds	r19, 0x448F	; 0x80448f <cli_node+0x253>
    1578:	20 31       	cpi	r18, 0x10	; 16
    157a:	31 05       	cpc	r19, r1
    157c:	f8 f4       	brcc	.+62     	; 0x15bc <cliAdd+0x58>
    157e:	8b 01       	movw	r16, r22
    1580:	bc 01       	movw	r22, r24
		return false;
	}

	index = p_cli->cmd_count;

	strcpy(p_cli->cmd_list[index].cmd_str, cmd_str);
    1582:	e9 01       	movw	r28, r18
    1584:	c2 95       	swap	r28
    1586:	d2 95       	swap	r29
    1588:	d0 7f       	andi	r29, 0xF0	; 240
    158a:	dc 27       	eor	r29, r28
    158c:	c0 7f       	andi	r28, 0xF0	; 240
    158e:	dc 27       	eor	r29, r28
    1590:	ce 01       	movw	r24, r28
    1592:	80 57       	subi	r24, 0x70	; 112
    1594:	9b 4b       	sbci	r25, 0xBB	; 187
    1596:	7c 01       	movw	r14, r24
    1598:	0e 94 57 14 	call	0x28ae	; 0x28ae <strcpy>
	p_cli->cmd_list[index].cmd_func = p_func;
    159c:	c2 56       	subi	r28, 0x62	; 98
    159e:	db 4b       	sbci	r29, 0xBB	; 187
    15a0:	08 83       	st	Y, r16
    15a2:	19 83       	std	Y+1, r17	; 0x01

	cliToUpper(p_cli->cmd_list[index].cmd_str);
    15a4:	c7 01       	movw	r24, r14
    15a6:	0e 94 4d 04 	call	0x89a	; 0x89a <cliToUpper>

	p_cli->cmd_count++;
    15aa:	ee e8       	ldi	r30, 0x8E	; 142
    15ac:	f4 e4       	ldi	r31, 0x44	; 68
    15ae:	80 81       	ld	r24, Z
    15b0:	91 81       	ldd	r25, Z+1	; 0x01
    15b2:	01 96       	adiw	r24, 0x01	; 1
    15b4:	80 83       	st	Z, r24
    15b6:	91 83       	std	Z+1, r25	; 0x01

	return ret;
    15b8:	81 e0       	ldi	r24, 0x01	; 1
    15ba:	01 c0       	rjmp	.+2      	; 0x15be <cliAdd+0x5a>
	cli_t *p_cli = &cli_node;
	uint16_t index;

	if (p_cli->cmd_count >= CLI_CMD_LIST_MAX)
	{
		return false;
    15bc:	80 e0       	ldi	r24, 0x00	; 0
	cliToUpper(p_cli->cmd_list[index].cmd_str);

	p_cli->cmd_count++;

	return ret;
}
    15be:	df 91       	pop	r29
    15c0:	cf 91       	pop	r28
    15c2:	1f 91       	pop	r17
    15c4:	0f 91       	pop	r16
    15c6:	ff 90       	pop	r15
    15c8:	ef 90       	pop	r14
    15ca:	08 95       	ret

000015cc <cliInit>:
void cliMemoryDump_P(cli_args_t *args);


bool cliInit(void)
{
	cli_node.is_open = false;
    15cc:	ec e3       	ldi	r30, 0x3C	; 60
    15ce:	f2 e4       	ldi	r31, 0x42	; 66
    15d0:	15 82       	std	Z+5, r1	; 0x05
	cli_node.is_log  = false;
    15d2:	16 82       	std	Z+6, r1	; 0x06
	cli_node.state   = CLI_RX_IDLE;
    15d4:	14 86       	std	Z+12, r1	; 0x0c

	cli_node.hist_line_i     = 0;
    15d6:	10 92 8c 43 	sts	0x438C, r1	; 0x80438c <cli_node+0x150>
	cli_node.hist_line_last  = 0;
    15da:	10 92 8d 43 	sts	0x438D, r1	; 0x80438d <cli_node+0x151>
	cli_node.hist_line_count = 0;
    15de:	10 92 8e 43 	sts	0x438E, r1	; 0x80438e <cli_node+0x152>
	cli_node.hist_line_new   = false;
    15e2:	10 92 8b 43 	sts	0x438B, r1	; 0x80438b <cli_node+0x14f>

	cli_node.cmd_args.getData  = cliArgsGetData;
    15e6:	8a eb       	ldi	r24, 0xBA	; 186
    15e8:	94 e0       	ldi	r25, 0x04	; 4
    15ea:	80 93 94 45 	sts	0x4594, r24	; 0x804594 <cli_node+0x358>
    15ee:	90 93 95 45 	sts	0x4595, r25	; 0x804595 <cli_node+0x359>
	cli_node.cmd_args.getFloat = cliArgsGetFloat;
    15f2:	8f e9       	ldi	r24, 0x9F	; 159
    15f4:	94 e0       	ldi	r25, 0x04	; 4
    15f6:	80 93 96 45 	sts	0x4596, r24	; 0x804596 <cli_node+0x35a>
    15fa:	90 93 97 45 	sts	0x4597, r25	; 0x804597 <cli_node+0x35b>
	cli_node.cmd_args.getStr   = cliArgsGetStr;
    15fe:	8b e6       	ldi	r24, 0x6B	; 107
    1600:	94 e0       	ldi	r25, 0x04	; 4
    1602:	80 93 98 45 	sts	0x4598, r24	; 0x804598 <cli_node+0x35c>
    1606:	90 93 99 45 	sts	0x4599, r25	; 0x804599 <cli_node+0x35d>
	cli_node.cmd_args.isStr    = cliArgsIsStr;
    160a:	81 e8       	ldi	r24, 0x81	; 129
    160c:	94 e0       	ldi	r25, 0x04	; 4
    160e:	80 93 9a 45 	sts	0x459A, r24	; 0x80459a <cli_node+0x35e>
    1612:	90 93 9b 45 	sts	0x459B, r25	; 0x80459b <cli_node+0x35f>

	cliLineClean(&cli_node);
    1616:	cf 01       	movw	r24, r30
    1618:	0e 94 0b 04 	call	0x816	; 0x816 <cliLineClean>


	cliAdd("help", cliShowList);
    161c:	61 ea       	ldi	r22, 0xA1	; 161
    161e:	78 e0       	ldi	r23, 0x08	; 8
    1620:	82 e2       	ldi	r24, 0x22	; 34
    1622:	90 e4       	ldi	r25, 0x40	; 64
    1624:	0e 94 b2 0a 	call	0x1564	; 0x1564 <cliAdd>
	cliAdd("md"  , cliMemoryDump);
    1628:	60 ee       	ldi	r22, 0xE0	; 224
    162a:	78 e0       	ldi	r23, 0x08	; 8
    162c:	87 e2       	ldi	r24, 0x27	; 39
    162e:	90 e4       	ldi	r25, 0x40	; 64
    1630:	0e 94 b2 0a 	call	0x1564	; 0x1564 <cliAdd>
	cliAdd("mdp" , cliMemoryDump_P);
    1634:	6d eb       	ldi	r22, 0xBD	; 189
    1636:	79 e0       	ldi	r23, 0x09	; 9
    1638:	8a e2       	ldi	r24, 0x2A	; 42
    163a:	90 e4       	ldi	r25, 0x40	; 64
    163c:	0e 94 b2 0a 	call	0x1564	; 0x1564 <cliAdd>

	return true;
}
    1640:	81 e0       	ldi	r24, 0x01	; 1
    1642:	08 95       	ret

00001644 <i2cInit>:



bool i2cInit(void)
{
	PORTA.DIRSET = (1 << 2) | (1 << 3);
    1644:	e0 e0       	ldi	r30, 0x00	; 0
    1646:	f4 e0       	ldi	r31, 0x04	; 4
    1648:	8c e0       	ldi	r24, 0x0C	; 12
    164a:	81 83       	std	Z+1, r24	; 0x01
	PORTA.OUTCLR = (1 << 2) | (1 << 3);
    164c:	86 83       	std	Z+6, r24	; 0x06
	PORTMUX.TWIROUTEA = 0x00;	
    164e:	10 92 e5 05 	sts	0x05E5, r1	; 0x8005e5 <__TEXT_REGION_LENGTH__+0x7e05e5>

	cliAdd("i2c", cliI2c);
    1652:	65 e3       	ldi	r22, 0x35	; 53
    1654:	7c e0       	ldi	r23, 0x0C	; 12
    1656:	8e e2       	ldi	r24, 0x2E	; 46
    1658:	90 e4       	ldi	r25, 0x40	; 64
    165a:	0e 94 b2 0a 	call	0x1564	; 0x1564 <cliAdd>
	
	return true;
}
    165e:	81 e0       	ldi	r24, 0x01	; 1
    1660:	08 95       	ret

00001662 <i2cBegin>:


bool i2cBegin(uint8_t ch, uint32_t freq_khz)
{
	switch(ch)
    1662:	81 11       	cpse	r24, r1
    1664:	28 c0       	rjmp	.+80     	; 0x16b6 <i2cBegin+0x54>
    1666:	cb 01       	movw	r24, r22
    1668:	ba 01       	movw	r22, r20
	{
		case _DEF_I2C1:
		TWI0.MBAUD  = (uint8_t)BAUD(freq_khz, 0); /* set MBAUD register */
    166a:	0e 94 e3 0f 	call	0x1fc6	; 0x1fc6 <__floatunsisf>
    166e:	9b 01       	movw	r18, r22
    1670:	ac 01       	movw	r20, r24
    1672:	60 e0       	ldi	r22, 0x00	; 0
    1674:	7b e1       	ldi	r23, 0x1B	; 27
    1676:	87 eb       	ldi	r24, 0xB7	; 183
    1678:	9b e4       	ldi	r25, 0x4B	; 75
    167a:	0e 94 42 0f 	call	0x1e84	; 0x1e84 <__divsf3>
    167e:	20 e0       	ldi	r18, 0x00	; 0
    1680:	30 e0       	ldi	r19, 0x00	; 0
    1682:	40 e2       	ldi	r20, 0x20	; 32
    1684:	51 e4       	ldi	r21, 0x41	; 65
    1686:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <__subsf3>
    168a:	20 e0       	ldi	r18, 0x00	; 0
    168c:	30 e0       	ldi	r19, 0x00	; 0
    168e:	40 e0       	ldi	r20, 0x00	; 0
    1690:	5f e3       	ldi	r21, 0x3F	; 63
    1692:	0e 94 95 10 	call	0x212a	; 0x212a <__mulsf3>
    1696:	0e 94 b4 0f 	call	0x1f68	; 0x1f68 <__fixunssfsi>
    169a:	e0 e0       	ldi	r30, 0x00	; 0
    169c:	f9 e0       	ldi	r31, 0x09	; 9
    169e:	66 83       	std	Z+6, r22	; 0x06
 		TWI0.MCTRLA = 1 << TWI_ENABLE_bp        /* Enable TWI Master: enabled */
    16a0:	81 e0       	ldi	r24, 0x01	; 1
    16a2:	83 83       	std	Z+3, r24	; 0x03
					| 0 << TWI_SMEN_bp			/* Smart Mode Enable: disabled */
					| TWI_TIMEOUT_DISABLED_gc	/* Bus Timeout Disabled */
					| 0 << TWI_WIEN_bp;			/* Write Interrupt Enable: disabled */


 		TWI0.MCTRLB  |= TWI_FLUSH_bm;
    16a4:	84 81       	ldd	r24, Z+4	; 0x04
    16a6:	88 60       	ori	r24, 0x08	; 8
    16a8:	84 83       	std	Z+4, r24	; 0x04
		TWI0.MSTATUS |= TWI_BUSSTATE_IDLE_gc;
    16aa:	85 81       	ldd	r24, Z+5	; 0x05
    16ac:	81 60       	ori	r24, 0x01	; 1
    16ae:	85 83       	std	Z+5, r24	; 0x05
		TWI0.MSTATUS |= (TWI_RIF_bm | TWI_WIF_bm);
    16b0:	85 81       	ldd	r24, Z+5	; 0x05
    16b2:	80 6c       	ori	r24, 0xC0	; 192
    16b4:	85 83       	std	Z+5, r24	; 0x05

		break;
	}
	
	return true;
}
    16b6:	81 e0       	ldi	r24, 0x01	; 1
    16b8:	08 95       	ret

000016ba <i2cStart>:

bool i2cStart(uint8_t ch)
{
    16ba:	cf 92       	push	r12
    16bc:	df 92       	push	r13
    16be:	ef 92       	push	r14
    16c0:	ff 92       	push	r15
	uint32_t pre_time = 0;
	uint8_t  timeout  = 10;
	switch(ch)
    16c2:	81 11       	cpse	r24, r1
    16c4:	1e c0       	rjmp	.+60     	; 0x1702 <i2cStart+0x48>
	{
		case _DEF_I2C1:
		TWI0.MCTRLB   = TWI_FLUSH_bm;
    16c6:	e0 e0       	ldi	r30, 0x00	; 0
    16c8:	f9 e0       	ldi	r31, 0x09	; 9
    16ca:	88 e0       	ldi	r24, 0x08	; 8
    16cc:	84 83       	std	Z+4, r24	; 0x04
		TWI0.MSTATUS |= TWI_BUSSTATE_IDLE_gc;
    16ce:	85 81       	ldd	r24, Z+5	; 0x05
    16d0:	81 60       	ori	r24, 0x01	; 1
    16d2:	85 83       	std	Z+5, r24	; 0x05
		
		pre_time = millis();
    16d4:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <millis>
    16d8:	6b 01       	movw	r12, r22
    16da:	7c 01       	movw	r14, r24
		while(1)
		{
			if((TWI0.MSTATUS & TWI_BUSSTATE_BUSY_gc) != TWI_BUSSTATE_BUSY_gc)
    16dc:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    16e0:	83 70       	andi	r24, 0x03	; 3
    16e2:	83 30       	cpi	r24, 0x03	; 3
    16e4:	81 f4       	brne	.+32     	; 0x1706 <i2cStart+0x4c>
			{
				break;
			}
			if(millis() - pre_time >= timeout)
    16e6:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <millis>
    16ea:	dc 01       	movw	r26, r24
    16ec:	cb 01       	movw	r24, r22
    16ee:	8c 19       	sub	r24, r12
    16f0:	9d 09       	sbc	r25, r13
    16f2:	ae 09       	sbc	r26, r14
    16f4:	bf 09       	sbc	r27, r15
    16f6:	0a 97       	sbiw	r24, 0x0a	; 10
    16f8:	a1 05       	cpc	r26, r1
    16fa:	b1 05       	cpc	r27, r1
    16fc:	78 f3       	brcs	.-34     	; 0x16dc <i2cStart+0x22>
			{
				return false;
    16fe:	80 e0       	ldi	r24, 0x00	; 0
    1700:	03 c0       	rjmp	.+6      	; 0x1708 <i2cStart+0x4e>
			}
		}	
		break;
	}
	
	return true;
    1702:	81 e0       	ldi	r24, 0x01	; 1
    1704:	01 c0       	rjmp	.+2      	; 0x1708 <i2cStart+0x4e>
    1706:	81 e0       	ldi	r24, 0x01	; 1
}
    1708:	ff 90       	pop	r15
    170a:	ef 90       	pop	r14
    170c:	df 90       	pop	r13
    170e:	cf 90       	pop	r12
    1710:	08 95       	ret

00001712 <i2cSendAddr>:
 
bool i2cSendAddr(uint8_t ch, uint8_t dev_addr)
{
    1712:	cf 92       	push	r12
    1714:	df 92       	push	r13
    1716:	ef 92       	push	r14
    1718:	ff 92       	push	r15
	bool     ret      = false;
	uint32_t pre_time = 0;
	uint8_t  timeout  = 10;
	
	switch(ch)
    171a:	81 11       	cpse	r24, r1
    171c:	25 c0       	rjmp	.+74     	; 0x1768 <i2cSendAddr+0x56>
	{
		case _DEF_I2C1:
		TWI0.MSTATUS |= (TWI_RIF_bm | TWI_WIF_bm);
    171e:	e0 e0       	ldi	r30, 0x00	; 0
    1720:	f9 e0       	ldi	r31, 0x09	; 9
    1722:	85 81       	ldd	r24, Z+5	; 0x05
    1724:	80 6c       	ori	r24, 0xC0	; 192
    1726:	85 83       	std	Z+5, r24	; 0x05
		TWI0.MADDR = dev_addr;
    1728:	67 83       	std	Z+7, r22	; 0x07
		
		pre_time = millis();
    172a:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <millis>
    172e:	6b 01       	movw	r12, r22
    1730:	7c 01       	movw	r14, r24
		while (!(TWI0.MSTATUS & TWI_RIF_bm) && !(TWI0.MSTATUS & TWI_WIF_bm))
    1732:	0c c0       	rjmp	.+24     	; 0x174c <i2cSendAddr+0x3a>
		{
			if(millis() - pre_time >= timeout)
    1734:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <millis>
    1738:	dc 01       	movw	r26, r24
    173a:	cb 01       	movw	r24, r22
    173c:	8c 19       	sub	r24, r12
    173e:	9d 09       	sbc	r25, r13
    1740:	ae 09       	sbc	r26, r14
    1742:	bf 09       	sbc	r27, r15
    1744:	0a 97       	sbiw	r24, 0x0a	; 10
    1746:	a1 05       	cpc	r26, r1
    1748:	b1 05       	cpc	r27, r1
    174a:	80 f4       	brcc	.+32     	; 0x176c <i2cSendAddr+0x5a>
		case _DEF_I2C1:
		TWI0.MSTATUS |= (TWI_RIF_bm | TWI_WIF_bm);
		TWI0.MADDR = dev_addr;
		
		pre_time = millis();
		while (!(TWI0.MSTATUS & TWI_RIF_bm) && !(TWI0.MSTATUS & TWI_WIF_bm))
    174c:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    1750:	88 23       	and	r24, r24
    1752:	24 f0       	brlt	.+8      	; 0x175c <i2cSendAddr+0x4a>
    1754:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    1758:	86 ff       	sbrs	r24, 6
    175a:	ec cf       	rjmp	.-40     	; 0x1734 <i2cSendAddr+0x22>
			{
				return false;
			}
		}
		
		if(!(TWI0.MSTATUS & TWI_RXACK_bm))
    175c:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    1760:	84 ff       	sbrs	r24, 4
    1762:	06 c0       	rjmp	.+12     	; 0x1770 <i2cSendAddr+0x5e>
	return true;
}
 
bool i2cSendAddr(uint8_t ch, uint8_t dev_addr)
{
	bool     ret      = false;
    1764:	80 e0       	ldi	r24, 0x00	; 0
    1766:	05 c0       	rjmp	.+10     	; 0x1772 <i2cSendAddr+0x60>
    1768:	80 e0       	ldi	r24, 0x00	; 0
    176a:	03 c0       	rjmp	.+6      	; 0x1772 <i2cSendAddr+0x60>
		pre_time = millis();
		while (!(TWI0.MSTATUS & TWI_RIF_bm) && !(TWI0.MSTATUS & TWI_WIF_bm))
		{
			if(millis() - pre_time >= timeout)
			{
				return false;
    176c:	80 e0       	ldi	r24, 0x00	; 0
    176e:	01 c0       	rjmp	.+2      	; 0x1772 <i2cSendAddr+0x60>
			}
		}
		
		if(!(TWI0.MSTATUS & TWI_RXACK_bm))
		{
			ret = true;
    1770:	81 e0       	ldi	r24, 0x01	; 1
		
		break;
	}
	
	return ret;
}
    1772:	ff 90       	pop	r15
    1774:	ef 90       	pop	r14
    1776:	df 90       	pop	r13
    1778:	cf 90       	pop	r12
    177a:	08 95       	ret

0000177c <i2cSendData>:

bool i2cSendData(uint8_t ch, uint8_t data)
{
    177c:	cf 92       	push	r12
    177e:	df 92       	push	r13
    1780:	ef 92       	push	r14
    1782:	ff 92       	push	r15
	bool     ret      = false;
	uint32_t pre_time = 0;
	uint8_t  timeout  = 10;
	
	switch(ch)
    1784:	81 11       	cpse	r24, r1
    1786:	21 c0       	rjmp	.+66     	; 0x17ca <i2cSendData+0x4e>
	{
		case _DEF_I2C1:
		TWI0.MSTATUS |= (TWI_RIF_bm | TWI_WIF_bm);
    1788:	e0 e0       	ldi	r30, 0x00	; 0
    178a:	f9 e0       	ldi	r31, 0x09	; 9
    178c:	85 81       	ldd	r24, Z+5	; 0x05
    178e:	80 6c       	ori	r24, 0xC0	; 192
    1790:	85 83       	std	Z+5, r24	; 0x05
		TWI0.MDATA = data;
    1792:	60 87       	std	Z+8, r22	; 0x08
		
		pre_time = millis();
    1794:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <millis>
    1798:	6b 01       	movw	r12, r22
    179a:	7c 01       	movw	r14, r24
		while (!(TWI0.MSTATUS & TWI_WIF_bm))
    179c:	0c c0       	rjmp	.+24     	; 0x17b6 <i2cSendData+0x3a>
		{
			if(millis() - pre_time >= timeout)
    179e:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <millis>
    17a2:	dc 01       	movw	r26, r24
    17a4:	cb 01       	movw	r24, r22
    17a6:	8c 19       	sub	r24, r12
    17a8:	9d 09       	sbc	r25, r13
    17aa:	ae 09       	sbc	r26, r14
    17ac:	bf 09       	sbc	r27, r15
    17ae:	0a 97       	sbiw	r24, 0x0a	; 10
    17b0:	a1 05       	cpc	r26, r1
    17b2:	b1 05       	cpc	r27, r1
    17b4:	60 f4       	brcc	.+24     	; 0x17ce <i2cSendData+0x52>
		case _DEF_I2C1:
		TWI0.MSTATUS |= (TWI_RIF_bm | TWI_WIF_bm);
		TWI0.MDATA = data;
		
		pre_time = millis();
		while (!(TWI0.MSTATUS & TWI_WIF_bm))
    17b6:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    17ba:	86 ff       	sbrs	r24, 6
    17bc:	f0 cf       	rjmp	.-32     	; 0x179e <i2cSendData+0x22>
			{
				return false;
			}
		}
		
		if(!(TWI0.MSTATUS & TWI_RXACK_bm))
    17be:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    17c2:	84 ff       	sbrs	r24, 4
    17c4:	06 c0       	rjmp	.+12     	; 0x17d2 <i2cSendData+0x56>
	return ret;
}

bool i2cSendData(uint8_t ch, uint8_t data)
{
	bool     ret      = false;
    17c6:	80 e0       	ldi	r24, 0x00	; 0
    17c8:	05 c0       	rjmp	.+10     	; 0x17d4 <i2cSendData+0x58>
    17ca:	80 e0       	ldi	r24, 0x00	; 0
    17cc:	03 c0       	rjmp	.+6      	; 0x17d4 <i2cSendData+0x58>
		pre_time = millis();
		while (!(TWI0.MSTATUS & TWI_WIF_bm))
		{
			if(millis() - pre_time >= timeout)
			{
				return false;
    17ce:	80 e0       	ldi	r24, 0x00	; 0
    17d0:	01 c0       	rjmp	.+2      	; 0x17d4 <i2cSendData+0x58>
			}
		}
		
		if(!(TWI0.MSTATUS & TWI_RXACK_bm))
		{
			ret = true;
    17d2:	81 e0       	ldi	r24, 0x01	; 1
		
		break;
	}
	
	return ret;
}
    17d4:	ff 90       	pop	r15
    17d6:	ef 90       	pop	r14
    17d8:	df 90       	pop	r13
    17da:	cf 90       	pop	r12
    17dc:	08 95       	ret

000017de <i2cEnd>:
	
	return true;	
}

bool i2cEnd(uint8_t ch)
{
    17de:	cf 92       	push	r12
    17e0:	df 92       	push	r13
    17e2:	ef 92       	push	r14
    17e4:	ff 92       	push	r15
	uint32_t pre_time = 0;
	uint8_t  timeout  = 10;
	
	switch(ch)
    17e6:	81 11       	cpse	r24, r1
    17e8:	1f c0       	rjmp	.+62     	; 0x1828 <i2cEnd+0x4a>
	{
		case _DEF_I2C1:
		TWI0.MCTRLB &= 0xFC;
    17ea:	e0 e0       	ldi	r30, 0x00	; 0
    17ec:	f9 e0       	ldi	r31, 0x09	; 9
    17ee:	84 81       	ldd	r24, Z+4	; 0x04
    17f0:	8c 7f       	andi	r24, 0xFC	; 252
    17f2:	84 83       	std	Z+4, r24	; 0x04
		TWI0.MCTRLB |= TWI_MCMD_STOP_gc;
    17f4:	84 81       	ldd	r24, Z+4	; 0x04
    17f6:	83 60       	ori	r24, 0x03	; 3
    17f8:	84 83       	std	Z+4, r24	; 0x04
		
		pre_time = millis();
    17fa:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <millis>
    17fe:	6b 01       	movw	r12, r22
    1800:	7c 01       	movw	r14, r24
		while(1)
		{
			if((TWI0.MSTATUS & TWI_BUSSTATE_BUSY_gc) != TWI_BUSSTATE_BUSY_gc)
    1802:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    1806:	83 70       	andi	r24, 0x03	; 3
    1808:	83 30       	cpi	r24, 0x03	; 3
    180a:	81 f4       	brne	.+32     	; 0x182c <i2cEnd+0x4e>
			{
				break;
			}
			if(millis() - pre_time >= timeout)
    180c:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <millis>
    1810:	dc 01       	movw	r26, r24
    1812:	cb 01       	movw	r24, r22
    1814:	8c 19       	sub	r24, r12
    1816:	9d 09       	sbc	r25, r13
    1818:	ae 09       	sbc	r26, r14
    181a:	bf 09       	sbc	r27, r15
    181c:	0a 97       	sbiw	r24, 0x0a	; 10
    181e:	a1 05       	cpc	r26, r1
    1820:	b1 05       	cpc	r27, r1
    1822:	78 f3       	brcs	.-34     	; 0x1802 <i2cEnd+0x24>
			{
				return false;
    1824:	80 e0       	ldi	r24, 0x00	; 0
    1826:	03 c0       	rjmp	.+6      	; 0x182e <i2cEnd+0x50>
			}
		}
		break;
	}
	
	return true;
    1828:	81 e0       	ldi	r24, 0x01	; 1
    182a:	01 c0       	rjmp	.+2      	; 0x182e <i2cEnd+0x50>
    182c:	81 e0       	ldi	r24, 0x01	; 1
}
    182e:	ff 90       	pop	r15
    1830:	ef 90       	pop	r14
    1832:	df 90       	pop	r13
    1834:	cf 90       	pop	r12
    1836:	08 95       	ret

00001838 <i2cIsDeviceReady>:
	
	return ret;
}
 
bool i2cIsDeviceReady(uint8_t ch, uint8_t dev_addr)
{
    1838:	cf 93       	push	r28
    183a:	df 93       	push	r29
	
	switch(ch)
    183c:	81 11       	cpse	r24, r1
    183e:	11 c0       	rjmp	.+34     	; 0x1862 <i2cIsDeviceReady+0x2a>
    1840:	d6 2f       	mov	r29, r22
    1842:	c8 2f       	mov	r28, r24
	{
		case _DEF_I2C1:
		if(i2cStart(ch) != true)
    1844:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <i2cStart>
    1848:	88 23       	and	r24, r24
    184a:	61 f0       	breq	.+24     	; 0x1864 <i2cIsDeviceReady+0x2c>
		{
			return false;
		}
		
		if(i2cSendAddr(ch, (dev_addr << 1)) != true)
    184c:	6d 2f       	mov	r22, r29
    184e:	66 0f       	add	r22, r22
    1850:	8c 2f       	mov	r24, r28
    1852:	0e 94 89 0b 	call	0x1712	; 0x1712 <i2cSendAddr>
    1856:	88 23       	and	r24, r24
    1858:	29 f0       	breq	.+10     	; 0x1864 <i2cIsDeviceReady+0x2c>
		{
			return false;
		}
		
		if(i2cEnd(ch) != true)
    185a:	8c 2f       	mov	r24, r28
    185c:	0e 94 ef 0b 	call	0x17de	; 0x17de <i2cEnd>
    1860:	01 c0       	rjmp	.+2      	; 0x1864 <i2cIsDeviceReady+0x2c>
			return false;
		}
		break;
	}
	
	return true;
    1862:	81 e0       	ldi	r24, 0x01	; 1
}
    1864:	df 91       	pop	r29
    1866:	cf 91       	pop	r28
    1868:	08 95       	ret

0000186a <cliI2c>:
}



void cliI2c(cli_args_t *args)
{
    186a:	cf 93       	push	r28
    186c:	df 93       	push	r29
	
	bool ret = false;

	if (args->argc == 1 && args->isStr(0, "scan") == true)
    186e:	dc 01       	movw	r26, r24
    1870:	2d 91       	ld	r18, X+
    1872:	3c 91       	ld	r19, X
    1874:	11 97       	sbiw	r26, 0x01	; 1
    1876:	21 30       	cpi	r18, 0x01	; 1
    1878:	31 05       	cpc	r19, r1
    187a:	31 f5       	brne	.+76     	; 0x18c8 <cliI2c+0x5e>
    187c:	1a 96       	adiw	r26, 0x0a	; 10
    187e:	ed 91       	ld	r30, X+
    1880:	fc 91       	ld	r31, X
    1882:	1b 97       	sbiw	r26, 0x0b	; 11
    1884:	62 e3       	ldi	r22, 0x32	; 50
    1886:	70 e4       	ldi	r23, 0x40	; 64
    1888:	80 e0       	ldi	r24, 0x00	; 0
    188a:	09 95       	icall
    188c:	81 11       	cpse	r24, r1
    188e:	15 c0       	rjmp	.+42     	; 0x18ba <cliI2c+0x50>
    1890:	1c c0       	rjmp	.+56     	; 0x18ca <cliI2c+0x60>
	{
		for(int i=0x00; i<=0x7F; i++)
		{
			if(i2cIsDeviceReady(_DEF_I2C1, i) == true)
    1892:	6c 2f       	mov	r22, r28
    1894:	80 e0       	ldi	r24, 0x00	; 0
    1896:	0e 94 1c 0c 	call	0x1838	; 0x1838 <i2cIsDeviceReady>
    189a:	88 23       	and	r24, r24
    189c:	61 f0       	breq	.+24     	; 0x18b6 <cliI2c+0x4c>
			{
				cliPrintf_P(PSTR("[OK] Addr : 0x%X\n"), i);
    189e:	df 93       	push	r29
    18a0:	cf 93       	push	r28
    18a2:	82 e0       	ldi	r24, 0x02	; 2
    18a4:	92 e0       	ldi	r25, 0x02	; 2
    18a6:	9f 93       	push	r25
    18a8:	8f 93       	push	r24
    18aa:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    18ae:	0f 90       	pop	r0
    18b0:	0f 90       	pop	r0
    18b2:	0f 90       	pop	r0
    18b4:	0f 90       	pop	r0
	
	bool ret = false;

	if (args->argc == 1 && args->isStr(0, "scan") == true)
	{
		for(int i=0x00; i<=0x7F; i++)
    18b6:	21 96       	adiw	r28, 0x01	; 1
    18b8:	02 c0       	rjmp	.+4      	; 0x18be <cliI2c+0x54>
    18ba:	c0 e0       	ldi	r28, 0x00	; 0
    18bc:	d0 e0       	ldi	r29, 0x00	; 0
    18be:	c0 38       	cpi	r28, 0x80	; 128
    18c0:	d1 05       	cpc	r29, r1
    18c2:	3c f3       	brlt	.-50     	; 0x1892 <cliI2c+0x28>
			{
				cliPrintf_P(PSTR("[OK] Addr : 0x%X\n"), i);
			}
		}
		
		ret = true;
    18c4:	81 e0       	ldi	r24, 0x01	; 1
    18c6:	01 c0       	rjmp	.+2      	; 0x18ca <cliI2c+0x60>


void cliI2c(cli_args_t *args)
{
	
	bool ret = false;
    18c8:	80 e0       	ldi	r24, 0x00	; 0
		}
		
		ret = true;
	}

	if (ret != true)
    18ca:	81 11       	cpse	r24, r1
    18cc:	08 c0       	rjmp	.+16     	; 0x18de <cliI2c+0x74>
	{
		cliPrintf_P(PSTR("i2c scan\n"));
    18ce:	88 ef       	ldi	r24, 0xF8	; 248
    18d0:	91 e0       	ldi	r25, 0x01	; 1
    18d2:	9f 93       	push	r25
    18d4:	8f 93       	push	r24
    18d6:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <cliPrintf_P>
    18da:	0f 90       	pop	r0
    18dc:	0f 90       	pop	r0
	}
}
    18de:	df 91       	pop	r29
    18e0:	cf 91       	pop	r28
    18e2:	08 95       	ret

000018e4 <GLCD_Send>:
	GLCD_Send(0<<__GLCD_DC, &Command, 1);
}

void GLCD_SendData(const uint8_t Data)
{
	GLCD_BufferWrite(__GLCD.X++, __GLCD.Y, Data);
    18e4:	ff 92       	push	r15
    18e6:	0f 93       	push	r16
    18e8:	1f 93       	push	r17
    18ea:	cf 93       	push	r28
    18ec:	df 93       	push	r29
    18ee:	8b 01       	movw	r16, r22
    18f0:	f4 2e       	mov	r15, r20
    18f2:	80 e0       	ldi	r24, 0x00	; 0
    18f4:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <i2cStart>
    18f8:	68 e7       	ldi	r22, 0x78	; 120
    18fa:	80 e0       	ldi	r24, 0x00	; 0
    18fc:	0e 94 89 0b 	call	0x1712	; 0x1712 <i2cSendAddr>
    1900:	60 e0       	ldi	r22, 0x00	; 0
    1902:	80 e0       	ldi	r24, 0x00	; 0
    1904:	0e 94 be 0b 	call	0x177c	; 0x177c <i2cSendData>
    1908:	c0 e0       	ldi	r28, 0x00	; 0
    190a:	d0 e0       	ldi	r29, 0x00	; 0
    190c:	07 c0       	rjmp	.+14     	; 0x191c <GLCD_Send+0x38>
    190e:	f8 01       	movw	r30, r16
    1910:	61 91       	ld	r22, Z+
    1912:	8f 01       	movw	r16, r30
    1914:	80 e0       	ldi	r24, 0x00	; 0
    1916:	0e 94 be 0b 	call	0x177c	; 0x177c <i2cSendData>
    191a:	21 96       	adiw	r28, 0x01	; 1
    191c:	8f 2d       	mov	r24, r15
    191e:	90 e0       	ldi	r25, 0x00	; 0
    1920:	c8 17       	cp	r28, r24
    1922:	d9 07       	cpc	r29, r25
    1924:	a4 f3       	brlt	.-24     	; 0x190e <GLCD_Send+0x2a>
    1926:	80 e0       	ldi	r24, 0x00	; 0
    1928:	0e 94 ef 0b 	call	0x17de	; 0x17de <i2cEnd>
    192c:	df 91       	pop	r29
    192e:	cf 91       	pop	r28
    1930:	1f 91       	pop	r17
    1932:	0f 91       	pop	r16
    1934:	ff 90       	pop	r15
    1936:	08 95       	ret

00001938 <GLCD_SendCommand>:
    1938:	cf 93       	push	r28
    193a:	df 93       	push	r29
    193c:	1f 92       	push	r1
    193e:	cd b7       	in	r28, 0x3d	; 61
    1940:	de b7       	in	r29, 0x3e	; 62
    1942:	89 83       	std	Y+1, r24	; 0x01
    1944:	41 e0       	ldi	r20, 0x01	; 1
    1946:	be 01       	movw	r22, r28
    1948:	6f 5f       	subi	r22, 0xFF	; 255
    194a:	7f 4f       	sbci	r23, 0xFF	; 255
    194c:	80 e0       	ldi	r24, 0x00	; 0
    194e:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <GLCD_Send>
    1952:	0f 90       	pop	r0
    1954:	df 91       	pop	r29
    1956:	cf 91       	pop	r28
    1958:	08 95       	ret

0000195a <GLCD_Setup>:
	//Setup I2C hardware
//	__I2C_Setup();

	//Commands needed for initialization
	//-------------------------------------------------------------
	GLCD_SendCommand(__GLCD_Command_Display_Off);				//0xAE
    195a:	8e ea       	ldi	r24, 0xAE	; 174
    195c:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	
	GLCD_SendCommand(__GLCD_Command_Display_Clock_Div_Ratio_Set);		//0xD5
    1960:	85 ed       	ldi	r24, 0xD5	; 213
    1962:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	GLCD_SendCommand(0xF0);							//Suggest ratio
    1966:	80 ef       	ldi	r24, 0xF0	; 240
    1968:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	
	GLCD_SendCommand(__GLCD_Command_Multiplex_Radio_Set);			//0xA8
    196c:	88 ea       	ldi	r24, 0xA8	; 168
    196e:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	GLCD_SendCommand(__GLCD_Screen_Height - 1);
    1972:	8f e1       	ldi	r24, 0x1F	; 31
    1974:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	
	GLCD_SendCommand(__GLCD_Command_Display_Offset_Set);			//0xD3
    1978:	83 ed       	ldi	r24, 0xD3	; 211
    197a:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	GLCD_SendCommand(0x00);							//No offset
    197e:	80 e0       	ldi	r24, 0x00	; 0
    1980:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>

	GLCD_SendCommand(__GLCD_Command_Charge_Pump_Set);			//0x8D
    1984:	8d e8       	ldi	r24, 0x8D	; 141
    1986:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	GLCD_SendCommand(0x14);							//Enable charge pump
    198a:	84 e1       	ldi	r24, 0x14	; 20
    198c:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>

	GLCD_SendCommand(__GLCD_Command_Display_Start_Line_Set | 0x00);		//0x40 | Start line
    1990:	80 e4       	ldi	r24, 0x40	; 64
    1992:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	
	GLCD_SendCommand(__GLCD_Command_Memory_Addressing_Set);			//0x20
    1996:	80 e2       	ldi	r24, 0x20	; 32
    1998:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	GLCD_SendCommand(0x00);							//Horizontal Addressing - Operate like KS0108
    199c:	80 e0       	ldi	r24, 0x00	; 0
    199e:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	
	GLCD_SendCommand(__GLCD_Command_Segment_Remap_Set | 0x01);		//0xA0 - Left towards Right
    19a2:	81 ea       	ldi	r24, 0xA1	; 161
    19a4:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>

	GLCD_SendCommand(__GLCD_Command_Com_Output_Scan_Dec);			//0xC8 - Up towards Down
    19a8:	88 ec       	ldi	r24, 0xC8	; 200
    19aa:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>

	GLCD_SendCommand(__GLCD_Command_Com_Pins_Set);				//0xDA
    19ae:	8a ed       	ldi	r24, 0xDA	; 218
    19b0:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	
	#if (GLCD_Size == GLCD_128_64)
		GLCD_SendCommand(0x12);						//Sequential COM pin configuration
	#elif (GLCD_Size == GLCD_128_32)
		GLCD_SendCommand(0x02);						//Alternative COM pin configuration
    19b4:	82 e0       	ldi	r24, 0x02	; 2
    19b6:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	#elif (GLCD_Size == GLCD_96_16)
		GLCD_SendCommand(0x02);						//Alternative COM pin configuration
	#endif
	
	GLCD_SendCommand(__GLCD_Command_Constrast_Set);				//0x81
    19ba:	81 e8       	ldi	r24, 0x81	; 129
    19bc:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	GLCD_SendCommand(0xFF);
    19c0:	8f ef       	ldi	r24, 0xFF	; 255
    19c2:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>

	GLCD_SendCommand(__GLCD_Command_Precharge_Period_Set);			//0xD9
    19c6:	89 ed       	ldi	r24, 0xD9	; 217
    19c8:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	GLCD_SendCommand(0xF1);
    19cc:	81 ef       	ldi	r24, 0xF1	; 241
    19ce:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>

	GLCD_SendCommand(__GLCD_Command_VCOMH_Deselect_Level_Set);		//0xDB
    19d2:	8b ed       	ldi	r24, 0xDB	; 219
    19d4:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	GLCD_SendCommand(0x20);
    19d8:	80 e2       	ldi	r24, 0x20	; 32
    19da:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>

	GLCD_SendCommand(__GLCD_Command_Display_All_On_Resume);			//0xA4
    19de:	84 ea       	ldi	r24, 0xA4	; 164
    19e0:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	GLCD_SendCommand(__GLCD_Command_Display_Normal);			//0xA6
    19e4:	86 ea       	ldi	r24, 0xA6	; 166
    19e6:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	GLCD_SendCommand(__GLCD_Command_Scroll_Deactivate);			//0x2E
    19ea:	8e e2       	ldi	r24, 0x2E	; 46
    19ec:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
	GLCD_SendCommand(__GLCD_Command_Display_On);				//0xAF
    19f0:	8f ea       	ldi	r24, 0xAF	; 175
    19f2:	0e 94 9c 0c 	call	0x1938	; 0x1938 <GLCD_SendCommand>
    19f6:	08 95       	ret

000019f8 <ledInit>:
	{
		*reg &= ~(1<<pgm_read_byte(&pin_tbl[ch].pin_num));
	}
	else
	{
		*reg |= (1<<pgm_read_byte(&pin_tbl[ch].pin_num));
    19f8:	20 e0       	ldi	r18, 0x00	; 0
    19fa:	30 e0       	ldi	r19, 0x00	; 0
    19fc:	20 c0       	rjmp	.+64     	; 0x1a3e <ledInit+0x46>
    19fe:	c9 01       	movw	r24, r18
    1a00:	88 0f       	add	r24, r24
    1a02:	99 1f       	adc	r25, r25
    1a04:	fc 01       	movw	r30, r24
    1a06:	e2 0f       	add	r30, r18
    1a08:	f3 1f       	adc	r31, r19
    1a0a:	ee 0f       	add	r30, r30
    1a0c:	ff 1f       	adc	r31, r31
    1a0e:	ec 5e       	subi	r30, 0xEC	; 236
    1a10:	fd 4f       	sbci	r31, 0xFD	; 253
    1a12:	a5 91       	lpm	r26, Z+
    1a14:	b4 91       	lpm	r27, Z
    1a16:	fc 01       	movw	r30, r24
    1a18:	e2 0f       	add	r30, r18
    1a1a:	f3 1f       	adc	r31, r19
    1a1c:	ee 0f       	add	r30, r30
    1a1e:	ff 1f       	adc	r31, r31
    1a20:	e8 5e       	subi	r30, 0xE8	; 232
    1a22:	fd 4f       	sbci	r31, 0xFD	; 253
    1a24:	e4 91       	lpm	r30, Z
    1a26:	81 e0       	ldi	r24, 0x01	; 1
    1a28:	90 e0       	ldi	r25, 0x00	; 0
    1a2a:	02 c0       	rjmp	.+4      	; 0x1a30 <ledInit+0x38>
    1a2c:	88 0f       	add	r24, r24
    1a2e:	99 1f       	adc	r25, r25
    1a30:	ea 95       	dec	r30
    1a32:	e2 f7       	brpl	.-8      	; 0x1a2c <ledInit+0x34>
    1a34:	9c 91       	ld	r25, X
    1a36:	89 2b       	or	r24, r25
    1a38:	8c 93       	st	X, r24
    1a3a:	2f 5f       	subi	r18, 0xFF	; 255
    1a3c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a3e:	12 16       	cp	r1, r18
    1a40:	13 06       	cpc	r1, r19
    1a42:	ec f6       	brge	.-70     	; 0x19fe <ledInit+0x6>
    1a44:	81 e0       	ldi	r24, 0x01	; 1
    1a46:	08 95       	ret

00001a48 <ledToggle>:
void ledToggle(uint8_t ch)
{
	volatile uint8_t *reg;


	reg = (volatile uint8_t *)( pgm_read_word(&pin_tbl[ch].out_port));
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	9c 01       	movw	r18, r24
    1a4c:	22 0f       	add	r18, r18
    1a4e:	33 1f       	adc	r19, r19
    1a50:	f9 01       	movw	r30, r18
    1a52:	e8 0f       	add	r30, r24
    1a54:	f9 1f       	adc	r31, r25
    1a56:	ee 0f       	add	r30, r30
    1a58:	ff 1f       	adc	r31, r31
    1a5a:	ea 5e       	subi	r30, 0xEA	; 234
    1a5c:	fd 4f       	sbci	r31, 0xFD	; 253
    1a5e:	a5 91       	lpm	r26, Z+
    1a60:	b4 91       	lpm	r27, Z

	*reg ^= (1<<pgm_read_byte(&pin_tbl[ch].pin_num));
    1a62:	f9 01       	movw	r30, r18
    1a64:	e8 0f       	add	r30, r24
    1a66:	f9 1f       	adc	r31, r25
    1a68:	ee 0f       	add	r30, r30
    1a6a:	ff 1f       	adc	r31, r31
    1a6c:	e8 5e       	subi	r30, 0xE8	; 232
    1a6e:	fd 4f       	sbci	r31, 0xFD	; 253
    1a70:	e4 91       	lpm	r30, Z
    1a72:	81 e0       	ldi	r24, 0x01	; 1
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	02 c0       	rjmp	.+4      	; 0x1a7c <ledToggle+0x34>
    1a78:	88 0f       	add	r24, r24
    1a7a:	99 1f       	adc	r25, r25
    1a7c:	ea 95       	dec	r30
    1a7e:	e2 f7       	brpl	.-8      	; 0x1a78 <ledToggle+0x30>
    1a80:	9c 91       	ld	r25, X
    1a82:	89 27       	eor	r24, r25
    1a84:	8c 93       	st	X, r24
    1a86:	08 95       	ret

00001a88 <uartRxHandler>:
}

uint32_t uartGetBaud(uint8_t ch)
{
	return uart_tbl[ch].baud;
}
    1a88:	cf 93       	push	r28
    1a8a:	df 93       	push	r29
    1a8c:	1f 92       	push	r1
    1a8e:	cd b7       	in	r28, 0x3d	; 61
    1a90:	de b7       	in	r29, 0x3e	; 62
    1a92:	69 83       	std	Y+1, r22	; 0x01
    1a94:	28 2f       	mov	r18, r24
    1a96:	30 e0       	ldi	r19, 0x00	; 0
    1a98:	87 e5       	ldi	r24, 0x57	; 87
    1a9a:	82 9f       	mul	r24, r18
    1a9c:	f0 01       	movw	r30, r0
    1a9e:	83 9f       	mul	r24, r19
    1aa0:	f0 0d       	add	r31, r0
    1aa2:	11 24       	eor	r1, r1
    1aa4:	e4 56       	subi	r30, 0x64	; 100
    1aa6:	fa 4b       	sbci	r31, 0xBA	; 186
    1aa8:	86 81       	ldd	r24, Z+6	; 0x06
    1aaa:	81 30       	cpi	r24, 0x01	; 1
    1aac:	89 f4       	brne	.+34     	; 0x1ad0 <uartRxHandler+0x48>
    1aae:	47 e5       	ldi	r20, 0x57	; 87
    1ab0:	42 9f       	mul	r20, r18
    1ab2:	c0 01       	movw	r24, r0
    1ab4:	43 9f       	mul	r20, r19
    1ab6:	90 0d       	add	r25, r0
    1ab8:	11 24       	eor	r1, r1
    1aba:	21 e0       	ldi	r18, 0x01	; 1
    1abc:	30 e0       	ldi	r19, 0x00	; 0
    1abe:	40 e0       	ldi	r20, 0x00	; 0
    1ac0:	50 e0       	ldi	r21, 0x00	; 0
    1ac2:	be 01       	movw	r22, r28
    1ac4:	6f 5f       	subi	r22, 0xFF	; 255
    1ac6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ac8:	8b 51       	subi	r24, 0x1B	; 27
    1aca:	9a 4b       	sbci	r25, 0xBA	; 186
    1acc:	0e 94 19 03 	call	0x632	; 0x632 <qbufferWrite>
    1ad0:	0f 90       	pop	r0
    1ad2:	df 91       	pop	r29
    1ad4:	cf 91       	pop	r28
    1ad6:	08 95       	ret

00001ad8 <uartInit>:
    1ad8:	80 e0       	ldi	r24, 0x00	; 0
    1ada:	0a c0       	rjmp	.+20     	; 0x1af0 <uartInit+0x18>
    1adc:	97 e5       	ldi	r25, 0x57	; 87
    1ade:	89 9f       	mul	r24, r25
    1ae0:	f0 01       	movw	r30, r0
    1ae2:	11 24       	eor	r1, r1
    1ae4:	e4 56       	subi	r30, 0x64	; 100
    1ae6:	fa 4b       	sbci	r31, 0xBA	; 186
    1ae8:	10 82       	st	Z, r1
    1aea:	16 82       	std	Z+6, r1	; 0x06
    1aec:	15 82       	std	Z+5, r1	; 0x05
    1aee:	8f 5f       	subi	r24, 0xFF	; 255
    1af0:	88 23       	and	r24, r24
    1af2:	a1 f3       	breq	.-24     	; 0x1adc <uartInit+0x4>
    1af4:	81 e0       	ldi	r24, 0x01	; 1
    1af6:	08 95       	ret

00001af8 <uartOpen>:
    1af8:	cf 92       	push	r12
    1afa:	df 92       	push	r13
    1afc:	ef 92       	push	r14
    1afe:	ff 92       	push	r15
    1b00:	1f 93       	push	r17
    1b02:	cf 93       	push	r28
    1b04:	df 93       	push	r29
    1b06:	81 11       	cpse	r24, r1
    1b08:	40 c0       	rjmp	.+128    	; 0x1b8a <uartOpen+0x92>
    1b0a:	6a 01       	movw	r12, r20
    1b0c:	7b 01       	movw	r14, r22
    1b0e:	f8 94       	cli
    1b10:	27 e5       	ldi	r18, 0x57	; 87
    1b12:	82 9f       	mul	r24, r18
    1b14:	c0 01       	movw	r24, r0
    1b16:	11 24       	eor	r1, r1
    1b18:	ec 01       	movw	r28, r24
    1b1a:	c4 56       	subi	r28, 0x64	; 100
    1b1c:	da 4b       	sbci	r29, 0xBA	; 186
    1b1e:	11 e0       	ldi	r17, 0x01	; 1
    1b20:	1e 83       	std	Y+6, r17	; 0x06
    1b22:	49 83       	std	Y+1, r20	; 0x01
    1b24:	5a 83       	std	Y+2, r21	; 0x02
    1b26:	6b 83       	std	Y+3, r22	; 0x03
    1b28:	7c 83       	std	Y+4, r23	; 0x04
    1b2a:	20 e2       	ldi	r18, 0x20	; 32
    1b2c:	38 e0       	ldi	r19, 0x08	; 8
    1b2e:	2f 83       	std	Y+7, r18	; 0x07
    1b30:	38 87       	std	Y+8, r19	; 0x08
    1b32:	bc 01       	movw	r22, r24
    1b34:	6b 55       	subi	r22, 0x5B	; 91
    1b36:	7a 4b       	sbci	r23, 0xBA	; 186
    1b38:	20 e4       	ldi	r18, 0x40	; 64
    1b3a:	30 e0       	ldi	r19, 0x00	; 0
    1b3c:	40 e0       	ldi	r20, 0x00	; 0
    1b3e:	50 e0       	ldi	r21, 0x00	; 0
    1b40:	8b 51       	subi	r24, 0x1B	; 27
    1b42:	9a 4b       	sbci	r25, 0xBA	; 186
    1b44:	0e 94 00 03 	call	0x600	; 0x600 <qbufferCreate>
    1b48:	60 e0       	ldi	r22, 0x00	; 0
    1b4a:	78 ed       	ldi	r23, 0xD8	; 216
    1b4c:	88 eb       	ldi	r24, 0xB8	; 184
    1b4e:	95 e0       	ldi	r25, 0x05	; 5
    1b50:	a7 01       	movw	r20, r14
    1b52:	96 01       	movw	r18, r12
    1b54:	0e 94 16 11 	call	0x222c	; 0x222c <__udivmodsi4>
    1b58:	ef 81       	ldd	r30, Y+7	; 0x07
    1b5a:	f8 85       	ldd	r31, Y+8	; 0x08
    1b5c:	20 87       	std	Z+8, r18	; 0x08
    1b5e:	31 87       	std	Z+9, r19	; 0x09
    1b60:	ef 81       	ldd	r30, Y+7	; 0x07
    1b62:	f8 85       	ldd	r31, Y+8	; 0x08
    1b64:	8b e0       	ldi	r24, 0x0B	; 11
    1b66:	87 83       	std	Z+7, r24	; 0x07
    1b68:	e0 e4       	ldi	r30, 0x40	; 64
    1b6a:	f4 e0       	ldi	r31, 0x04	; 4
    1b6c:	11 83       	std	Z+1, r17	; 0x01
    1b6e:	82 e0       	ldi	r24, 0x02	; 2
    1b70:	82 83       	std	Z+2, r24	; 0x02
    1b72:	ef 81       	ldd	r30, Y+7	; 0x07
    1b74:	f8 85       	ldd	r31, Y+8	; 0x08
    1b76:	80 ec       	ldi	r24, 0xC0	; 192
    1b78:	86 83       	std	Z+6, r24	; 0x06
    1b7a:	ef 81       	ldd	r30, Y+7	; 0x07
    1b7c:	f8 85       	ldd	r31, Y+8	; 0x08
    1b7e:	80 e8       	ldi	r24, 0x80	; 128
    1b80:	85 83       	std	Z+5, r24	; 0x05
    1b82:	78 94       	sei
    1b84:	18 83       	st	Y, r17
    1b86:	81 e0       	ldi	r24, 0x01	; 1
    1b88:	01 c0       	rjmp	.+2      	; 0x1b8c <uartOpen+0x94>
    1b8a:	80 e0       	ldi	r24, 0x00	; 0
    1b8c:	df 91       	pop	r29
    1b8e:	cf 91       	pop	r28
    1b90:	1f 91       	pop	r17
    1b92:	ff 90       	pop	r15
    1b94:	ef 90       	pop	r14
    1b96:	df 90       	pop	r13
    1b98:	cf 90       	pop	r12
    1b9a:	08 95       	ret

00001b9c <uartAvailable>:
    1b9c:	81 11       	cpse	r24, r1
    1b9e:	09 c0       	rjmp	.+18     	; 0x1bb2 <uartAvailable+0x16>
    1ba0:	27 e5       	ldi	r18, 0x57	; 87
    1ba2:	82 9f       	mul	r24, r18
    1ba4:	c0 01       	movw	r24, r0
    1ba6:	11 24       	eor	r1, r1
    1ba8:	8b 51       	subi	r24, 0x1B	; 27
    1baa:	9a 4b       	sbci	r25, 0xBA	; 186
    1bac:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <qbufferAvailable>
    1bb0:	08 95       	ret
    1bb2:	60 e0       	ldi	r22, 0x00	; 0
    1bb4:	70 e0       	ldi	r23, 0x00	; 0
    1bb6:	cb 01       	movw	r24, r22
    1bb8:	08 95       	ret

00001bba <uartWrite>:
    1bba:	4f 92       	push	r4
    1bbc:	5f 92       	push	r5
    1bbe:	6f 92       	push	r6
    1bc0:	7f 92       	push	r7
    1bc2:	8f 92       	push	r8
    1bc4:	9f 92       	push	r9
    1bc6:	af 92       	push	r10
    1bc8:	bf 92       	push	r11
    1bca:	cf 92       	push	r12
    1bcc:	df 92       	push	r13
    1bce:	ef 92       	push	r14
    1bd0:	ff 92       	push	r15
    1bd2:	0f 93       	push	r16
    1bd4:	1f 93       	push	r17
    1bd6:	cf 93       	push	r28
    1bd8:	df 93       	push	r29
    1bda:	e7 e5       	ldi	r30, 0x57	; 87
    1bdc:	8e 9f       	mul	r24, r30
    1bde:	c0 01       	movw	r24, r0
    1be0:	11 24       	eor	r1, r1
    1be2:	fc 01       	movw	r30, r24
    1be4:	e4 56       	subi	r30, 0x64	; 100
    1be6:	fa 4b       	sbci	r31, 0xBA	; 186
    1be8:	c7 81       	ldd	r28, Z+7	; 0x07
    1bea:	d0 85       	ldd	r29, Z+8	; 0x08
    1bec:	86 81       	ldd	r24, Z+6	; 0x06
    1bee:	81 30       	cpi	r24, 0x01	; 1
    1bf0:	59 f5       	brne	.+86     	; 0x1c48 <uartWrite+0x8e>
    1bf2:	49 01       	movw	r8, r18
    1bf4:	5a 01       	movw	r10, r20
    1bf6:	8b 01       	movw	r16, r22
    1bf8:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <millis>
    1bfc:	2b 01       	movw	r4, r22
    1bfe:	3c 01       	movw	r6, r24
    1c00:	c1 2c       	mov	r12, r1
    1c02:	d1 2c       	mov	r13, r1
    1c04:	76 01       	movw	r14, r12
    1c06:	1a c0       	rjmp	.+52     	; 0x1c3c <uartWrite+0x82>
    1c08:	8c 81       	ldd	r24, Y+4	; 0x04
    1c0a:	85 ff       	sbrs	r24, 5
    1c0c:	0a c0       	rjmp	.+20     	; 0x1c22 <uartWrite+0x68>
    1c0e:	f8 01       	movw	r30, r16
    1c10:	ec 0d       	add	r30, r12
    1c12:	fd 1d       	adc	r31, r13
    1c14:	80 81       	ld	r24, Z
    1c16:	8a 83       	std	Y+2, r24	; 0x02
    1c18:	2f ef       	ldi	r18, 0xFF	; 255
    1c1a:	c2 1a       	sub	r12, r18
    1c1c:	d2 0a       	sbc	r13, r18
    1c1e:	e2 0a       	sbc	r14, r18
    1c20:	f2 0a       	sbc	r15, r18
    1c22:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <millis>
    1c26:	dc 01       	movw	r26, r24
    1c28:	cb 01       	movw	r24, r22
    1c2a:	84 19       	sub	r24, r4
    1c2c:	95 09       	sbc	r25, r5
    1c2e:	a6 09       	sbc	r26, r6
    1c30:	b7 09       	sbc	r27, r7
    1c32:	84 3f       	cpi	r24, 0xF4	; 244
    1c34:	91 40       	sbci	r25, 0x01	; 1
    1c36:	a1 05       	cpc	r26, r1
    1c38:	b1 05       	cpc	r27, r1
    1c3a:	48 f4       	brcc	.+18     	; 0x1c4e <uartWrite+0x94>
    1c3c:	c8 14       	cp	r12, r8
    1c3e:	d9 04       	cpc	r13, r9
    1c40:	ea 04       	cpc	r14, r10
    1c42:	fb 04       	cpc	r15, r11
    1c44:	08 f3       	brcs	.-62     	; 0x1c08 <uartWrite+0x4e>
    1c46:	03 c0       	rjmp	.+6      	; 0x1c4e <uartWrite+0x94>
    1c48:	c1 2c       	mov	r12, r1
    1c4a:	d1 2c       	mov	r13, r1
    1c4c:	76 01       	movw	r14, r12
    1c4e:	c7 01       	movw	r24, r14
    1c50:	b6 01       	movw	r22, r12
    1c52:	df 91       	pop	r29
    1c54:	cf 91       	pop	r28
    1c56:	1f 91       	pop	r17
    1c58:	0f 91       	pop	r16
    1c5a:	ff 90       	pop	r15
    1c5c:	ef 90       	pop	r14
    1c5e:	df 90       	pop	r13
    1c60:	cf 90       	pop	r12
    1c62:	bf 90       	pop	r11
    1c64:	af 90       	pop	r10
    1c66:	9f 90       	pop	r9
    1c68:	8f 90       	pop	r8
    1c6a:	7f 90       	pop	r7
    1c6c:	6f 90       	pop	r6
    1c6e:	5f 90       	pop	r5
    1c70:	4f 90       	pop	r4
    1c72:	08 95       	ret

00001c74 <uartRead>:
    1c74:	cf 93       	push	r28
    1c76:	df 93       	push	r29
    1c78:	1f 92       	push	r1
    1c7a:	cd b7       	in	r28, 0x3d	; 61
    1c7c:	de b7       	in	r29, 0x3e	; 62
    1c7e:	19 82       	std	Y+1, r1	; 0x01
    1c80:	28 2f       	mov	r18, r24
    1c82:	30 e0       	ldi	r19, 0x00	; 0
    1c84:	87 e5       	ldi	r24, 0x57	; 87
    1c86:	82 9f       	mul	r24, r18
    1c88:	f0 01       	movw	r30, r0
    1c8a:	83 9f       	mul	r24, r19
    1c8c:	f0 0d       	add	r31, r0
    1c8e:	11 24       	eor	r1, r1
    1c90:	e4 56       	subi	r30, 0x64	; 100
    1c92:	fa 4b       	sbci	r31, 0xBA	; 186
    1c94:	86 81       	ldd	r24, Z+6	; 0x06
    1c96:	81 30       	cpi	r24, 0x01	; 1
    1c98:	89 f4       	brne	.+34     	; 0x1cbc <uartRead+0x48>
    1c9a:	47 e5       	ldi	r20, 0x57	; 87
    1c9c:	42 9f       	mul	r20, r18
    1c9e:	c0 01       	movw	r24, r0
    1ca0:	43 9f       	mul	r20, r19
    1ca2:	90 0d       	add	r25, r0
    1ca4:	11 24       	eor	r1, r1
    1ca6:	21 e0       	ldi	r18, 0x01	; 1
    1ca8:	30 e0       	ldi	r19, 0x00	; 0
    1caa:	40 e0       	ldi	r20, 0x00	; 0
    1cac:	50 e0       	ldi	r21, 0x00	; 0
    1cae:	be 01       	movw	r22, r28
    1cb0:	6f 5f       	subi	r22, 0xFF	; 255
    1cb2:	7f 4f       	sbci	r23, 0xFF	; 255
    1cb4:	8b 51       	subi	r24, 0x1B	; 27
    1cb6:	9a 4b       	sbci	r25, 0xBA	; 186
    1cb8:	0e 94 81 03 	call	0x702	; 0x702 <qbufferRead>
    1cbc:	89 81       	ldd	r24, Y+1	; 0x01
    1cbe:	0f 90       	pop	r0
    1cc0:	df 91       	pop	r29
    1cc2:	cf 91       	pop	r28
    1cc4:	08 95       	ret

00001cc6 <uartPrintf>:
    1cc6:	cf 93       	push	r28
    1cc8:	df 93       	push	r29
    1cca:	cd b7       	in	r28, 0x3d	; 61
    1ccc:	de b7       	in	r29, 0x3e	; 62
    1cce:	c0 58       	subi	r28, 0x80	; 128
    1cd0:	d1 09       	sbc	r29, r1
    1cd2:	cd bf       	out	0x3d, r28	; 61
    1cd4:	de bf       	out	0x3e, r29	; 62
    1cd6:	9e 01       	movw	r18, r28
    1cd8:	28 57       	subi	r18, 0x78	; 120
    1cda:	3f 4f       	sbci	r19, 0xFF	; 255
    1cdc:	ca 57       	subi	r28, 0x7A	; 122
    1cde:	df 4f       	sbci	r29, 0xFF	; 255
    1ce0:	48 81       	ld	r20, Y
    1ce2:	59 81       	ldd	r21, Y+1	; 0x01
    1ce4:	c6 58       	subi	r28, 0x86	; 134
    1ce6:	d0 40       	sbci	r29, 0x00	; 0
    1ce8:	60 e8       	ldi	r22, 0x80	; 128
    1cea:	70 e0       	ldi	r23, 0x00	; 0
    1cec:	ce 01       	movw	r24, r28
    1cee:	01 96       	adiw	r24, 0x01	; 1
    1cf0:	0e 94 8d 14 	call	0x291a	; 0x291a <vsnprintf>
    1cf4:	9c 01       	movw	r18, r24
    1cf6:	99 0f       	add	r25, r25
    1cf8:	44 0b       	sbc	r20, r20
    1cfa:	55 0b       	sbc	r21, r21
    1cfc:	be 01       	movw	r22, r28
    1cfe:	6f 5f       	subi	r22, 0xFF	; 255
    1d00:	7f 4f       	sbci	r23, 0xFF	; 255
    1d02:	cb 57       	subi	r28, 0x7B	; 123
    1d04:	df 4f       	sbci	r29, 0xFF	; 255
    1d06:	88 81       	ld	r24, Y
    1d08:	c5 58       	subi	r28, 0x85	; 133
    1d0a:	d0 40       	sbci	r29, 0x00	; 0
    1d0c:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <uartWrite>
    1d10:	c0 58       	subi	r28, 0x80	; 128
    1d12:	df 4f       	sbci	r29, 0xFF	; 255
    1d14:	cd bf       	out	0x3d, r28	; 61
    1d16:	de bf       	out	0x3e, r29	; 62
    1d18:	df 91       	pop	r29
    1d1a:	cf 91       	pop	r28
    1d1c:	08 95       	ret

00001d1e <__vector_31>:
		qbufferWrite(&p_uart->qbuffer_rx, &rx_data, 1);
	}
}

ISR(USART1_RXC_vect, ISR_NOBLOCK)
{
    1d1e:	78 94       	sei
    1d20:	1f 92       	push	r1
    1d22:	0f 92       	push	r0
    1d24:	0f b6       	in	r0, 0x3f	; 63
    1d26:	0f 92       	push	r0
    1d28:	11 24       	eor	r1, r1
    1d2a:	0b b6       	in	r0, 0x3b	; 59
    1d2c:	0f 92       	push	r0
    1d2e:	2f 93       	push	r18
    1d30:	3f 93       	push	r19
    1d32:	4f 93       	push	r20
    1d34:	5f 93       	push	r21
    1d36:	6f 93       	push	r22
    1d38:	7f 93       	push	r23
    1d3a:	8f 93       	push	r24
    1d3c:	9f 93       	push	r25
    1d3e:	af 93       	push	r26
    1d40:	bf 93       	push	r27
    1d42:	ef 93       	push	r30
    1d44:	ff 93       	push	r31
	uartRxHandler(_DEF_UART1, USART1.RXDATAL);
    1d46:	60 91 20 08 	lds	r22, 0x0820	; 0x800820 <__TEXT_REGION_LENGTH__+0x7e0820>
    1d4a:	80 e0       	ldi	r24, 0x00	; 0
    1d4c:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <uartRxHandler>
}
    1d50:	ff 91       	pop	r31
    1d52:	ef 91       	pop	r30
    1d54:	bf 91       	pop	r27
    1d56:	af 91       	pop	r26
    1d58:	9f 91       	pop	r25
    1d5a:	8f 91       	pop	r24
    1d5c:	7f 91       	pop	r23
    1d5e:	6f 91       	pop	r22
    1d60:	5f 91       	pop	r21
    1d62:	4f 91       	pop	r20
    1d64:	3f 91       	pop	r19
    1d66:	2f 91       	pop	r18
    1d68:	0f 90       	pop	r0
    1d6a:	0b be       	out	0x3b, r0	; 59
    1d6c:	0f 90       	pop	r0
    1d6e:	0f be       	out	0x3f, r0	; 63
    1d70:	0f 90       	pop	r0
    1d72:	1f 90       	pop	r1
    1d74:	18 95       	reti

00001d76 <hwInit>:
#include "hw.h"


bool hwInit(void)
{
	bspInit();
    1d76:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <bspInit>
	
	ledInit();
    1d7a:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <ledInit>
	uartInit();
    1d7e:	0e 94 6c 0d 	call	0x1ad8	; 0x1ad8 <uartInit>
	cliInit();
    1d82:	0e 94 e6 0a 	call	0x15cc	; 0x15cc <cliInit>
	i2cInit();
    1d86:	0e 94 22 0b 	call	0x1644	; 0x1644 <i2cInit>
	
	return true;
    1d8a:	81 e0       	ldi	r24, 0x01	; 1
    1d8c:	08 95       	ret

00001d8e <main>:



int main(void)
{
	hwInit();
    1d8e:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <hwInit>
	apInit();
    1d92:	0e 94 63 02 	call	0x4c6	; 0x4c6 <apInit>

	apMain();
    1d96:	0e 94 72 02 	call	0x4e4	; 0x4e4 <apMain>
	
	return 0;
}
    1d9a:	80 e0       	ldi	r24, 0x00	; 0
    1d9c:	90 e0       	ldi	r25, 0x00	; 0
    1d9e:	08 95       	ret

00001da0 <__subsf3>:
    1da0:	50 58       	subi	r21, 0x80	; 128

00001da2 <__addsf3>:
    1da2:	bb 27       	eor	r27, r27
    1da4:	aa 27       	eor	r26, r26
    1da6:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <__addsf3x>
    1daa:	0c 94 5b 10 	jmp	0x20b6	; 0x20b6 <__fp_round>
    1dae:	0e 94 4d 10 	call	0x209a	; 0x209a <__fp_pscA>
    1db2:	38 f0       	brcs	.+14     	; 0x1dc2 <__addsf3+0x20>
    1db4:	0e 94 54 10 	call	0x20a8	; 0x20a8 <__fp_pscB>
    1db8:	20 f0       	brcs	.+8      	; 0x1dc2 <__addsf3+0x20>
    1dba:	39 f4       	brne	.+14     	; 0x1dca <__addsf3+0x28>
    1dbc:	9f 3f       	cpi	r25, 0xFF	; 255
    1dbe:	19 f4       	brne	.+6      	; 0x1dc6 <__addsf3+0x24>
    1dc0:	26 f4       	brtc	.+8      	; 0x1dca <__addsf3+0x28>
    1dc2:	0c 94 4a 10 	jmp	0x2094	; 0x2094 <__fp_nan>
    1dc6:	0e f4       	brtc	.+2      	; 0x1dca <__addsf3+0x28>
    1dc8:	e0 95       	com	r30
    1dca:	e7 fb       	bst	r30, 7
    1dcc:	0c 94 44 10 	jmp	0x2088	; 0x2088 <__fp_inf>

00001dd0 <__addsf3x>:
    1dd0:	e9 2f       	mov	r30, r25
    1dd2:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <__fp_split3>
    1dd6:	58 f3       	brcs	.-42     	; 0x1dae <__addsf3+0xc>
    1dd8:	ba 17       	cp	r27, r26
    1dda:	62 07       	cpc	r22, r18
    1ddc:	73 07       	cpc	r23, r19
    1dde:	84 07       	cpc	r24, r20
    1de0:	95 07       	cpc	r25, r21
    1de2:	20 f0       	brcs	.+8      	; 0x1dec <__addsf3x+0x1c>
    1de4:	79 f4       	brne	.+30     	; 0x1e04 <__addsf3x+0x34>
    1de6:	a6 f5       	brtc	.+104    	; 0x1e50 <__addsf3x+0x80>
    1de8:	0c 94 8e 10 	jmp	0x211c	; 0x211c <__fp_zero>
    1dec:	0e f4       	brtc	.+2      	; 0x1df0 <__addsf3x+0x20>
    1dee:	e0 95       	com	r30
    1df0:	0b 2e       	mov	r0, r27
    1df2:	ba 2f       	mov	r27, r26
    1df4:	a0 2d       	mov	r26, r0
    1df6:	0b 01       	movw	r0, r22
    1df8:	b9 01       	movw	r22, r18
    1dfa:	90 01       	movw	r18, r0
    1dfc:	0c 01       	movw	r0, r24
    1dfe:	ca 01       	movw	r24, r20
    1e00:	a0 01       	movw	r20, r0
    1e02:	11 24       	eor	r1, r1
    1e04:	ff 27       	eor	r31, r31
    1e06:	59 1b       	sub	r21, r25
    1e08:	99 f0       	breq	.+38     	; 0x1e30 <__addsf3x+0x60>
    1e0a:	59 3f       	cpi	r21, 0xF9	; 249
    1e0c:	50 f4       	brcc	.+20     	; 0x1e22 <__addsf3x+0x52>
    1e0e:	50 3e       	cpi	r21, 0xE0	; 224
    1e10:	68 f1       	brcs	.+90     	; 0x1e6c <__addsf3x+0x9c>
    1e12:	1a 16       	cp	r1, r26
    1e14:	f0 40       	sbci	r31, 0x00	; 0
    1e16:	a2 2f       	mov	r26, r18
    1e18:	23 2f       	mov	r18, r19
    1e1a:	34 2f       	mov	r19, r20
    1e1c:	44 27       	eor	r20, r20
    1e1e:	58 5f       	subi	r21, 0xF8	; 248
    1e20:	f3 cf       	rjmp	.-26     	; 0x1e08 <__addsf3x+0x38>
    1e22:	46 95       	lsr	r20
    1e24:	37 95       	ror	r19
    1e26:	27 95       	ror	r18
    1e28:	a7 95       	ror	r26
    1e2a:	f0 40       	sbci	r31, 0x00	; 0
    1e2c:	53 95       	inc	r21
    1e2e:	c9 f7       	brne	.-14     	; 0x1e22 <__addsf3x+0x52>
    1e30:	7e f4       	brtc	.+30     	; 0x1e50 <__addsf3x+0x80>
    1e32:	1f 16       	cp	r1, r31
    1e34:	ba 0b       	sbc	r27, r26
    1e36:	62 0b       	sbc	r22, r18
    1e38:	73 0b       	sbc	r23, r19
    1e3a:	84 0b       	sbc	r24, r20
    1e3c:	ba f0       	brmi	.+46     	; 0x1e6c <__addsf3x+0x9c>
    1e3e:	91 50       	subi	r25, 0x01	; 1
    1e40:	a1 f0       	breq	.+40     	; 0x1e6a <__addsf3x+0x9a>
    1e42:	ff 0f       	add	r31, r31
    1e44:	bb 1f       	adc	r27, r27
    1e46:	66 1f       	adc	r22, r22
    1e48:	77 1f       	adc	r23, r23
    1e4a:	88 1f       	adc	r24, r24
    1e4c:	c2 f7       	brpl	.-16     	; 0x1e3e <__addsf3x+0x6e>
    1e4e:	0e c0       	rjmp	.+28     	; 0x1e6c <__addsf3x+0x9c>
    1e50:	ba 0f       	add	r27, r26
    1e52:	62 1f       	adc	r22, r18
    1e54:	73 1f       	adc	r23, r19
    1e56:	84 1f       	adc	r24, r20
    1e58:	48 f4       	brcc	.+18     	; 0x1e6c <__addsf3x+0x9c>
    1e5a:	87 95       	ror	r24
    1e5c:	77 95       	ror	r23
    1e5e:	67 95       	ror	r22
    1e60:	b7 95       	ror	r27
    1e62:	f7 95       	ror	r31
    1e64:	9e 3f       	cpi	r25, 0xFE	; 254
    1e66:	08 f0       	brcs	.+2      	; 0x1e6a <__addsf3x+0x9a>
    1e68:	b0 cf       	rjmp	.-160    	; 0x1dca <__addsf3+0x28>
    1e6a:	93 95       	inc	r25
    1e6c:	88 0f       	add	r24, r24
    1e6e:	08 f0       	brcs	.+2      	; 0x1e72 <__addsf3x+0xa2>
    1e70:	99 27       	eor	r25, r25
    1e72:	ee 0f       	add	r30, r30
    1e74:	97 95       	ror	r25
    1e76:	87 95       	ror	r24
    1e78:	08 95       	ret

00001e7a <__cmpsf2>:
    1e7a:	0e 94 20 10 	call	0x2040	; 0x2040 <__fp_cmp>
    1e7e:	08 f4       	brcc	.+2      	; 0x1e82 <__cmpsf2+0x8>
    1e80:	81 e0       	ldi	r24, 0x01	; 1
    1e82:	08 95       	ret

00001e84 <__divsf3>:
    1e84:	0e 94 56 0f 	call	0x1eac	; 0x1eac <__divsf3x>
    1e88:	0c 94 5b 10 	jmp	0x20b6	; 0x20b6 <__fp_round>
    1e8c:	0e 94 54 10 	call	0x20a8	; 0x20a8 <__fp_pscB>
    1e90:	58 f0       	brcs	.+22     	; 0x1ea8 <__divsf3+0x24>
    1e92:	0e 94 4d 10 	call	0x209a	; 0x209a <__fp_pscA>
    1e96:	40 f0       	brcs	.+16     	; 0x1ea8 <__divsf3+0x24>
    1e98:	29 f4       	brne	.+10     	; 0x1ea4 <__divsf3+0x20>
    1e9a:	5f 3f       	cpi	r21, 0xFF	; 255
    1e9c:	29 f0       	breq	.+10     	; 0x1ea8 <__divsf3+0x24>
    1e9e:	0c 94 44 10 	jmp	0x2088	; 0x2088 <__fp_inf>
    1ea2:	51 11       	cpse	r21, r1
    1ea4:	0c 94 8f 10 	jmp	0x211e	; 0x211e <__fp_szero>
    1ea8:	0c 94 4a 10 	jmp	0x2094	; 0x2094 <__fp_nan>

00001eac <__divsf3x>:
    1eac:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <__fp_split3>
    1eb0:	68 f3       	brcs	.-38     	; 0x1e8c <__divsf3+0x8>

00001eb2 <__divsf3_pse>:
    1eb2:	99 23       	and	r25, r25
    1eb4:	b1 f3       	breq	.-20     	; 0x1ea2 <__divsf3+0x1e>
    1eb6:	55 23       	and	r21, r21
    1eb8:	91 f3       	breq	.-28     	; 0x1e9e <__divsf3+0x1a>
    1eba:	95 1b       	sub	r25, r21
    1ebc:	55 0b       	sbc	r21, r21
    1ebe:	bb 27       	eor	r27, r27
    1ec0:	aa 27       	eor	r26, r26
    1ec2:	62 17       	cp	r22, r18
    1ec4:	73 07       	cpc	r23, r19
    1ec6:	84 07       	cpc	r24, r20
    1ec8:	38 f0       	brcs	.+14     	; 0x1ed8 <__divsf3_pse+0x26>
    1eca:	9f 5f       	subi	r25, 0xFF	; 255
    1ecc:	5f 4f       	sbci	r21, 0xFF	; 255
    1ece:	22 0f       	add	r18, r18
    1ed0:	33 1f       	adc	r19, r19
    1ed2:	44 1f       	adc	r20, r20
    1ed4:	aa 1f       	adc	r26, r26
    1ed6:	a9 f3       	breq	.-22     	; 0x1ec2 <__divsf3_pse+0x10>
    1ed8:	35 d0       	rcall	.+106    	; 0x1f44 <__divsf3_pse+0x92>
    1eda:	0e 2e       	mov	r0, r30
    1edc:	3a f0       	brmi	.+14     	; 0x1eec <__divsf3_pse+0x3a>
    1ede:	e0 e8       	ldi	r30, 0x80	; 128
    1ee0:	32 d0       	rcall	.+100    	; 0x1f46 <__divsf3_pse+0x94>
    1ee2:	91 50       	subi	r25, 0x01	; 1
    1ee4:	50 40       	sbci	r21, 0x00	; 0
    1ee6:	e6 95       	lsr	r30
    1ee8:	00 1c       	adc	r0, r0
    1eea:	ca f7       	brpl	.-14     	; 0x1ede <__divsf3_pse+0x2c>
    1eec:	2b d0       	rcall	.+86     	; 0x1f44 <__divsf3_pse+0x92>
    1eee:	fe 2f       	mov	r31, r30
    1ef0:	29 d0       	rcall	.+82     	; 0x1f44 <__divsf3_pse+0x92>
    1ef2:	66 0f       	add	r22, r22
    1ef4:	77 1f       	adc	r23, r23
    1ef6:	88 1f       	adc	r24, r24
    1ef8:	bb 1f       	adc	r27, r27
    1efa:	26 17       	cp	r18, r22
    1efc:	37 07       	cpc	r19, r23
    1efe:	48 07       	cpc	r20, r24
    1f00:	ab 07       	cpc	r26, r27
    1f02:	b0 e8       	ldi	r27, 0x80	; 128
    1f04:	09 f0       	breq	.+2      	; 0x1f08 <__divsf3_pse+0x56>
    1f06:	bb 0b       	sbc	r27, r27
    1f08:	80 2d       	mov	r24, r0
    1f0a:	bf 01       	movw	r22, r30
    1f0c:	ff 27       	eor	r31, r31
    1f0e:	93 58       	subi	r25, 0x83	; 131
    1f10:	5f 4f       	sbci	r21, 0xFF	; 255
    1f12:	3a f0       	brmi	.+14     	; 0x1f22 <__divsf3_pse+0x70>
    1f14:	9e 3f       	cpi	r25, 0xFE	; 254
    1f16:	51 05       	cpc	r21, r1
    1f18:	78 f0       	brcs	.+30     	; 0x1f38 <__divsf3_pse+0x86>
    1f1a:	0c 94 44 10 	jmp	0x2088	; 0x2088 <__fp_inf>
    1f1e:	0c 94 8f 10 	jmp	0x211e	; 0x211e <__fp_szero>
    1f22:	5f 3f       	cpi	r21, 0xFF	; 255
    1f24:	e4 f3       	brlt	.-8      	; 0x1f1e <__divsf3_pse+0x6c>
    1f26:	98 3e       	cpi	r25, 0xE8	; 232
    1f28:	d4 f3       	brlt	.-12     	; 0x1f1e <__divsf3_pse+0x6c>
    1f2a:	86 95       	lsr	r24
    1f2c:	77 95       	ror	r23
    1f2e:	67 95       	ror	r22
    1f30:	b7 95       	ror	r27
    1f32:	f7 95       	ror	r31
    1f34:	9f 5f       	subi	r25, 0xFF	; 255
    1f36:	c9 f7       	brne	.-14     	; 0x1f2a <__divsf3_pse+0x78>
    1f38:	88 0f       	add	r24, r24
    1f3a:	91 1d       	adc	r25, r1
    1f3c:	96 95       	lsr	r25
    1f3e:	87 95       	ror	r24
    1f40:	97 f9       	bld	r25, 7
    1f42:	08 95       	ret
    1f44:	e1 e0       	ldi	r30, 0x01	; 1
    1f46:	66 0f       	add	r22, r22
    1f48:	77 1f       	adc	r23, r23
    1f4a:	88 1f       	adc	r24, r24
    1f4c:	bb 1f       	adc	r27, r27
    1f4e:	62 17       	cp	r22, r18
    1f50:	73 07       	cpc	r23, r19
    1f52:	84 07       	cpc	r24, r20
    1f54:	ba 07       	cpc	r27, r26
    1f56:	20 f0       	brcs	.+8      	; 0x1f60 <__divsf3_pse+0xae>
    1f58:	62 1b       	sub	r22, r18
    1f5a:	73 0b       	sbc	r23, r19
    1f5c:	84 0b       	sbc	r24, r20
    1f5e:	ba 0b       	sbc	r27, r26
    1f60:	ee 1f       	adc	r30, r30
    1f62:	88 f7       	brcc	.-30     	; 0x1f46 <__divsf3_pse+0x94>
    1f64:	e0 95       	com	r30
    1f66:	08 95       	ret

00001f68 <__fixunssfsi>:
    1f68:	0e 94 74 10 	call	0x20e8	; 0x20e8 <__fp_splitA>
    1f6c:	88 f0       	brcs	.+34     	; 0x1f90 <__fixunssfsi+0x28>
    1f6e:	9f 57       	subi	r25, 0x7F	; 127
    1f70:	98 f0       	brcs	.+38     	; 0x1f98 <__fixunssfsi+0x30>
    1f72:	b9 2f       	mov	r27, r25
    1f74:	99 27       	eor	r25, r25
    1f76:	b7 51       	subi	r27, 0x17	; 23
    1f78:	b0 f0       	brcs	.+44     	; 0x1fa6 <__fixunssfsi+0x3e>
    1f7a:	e1 f0       	breq	.+56     	; 0x1fb4 <__fixunssfsi+0x4c>
    1f7c:	66 0f       	add	r22, r22
    1f7e:	77 1f       	adc	r23, r23
    1f80:	88 1f       	adc	r24, r24
    1f82:	99 1f       	adc	r25, r25
    1f84:	1a f0       	brmi	.+6      	; 0x1f8c <__fixunssfsi+0x24>
    1f86:	ba 95       	dec	r27
    1f88:	c9 f7       	brne	.-14     	; 0x1f7c <__fixunssfsi+0x14>
    1f8a:	14 c0       	rjmp	.+40     	; 0x1fb4 <__fixunssfsi+0x4c>
    1f8c:	b1 30       	cpi	r27, 0x01	; 1
    1f8e:	91 f0       	breq	.+36     	; 0x1fb4 <__fixunssfsi+0x4c>
    1f90:	0e 94 8e 10 	call	0x211c	; 0x211c <__fp_zero>
    1f94:	b1 e0       	ldi	r27, 0x01	; 1
    1f96:	08 95       	ret
    1f98:	0c 94 8e 10 	jmp	0x211c	; 0x211c <__fp_zero>
    1f9c:	67 2f       	mov	r22, r23
    1f9e:	78 2f       	mov	r23, r24
    1fa0:	88 27       	eor	r24, r24
    1fa2:	b8 5f       	subi	r27, 0xF8	; 248
    1fa4:	39 f0       	breq	.+14     	; 0x1fb4 <__fixunssfsi+0x4c>
    1fa6:	b9 3f       	cpi	r27, 0xF9	; 249
    1fa8:	cc f3       	brlt	.-14     	; 0x1f9c <__fixunssfsi+0x34>
    1faa:	86 95       	lsr	r24
    1fac:	77 95       	ror	r23
    1fae:	67 95       	ror	r22
    1fb0:	b3 95       	inc	r27
    1fb2:	d9 f7       	brne	.-10     	; 0x1faa <__fixunssfsi+0x42>
    1fb4:	3e f4       	brtc	.+14     	; 0x1fc4 <__fixunssfsi+0x5c>
    1fb6:	90 95       	com	r25
    1fb8:	80 95       	com	r24
    1fba:	70 95       	com	r23
    1fbc:	61 95       	neg	r22
    1fbe:	7f 4f       	sbci	r23, 0xFF	; 255
    1fc0:	8f 4f       	sbci	r24, 0xFF	; 255
    1fc2:	9f 4f       	sbci	r25, 0xFF	; 255
    1fc4:	08 95       	ret

00001fc6 <__floatunsisf>:
    1fc6:	e8 94       	clt
    1fc8:	09 c0       	rjmp	.+18     	; 0x1fdc <__floatsisf+0x12>

00001fca <__floatsisf>:
    1fca:	97 fb       	bst	r25, 7
    1fcc:	3e f4       	brtc	.+14     	; 0x1fdc <__floatsisf+0x12>
    1fce:	90 95       	com	r25
    1fd0:	80 95       	com	r24
    1fd2:	70 95       	com	r23
    1fd4:	61 95       	neg	r22
    1fd6:	7f 4f       	sbci	r23, 0xFF	; 255
    1fd8:	8f 4f       	sbci	r24, 0xFF	; 255
    1fda:	9f 4f       	sbci	r25, 0xFF	; 255
    1fdc:	99 23       	and	r25, r25
    1fde:	a9 f0       	breq	.+42     	; 0x200a <__floatsisf+0x40>
    1fe0:	f9 2f       	mov	r31, r25
    1fe2:	96 e9       	ldi	r25, 0x96	; 150
    1fe4:	bb 27       	eor	r27, r27
    1fe6:	93 95       	inc	r25
    1fe8:	f6 95       	lsr	r31
    1fea:	87 95       	ror	r24
    1fec:	77 95       	ror	r23
    1fee:	67 95       	ror	r22
    1ff0:	b7 95       	ror	r27
    1ff2:	f1 11       	cpse	r31, r1
    1ff4:	f8 cf       	rjmp	.-16     	; 0x1fe6 <__floatsisf+0x1c>
    1ff6:	fa f4       	brpl	.+62     	; 0x2036 <__floatsisf+0x6c>
    1ff8:	bb 0f       	add	r27, r27
    1ffa:	11 f4       	brne	.+4      	; 0x2000 <__floatsisf+0x36>
    1ffc:	60 ff       	sbrs	r22, 0
    1ffe:	1b c0       	rjmp	.+54     	; 0x2036 <__floatsisf+0x6c>
    2000:	6f 5f       	subi	r22, 0xFF	; 255
    2002:	7f 4f       	sbci	r23, 0xFF	; 255
    2004:	8f 4f       	sbci	r24, 0xFF	; 255
    2006:	9f 4f       	sbci	r25, 0xFF	; 255
    2008:	16 c0       	rjmp	.+44     	; 0x2036 <__floatsisf+0x6c>
    200a:	88 23       	and	r24, r24
    200c:	11 f0       	breq	.+4      	; 0x2012 <__floatsisf+0x48>
    200e:	96 e9       	ldi	r25, 0x96	; 150
    2010:	11 c0       	rjmp	.+34     	; 0x2034 <__floatsisf+0x6a>
    2012:	77 23       	and	r23, r23
    2014:	21 f0       	breq	.+8      	; 0x201e <__floatsisf+0x54>
    2016:	9e e8       	ldi	r25, 0x8E	; 142
    2018:	87 2f       	mov	r24, r23
    201a:	76 2f       	mov	r23, r22
    201c:	05 c0       	rjmp	.+10     	; 0x2028 <__floatsisf+0x5e>
    201e:	66 23       	and	r22, r22
    2020:	71 f0       	breq	.+28     	; 0x203e <__floatsisf+0x74>
    2022:	96 e8       	ldi	r25, 0x86	; 134
    2024:	86 2f       	mov	r24, r22
    2026:	70 e0       	ldi	r23, 0x00	; 0
    2028:	60 e0       	ldi	r22, 0x00	; 0
    202a:	2a f0       	brmi	.+10     	; 0x2036 <__floatsisf+0x6c>
    202c:	9a 95       	dec	r25
    202e:	66 0f       	add	r22, r22
    2030:	77 1f       	adc	r23, r23
    2032:	88 1f       	adc	r24, r24
    2034:	da f7       	brpl	.-10     	; 0x202c <__floatsisf+0x62>
    2036:	88 0f       	add	r24, r24
    2038:	96 95       	lsr	r25
    203a:	87 95       	ror	r24
    203c:	97 f9       	bld	r25, 7
    203e:	08 95       	ret

00002040 <__fp_cmp>:
    2040:	99 0f       	add	r25, r25
    2042:	00 08       	sbc	r0, r0
    2044:	55 0f       	add	r21, r21
    2046:	aa 0b       	sbc	r26, r26
    2048:	e0 e8       	ldi	r30, 0x80	; 128
    204a:	fe ef       	ldi	r31, 0xFE	; 254
    204c:	16 16       	cp	r1, r22
    204e:	17 06       	cpc	r1, r23
    2050:	e8 07       	cpc	r30, r24
    2052:	f9 07       	cpc	r31, r25
    2054:	c0 f0       	brcs	.+48     	; 0x2086 <__fp_cmp+0x46>
    2056:	12 16       	cp	r1, r18
    2058:	13 06       	cpc	r1, r19
    205a:	e4 07       	cpc	r30, r20
    205c:	f5 07       	cpc	r31, r21
    205e:	98 f0       	brcs	.+38     	; 0x2086 <__fp_cmp+0x46>
    2060:	62 1b       	sub	r22, r18
    2062:	73 0b       	sbc	r23, r19
    2064:	84 0b       	sbc	r24, r20
    2066:	95 0b       	sbc	r25, r21
    2068:	39 f4       	brne	.+14     	; 0x2078 <__fp_cmp+0x38>
    206a:	0a 26       	eor	r0, r26
    206c:	61 f0       	breq	.+24     	; 0x2086 <__fp_cmp+0x46>
    206e:	23 2b       	or	r18, r19
    2070:	24 2b       	or	r18, r20
    2072:	25 2b       	or	r18, r21
    2074:	21 f4       	brne	.+8      	; 0x207e <__fp_cmp+0x3e>
    2076:	08 95       	ret
    2078:	0a 26       	eor	r0, r26
    207a:	09 f4       	brne	.+2      	; 0x207e <__fp_cmp+0x3e>
    207c:	a1 40       	sbci	r26, 0x01	; 1
    207e:	a6 95       	lsr	r26
    2080:	8f ef       	ldi	r24, 0xFF	; 255
    2082:	81 1d       	adc	r24, r1
    2084:	81 1d       	adc	r24, r1
    2086:	08 95       	ret

00002088 <__fp_inf>:
    2088:	97 f9       	bld	r25, 7
    208a:	9f 67       	ori	r25, 0x7F	; 127
    208c:	80 e8       	ldi	r24, 0x80	; 128
    208e:	70 e0       	ldi	r23, 0x00	; 0
    2090:	60 e0       	ldi	r22, 0x00	; 0
    2092:	08 95       	ret

00002094 <__fp_nan>:
    2094:	9f ef       	ldi	r25, 0xFF	; 255
    2096:	80 ec       	ldi	r24, 0xC0	; 192
    2098:	08 95       	ret

0000209a <__fp_pscA>:
    209a:	00 24       	eor	r0, r0
    209c:	0a 94       	dec	r0
    209e:	16 16       	cp	r1, r22
    20a0:	17 06       	cpc	r1, r23
    20a2:	18 06       	cpc	r1, r24
    20a4:	09 06       	cpc	r0, r25
    20a6:	08 95       	ret

000020a8 <__fp_pscB>:
    20a8:	00 24       	eor	r0, r0
    20aa:	0a 94       	dec	r0
    20ac:	12 16       	cp	r1, r18
    20ae:	13 06       	cpc	r1, r19
    20b0:	14 06       	cpc	r1, r20
    20b2:	05 06       	cpc	r0, r21
    20b4:	08 95       	ret

000020b6 <__fp_round>:
    20b6:	09 2e       	mov	r0, r25
    20b8:	03 94       	inc	r0
    20ba:	00 0c       	add	r0, r0
    20bc:	11 f4       	brne	.+4      	; 0x20c2 <__fp_round+0xc>
    20be:	88 23       	and	r24, r24
    20c0:	52 f0       	brmi	.+20     	; 0x20d6 <__fp_round+0x20>
    20c2:	bb 0f       	add	r27, r27
    20c4:	40 f4       	brcc	.+16     	; 0x20d6 <__fp_round+0x20>
    20c6:	bf 2b       	or	r27, r31
    20c8:	11 f4       	brne	.+4      	; 0x20ce <__fp_round+0x18>
    20ca:	60 ff       	sbrs	r22, 0
    20cc:	04 c0       	rjmp	.+8      	; 0x20d6 <__fp_round+0x20>
    20ce:	6f 5f       	subi	r22, 0xFF	; 255
    20d0:	7f 4f       	sbci	r23, 0xFF	; 255
    20d2:	8f 4f       	sbci	r24, 0xFF	; 255
    20d4:	9f 4f       	sbci	r25, 0xFF	; 255
    20d6:	08 95       	ret

000020d8 <__fp_split3>:
    20d8:	57 fd       	sbrc	r21, 7
    20da:	90 58       	subi	r25, 0x80	; 128
    20dc:	44 0f       	add	r20, r20
    20de:	55 1f       	adc	r21, r21
    20e0:	59 f0       	breq	.+22     	; 0x20f8 <__fp_splitA+0x10>
    20e2:	5f 3f       	cpi	r21, 0xFF	; 255
    20e4:	71 f0       	breq	.+28     	; 0x2102 <__fp_splitA+0x1a>
    20e6:	47 95       	ror	r20

000020e8 <__fp_splitA>:
    20e8:	88 0f       	add	r24, r24
    20ea:	97 fb       	bst	r25, 7
    20ec:	99 1f       	adc	r25, r25
    20ee:	61 f0       	breq	.+24     	; 0x2108 <__fp_splitA+0x20>
    20f0:	9f 3f       	cpi	r25, 0xFF	; 255
    20f2:	79 f0       	breq	.+30     	; 0x2112 <__fp_splitA+0x2a>
    20f4:	87 95       	ror	r24
    20f6:	08 95       	ret
    20f8:	12 16       	cp	r1, r18
    20fa:	13 06       	cpc	r1, r19
    20fc:	14 06       	cpc	r1, r20
    20fe:	55 1f       	adc	r21, r21
    2100:	f2 cf       	rjmp	.-28     	; 0x20e6 <__fp_split3+0xe>
    2102:	46 95       	lsr	r20
    2104:	f1 df       	rcall	.-30     	; 0x20e8 <__fp_splitA>
    2106:	08 c0       	rjmp	.+16     	; 0x2118 <__fp_splitA+0x30>
    2108:	16 16       	cp	r1, r22
    210a:	17 06       	cpc	r1, r23
    210c:	18 06       	cpc	r1, r24
    210e:	99 1f       	adc	r25, r25
    2110:	f1 cf       	rjmp	.-30     	; 0x20f4 <__fp_splitA+0xc>
    2112:	86 95       	lsr	r24
    2114:	71 05       	cpc	r23, r1
    2116:	61 05       	cpc	r22, r1
    2118:	08 94       	sec
    211a:	08 95       	ret

0000211c <__fp_zero>:
    211c:	e8 94       	clt

0000211e <__fp_szero>:
    211e:	bb 27       	eor	r27, r27
    2120:	66 27       	eor	r22, r22
    2122:	77 27       	eor	r23, r23
    2124:	cb 01       	movw	r24, r22
    2126:	97 f9       	bld	r25, 7
    2128:	08 95       	ret

0000212a <__mulsf3>:
    212a:	0e 94 a8 10 	call	0x2150	; 0x2150 <__mulsf3x>
    212e:	0c 94 5b 10 	jmp	0x20b6	; 0x20b6 <__fp_round>
    2132:	0e 94 4d 10 	call	0x209a	; 0x209a <__fp_pscA>
    2136:	38 f0       	brcs	.+14     	; 0x2146 <__mulsf3+0x1c>
    2138:	0e 94 54 10 	call	0x20a8	; 0x20a8 <__fp_pscB>
    213c:	20 f0       	brcs	.+8      	; 0x2146 <__mulsf3+0x1c>
    213e:	95 23       	and	r25, r21
    2140:	11 f0       	breq	.+4      	; 0x2146 <__mulsf3+0x1c>
    2142:	0c 94 44 10 	jmp	0x2088	; 0x2088 <__fp_inf>
    2146:	0c 94 4a 10 	jmp	0x2094	; 0x2094 <__fp_nan>
    214a:	11 24       	eor	r1, r1
    214c:	0c 94 8f 10 	jmp	0x211e	; 0x211e <__fp_szero>

00002150 <__mulsf3x>:
    2150:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <__fp_split3>
    2154:	70 f3       	brcs	.-36     	; 0x2132 <__mulsf3+0x8>

00002156 <__mulsf3_pse>:
    2156:	95 9f       	mul	r25, r21
    2158:	c1 f3       	breq	.-16     	; 0x214a <__mulsf3+0x20>
    215a:	95 0f       	add	r25, r21
    215c:	50 e0       	ldi	r21, 0x00	; 0
    215e:	55 1f       	adc	r21, r21
    2160:	62 9f       	mul	r22, r18
    2162:	f0 01       	movw	r30, r0
    2164:	72 9f       	mul	r23, r18
    2166:	bb 27       	eor	r27, r27
    2168:	f0 0d       	add	r31, r0
    216a:	b1 1d       	adc	r27, r1
    216c:	63 9f       	mul	r22, r19
    216e:	aa 27       	eor	r26, r26
    2170:	f0 0d       	add	r31, r0
    2172:	b1 1d       	adc	r27, r1
    2174:	aa 1f       	adc	r26, r26
    2176:	64 9f       	mul	r22, r20
    2178:	66 27       	eor	r22, r22
    217a:	b0 0d       	add	r27, r0
    217c:	a1 1d       	adc	r26, r1
    217e:	66 1f       	adc	r22, r22
    2180:	82 9f       	mul	r24, r18
    2182:	22 27       	eor	r18, r18
    2184:	b0 0d       	add	r27, r0
    2186:	a1 1d       	adc	r26, r1
    2188:	62 1f       	adc	r22, r18
    218a:	73 9f       	mul	r23, r19
    218c:	b0 0d       	add	r27, r0
    218e:	a1 1d       	adc	r26, r1
    2190:	62 1f       	adc	r22, r18
    2192:	83 9f       	mul	r24, r19
    2194:	a0 0d       	add	r26, r0
    2196:	61 1d       	adc	r22, r1
    2198:	22 1f       	adc	r18, r18
    219a:	74 9f       	mul	r23, r20
    219c:	33 27       	eor	r19, r19
    219e:	a0 0d       	add	r26, r0
    21a0:	61 1d       	adc	r22, r1
    21a2:	23 1f       	adc	r18, r19
    21a4:	84 9f       	mul	r24, r20
    21a6:	60 0d       	add	r22, r0
    21a8:	21 1d       	adc	r18, r1
    21aa:	82 2f       	mov	r24, r18
    21ac:	76 2f       	mov	r23, r22
    21ae:	6a 2f       	mov	r22, r26
    21b0:	11 24       	eor	r1, r1
    21b2:	9f 57       	subi	r25, 0x7F	; 127
    21b4:	50 40       	sbci	r21, 0x00	; 0
    21b6:	9a f0       	brmi	.+38     	; 0x21de <__mulsf3_pse+0x88>
    21b8:	f1 f0       	breq	.+60     	; 0x21f6 <__mulsf3_pse+0xa0>
    21ba:	88 23       	and	r24, r24
    21bc:	4a f0       	brmi	.+18     	; 0x21d0 <__mulsf3_pse+0x7a>
    21be:	ee 0f       	add	r30, r30
    21c0:	ff 1f       	adc	r31, r31
    21c2:	bb 1f       	adc	r27, r27
    21c4:	66 1f       	adc	r22, r22
    21c6:	77 1f       	adc	r23, r23
    21c8:	88 1f       	adc	r24, r24
    21ca:	91 50       	subi	r25, 0x01	; 1
    21cc:	50 40       	sbci	r21, 0x00	; 0
    21ce:	a9 f7       	brne	.-22     	; 0x21ba <__mulsf3_pse+0x64>
    21d0:	9e 3f       	cpi	r25, 0xFE	; 254
    21d2:	51 05       	cpc	r21, r1
    21d4:	80 f0       	brcs	.+32     	; 0x21f6 <__mulsf3_pse+0xa0>
    21d6:	0c 94 44 10 	jmp	0x2088	; 0x2088 <__fp_inf>
    21da:	0c 94 8f 10 	jmp	0x211e	; 0x211e <__fp_szero>
    21de:	5f 3f       	cpi	r21, 0xFF	; 255
    21e0:	e4 f3       	brlt	.-8      	; 0x21da <__mulsf3_pse+0x84>
    21e2:	98 3e       	cpi	r25, 0xE8	; 232
    21e4:	d4 f3       	brlt	.-12     	; 0x21da <__mulsf3_pse+0x84>
    21e6:	86 95       	lsr	r24
    21e8:	77 95       	ror	r23
    21ea:	67 95       	ror	r22
    21ec:	b7 95       	ror	r27
    21ee:	f7 95       	ror	r31
    21f0:	e7 95       	ror	r30
    21f2:	9f 5f       	subi	r25, 0xFF	; 255
    21f4:	c1 f7       	brne	.-16     	; 0x21e6 <__mulsf3_pse+0x90>
    21f6:	fe 2b       	or	r31, r30
    21f8:	88 0f       	add	r24, r24
    21fa:	91 1d       	adc	r25, r1
    21fc:	96 95       	lsr	r25
    21fe:	87 95       	ror	r24
    2200:	97 f9       	bld	r25, 7
    2202:	08 95       	ret

00002204 <__divmodhi4>:
    2204:	97 fb       	bst	r25, 7
    2206:	07 2e       	mov	r0, r23
    2208:	16 f4       	brtc	.+4      	; 0x220e <__divmodhi4+0xa>
    220a:	00 94       	com	r0
    220c:	07 d0       	rcall	.+14     	; 0x221c <__divmodhi4_neg1>
    220e:	77 fd       	sbrc	r23, 7
    2210:	09 d0       	rcall	.+18     	; 0x2224 <__divmodhi4_neg2>
    2212:	0e 94 38 11 	call	0x2270	; 0x2270 <__udivmodhi4>
    2216:	07 fc       	sbrc	r0, 7
    2218:	05 d0       	rcall	.+10     	; 0x2224 <__divmodhi4_neg2>
    221a:	3e f4       	brtc	.+14     	; 0x222a <__divmodhi4_exit>

0000221c <__divmodhi4_neg1>:
    221c:	90 95       	com	r25
    221e:	81 95       	neg	r24
    2220:	9f 4f       	sbci	r25, 0xFF	; 255
    2222:	08 95       	ret

00002224 <__divmodhi4_neg2>:
    2224:	70 95       	com	r23
    2226:	61 95       	neg	r22
    2228:	7f 4f       	sbci	r23, 0xFF	; 255

0000222a <__divmodhi4_exit>:
    222a:	08 95       	ret

0000222c <__udivmodsi4>:
    222c:	a1 e2       	ldi	r26, 0x21	; 33
    222e:	1a 2e       	mov	r1, r26
    2230:	aa 1b       	sub	r26, r26
    2232:	bb 1b       	sub	r27, r27
    2234:	fd 01       	movw	r30, r26
    2236:	0d c0       	rjmp	.+26     	; 0x2252 <__udivmodsi4_ep>

00002238 <__udivmodsi4_loop>:
    2238:	aa 1f       	adc	r26, r26
    223a:	bb 1f       	adc	r27, r27
    223c:	ee 1f       	adc	r30, r30
    223e:	ff 1f       	adc	r31, r31
    2240:	a2 17       	cp	r26, r18
    2242:	b3 07       	cpc	r27, r19
    2244:	e4 07       	cpc	r30, r20
    2246:	f5 07       	cpc	r31, r21
    2248:	20 f0       	brcs	.+8      	; 0x2252 <__udivmodsi4_ep>
    224a:	a2 1b       	sub	r26, r18
    224c:	b3 0b       	sbc	r27, r19
    224e:	e4 0b       	sbc	r30, r20
    2250:	f5 0b       	sbc	r31, r21

00002252 <__udivmodsi4_ep>:
    2252:	66 1f       	adc	r22, r22
    2254:	77 1f       	adc	r23, r23
    2256:	88 1f       	adc	r24, r24
    2258:	99 1f       	adc	r25, r25
    225a:	1a 94       	dec	r1
    225c:	69 f7       	brne	.-38     	; 0x2238 <__udivmodsi4_loop>
    225e:	60 95       	com	r22
    2260:	70 95       	com	r23
    2262:	80 95       	com	r24
    2264:	90 95       	com	r25
    2266:	9b 01       	movw	r18, r22
    2268:	ac 01       	movw	r20, r24
    226a:	bd 01       	movw	r22, r26
    226c:	cf 01       	movw	r24, r30
    226e:	08 95       	ret

00002270 <__udivmodhi4>:
    2270:	aa 1b       	sub	r26, r26
    2272:	bb 1b       	sub	r27, r27
    2274:	51 e1       	ldi	r21, 0x11	; 17
    2276:	07 c0       	rjmp	.+14     	; 0x2286 <__udivmodhi4_ep>

00002278 <__udivmodhi4_loop>:
    2278:	aa 1f       	adc	r26, r26
    227a:	bb 1f       	adc	r27, r27
    227c:	a6 17       	cp	r26, r22
    227e:	b7 07       	cpc	r27, r23
    2280:	10 f0       	brcs	.+4      	; 0x2286 <__udivmodhi4_ep>
    2282:	a6 1b       	sub	r26, r22
    2284:	b7 0b       	sbc	r27, r23

00002286 <__udivmodhi4_ep>:
    2286:	88 1f       	adc	r24, r24
    2288:	99 1f       	adc	r25, r25
    228a:	5a 95       	dec	r21
    228c:	a9 f7       	brne	.-22     	; 0x2278 <__udivmodhi4_loop>
    228e:	80 95       	com	r24
    2290:	90 95       	com	r25
    2292:	bc 01       	movw	r22, r24
    2294:	cd 01       	movw	r24, r26
    2296:	08 95       	ret

00002298 <do_rand>:
    2298:	8f 92       	push	r8
    229a:	9f 92       	push	r9
    229c:	af 92       	push	r10
    229e:	bf 92       	push	r11
    22a0:	cf 92       	push	r12
    22a2:	df 92       	push	r13
    22a4:	ef 92       	push	r14
    22a6:	ff 92       	push	r15
    22a8:	cf 93       	push	r28
    22aa:	df 93       	push	r29
    22ac:	ec 01       	movw	r28, r24
    22ae:	68 81       	ld	r22, Y
    22b0:	79 81       	ldd	r23, Y+1	; 0x01
    22b2:	8a 81       	ldd	r24, Y+2	; 0x02
    22b4:	9b 81       	ldd	r25, Y+3	; 0x03
    22b6:	61 15       	cp	r22, r1
    22b8:	71 05       	cpc	r23, r1
    22ba:	81 05       	cpc	r24, r1
    22bc:	91 05       	cpc	r25, r1
    22be:	21 f4       	brne	.+8      	; 0x22c8 <do_rand+0x30>
    22c0:	64 e2       	ldi	r22, 0x24	; 36
    22c2:	79 ed       	ldi	r23, 0xD9	; 217
    22c4:	8b e5       	ldi	r24, 0x5B	; 91
    22c6:	97 e0       	ldi	r25, 0x07	; 7
    22c8:	2d e1       	ldi	r18, 0x1D	; 29
    22ca:	33 ef       	ldi	r19, 0xF3	; 243
    22cc:	41 e0       	ldi	r20, 0x01	; 1
    22ce:	50 e0       	ldi	r21, 0x00	; 0
    22d0:	0e 94 ba 17 	call	0x2f74	; 0x2f74 <__divmodsi4>
    22d4:	49 01       	movw	r8, r18
    22d6:	5a 01       	movw	r10, r20
    22d8:	9b 01       	movw	r18, r22
    22da:	ac 01       	movw	r20, r24
    22dc:	a7 ea       	ldi	r26, 0xA7	; 167
    22de:	b1 e4       	ldi	r27, 0x41	; 65
    22e0:	0e 94 d9 17 	call	0x2fb2	; 0x2fb2 <__muluhisi3>
    22e4:	6b 01       	movw	r12, r22
    22e6:	7c 01       	movw	r14, r24
    22e8:	ac ee       	ldi	r26, 0xEC	; 236
    22ea:	b4 ef       	ldi	r27, 0xF4	; 244
    22ec:	a5 01       	movw	r20, r10
    22ee:	94 01       	movw	r18, r8
    22f0:	0e 94 e7 17 	call	0x2fce	; 0x2fce <__mulohisi3>
    22f4:	dc 01       	movw	r26, r24
    22f6:	cb 01       	movw	r24, r22
    22f8:	8c 0d       	add	r24, r12
    22fa:	9d 1d       	adc	r25, r13
    22fc:	ae 1d       	adc	r26, r14
    22fe:	bf 1d       	adc	r27, r15
    2300:	b7 ff       	sbrs	r27, 7
    2302:	03 c0       	rjmp	.+6      	; 0x230a <do_rand+0x72>
    2304:	01 97       	sbiw	r24, 0x01	; 1
    2306:	a1 09       	sbc	r26, r1
    2308:	b0 48       	sbci	r27, 0x80	; 128
    230a:	88 83       	st	Y, r24
    230c:	99 83       	std	Y+1, r25	; 0x01
    230e:	aa 83       	std	Y+2, r26	; 0x02
    2310:	bb 83       	std	Y+3, r27	; 0x03
    2312:	9f 77       	andi	r25, 0x7F	; 127
    2314:	df 91       	pop	r29
    2316:	cf 91       	pop	r28
    2318:	ff 90       	pop	r15
    231a:	ef 90       	pop	r14
    231c:	df 90       	pop	r13
    231e:	cf 90       	pop	r12
    2320:	bf 90       	pop	r11
    2322:	af 90       	pop	r10
    2324:	9f 90       	pop	r9
    2326:	8f 90       	pop	r8
    2328:	08 95       	ret

0000232a <rand_r>:
    232a:	0c 94 4c 11 	jmp	0x2298	; 0x2298 <do_rand>

0000232e <rand>:
    232e:	80 e0       	ldi	r24, 0x00	; 0
    2330:	90 e4       	ldi	r25, 0x40	; 64
    2332:	0c 94 4c 11 	jmp	0x2298	; 0x2298 <do_rand>

00002336 <srand>:
    2336:	a0 e0       	ldi	r26, 0x00	; 0
    2338:	b0 e0       	ldi	r27, 0x00	; 0
    233a:	80 93 00 40 	sts	0x4000, r24	; 0x804000 <__DATA_REGION_ORIGIN__>
    233e:	90 93 01 40 	sts	0x4001, r25	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
    2342:	a0 93 02 40 	sts	0x4002, r26	; 0x804002 <__DATA_REGION_ORIGIN__+0x2>
    2346:	b0 93 03 40 	sts	0x4003, r27	; 0x804003 <__DATA_REGION_ORIGIN__+0x3>
    234a:	08 95       	ret

0000234c <strtod>:
    234c:	8f 92       	push	r8
    234e:	9f 92       	push	r9
    2350:	af 92       	push	r10
    2352:	bf 92       	push	r11
    2354:	cf 92       	push	r12
    2356:	df 92       	push	r13
    2358:	ef 92       	push	r14
    235a:	ff 92       	push	r15
    235c:	0f 93       	push	r16
    235e:	1f 93       	push	r17
    2360:	cf 93       	push	r28
    2362:	df 93       	push	r29
    2364:	ec 01       	movw	r28, r24
    2366:	6b 01       	movw	r12, r22
    2368:	61 15       	cp	r22, r1
    236a:	71 05       	cpc	r23, r1
    236c:	19 f0       	breq	.+6      	; 0x2374 <strtod+0x28>
    236e:	fb 01       	movw	r30, r22
    2370:	80 83       	st	Z, r24
    2372:	91 83       	std	Z+1, r25	; 0x01
    2374:	7e 01       	movw	r14, r28
    2376:	ff ef       	ldi	r31, 0xFF	; 255
    2378:	ef 1a       	sub	r14, r31
    237a:	ff 0a       	sbc	r15, r31
    237c:	08 81       	ld	r16, Y
    237e:	80 2f       	mov	r24, r16
    2380:	90 e0       	ldi	r25, 0x00	; 0
    2382:	0e 94 2d 14 	call	0x285a	; 0x285a <isspace>
    2386:	89 2b       	or	r24, r25
    2388:	11 f0       	breq	.+4      	; 0x238e <strtod+0x42>
    238a:	e7 01       	movw	r28, r14
    238c:	f3 cf       	rjmp	.-26     	; 0x2374 <strtod+0x28>
    238e:	0d 32       	cpi	r16, 0x2D	; 45
    2390:	39 f4       	brne	.+14     	; 0x23a0 <strtod+0x54>
    2392:	7e 01       	movw	r14, r28
    2394:	82 e0       	ldi	r24, 0x02	; 2
    2396:	e8 0e       	add	r14, r24
    2398:	f1 1c       	adc	r15, r1
    239a:	09 81       	ldd	r16, Y+1	; 0x01
    239c:	11 e0       	ldi	r17, 0x01	; 1
    239e:	08 c0       	rjmp	.+16     	; 0x23b0 <strtod+0x64>
    23a0:	0b 32       	cpi	r16, 0x2B	; 43
    23a2:	29 f4       	brne	.+10     	; 0x23ae <strtod+0x62>
    23a4:	7e 01       	movw	r14, r28
    23a6:	92 e0       	ldi	r25, 0x02	; 2
    23a8:	e9 0e       	add	r14, r25
    23aa:	f1 1c       	adc	r15, r1
    23ac:	09 81       	ldd	r16, Y+1	; 0x01
    23ae:	10 e0       	ldi	r17, 0x00	; 0
    23b0:	e7 01       	movw	r28, r14
    23b2:	21 97       	sbiw	r28, 0x01	; 1
    23b4:	43 e0       	ldi	r20, 0x03	; 3
    23b6:	50 e0       	ldi	r21, 0x00	; 0
    23b8:	60 ef       	ldi	r22, 0xF0	; 240
    23ba:	70 e0       	ldi	r23, 0x00	; 0
    23bc:	ce 01       	movw	r24, r28
    23be:	0e 94 36 14 	call	0x286c	; 0x286c <strncasecmp_P>
    23c2:	89 2b       	or	r24, r25
    23c4:	c1 f4       	brne	.+48     	; 0x23f6 <strtod+0xaa>
    23c6:	23 96       	adiw	r28, 0x03	; 3
    23c8:	45 e0       	ldi	r20, 0x05	; 5
    23ca:	50 e0       	ldi	r21, 0x00	; 0
    23cc:	6b ee       	ldi	r22, 0xEB	; 235
    23ce:	70 e0       	ldi	r23, 0x00	; 0
    23d0:	ce 01       	movw	r24, r28
    23d2:	0e 94 36 14 	call	0x286c	; 0x286c <strncasecmp_P>
    23d6:	89 2b       	or	r24, r25
    23d8:	09 f4       	brne	.+2      	; 0x23dc <strtod+0x90>
    23da:	25 96       	adiw	r28, 0x05	; 5
    23dc:	c1 14       	cp	r12, r1
    23de:	d1 04       	cpc	r13, r1
    23e0:	19 f0       	breq	.+6      	; 0x23e8 <strtod+0x9c>
    23e2:	f6 01       	movw	r30, r12
    23e4:	c0 83       	st	Z, r28
    23e6:	d1 83       	std	Z+1, r29	; 0x01
    23e8:	11 11       	cpse	r17, r1
    23ea:	f6 c0       	rjmp	.+492    	; 0x25d8 <strtod+0x28c>
    23ec:	60 e0       	ldi	r22, 0x00	; 0
    23ee:	70 e0       	ldi	r23, 0x00	; 0
    23f0:	80 e8       	ldi	r24, 0x80	; 128
    23f2:	9f e7       	ldi	r25, 0x7F	; 127
    23f4:	fa c0       	rjmp	.+500    	; 0x25ea <strtod+0x29e>
    23f6:	43 e0       	ldi	r20, 0x03	; 3
    23f8:	50 e0       	ldi	r21, 0x00	; 0
    23fa:	68 ee       	ldi	r22, 0xE8	; 232
    23fc:	70 e0       	ldi	r23, 0x00	; 0
    23fe:	ce 01       	movw	r24, r28
    2400:	0e 94 36 14 	call	0x286c	; 0x286c <strncasecmp_P>
    2404:	89 2b       	or	r24, r25
    2406:	59 f4       	brne	.+22     	; 0x241e <strtod+0xd2>
    2408:	c1 14       	cp	r12, r1
    240a:	d1 04       	cpc	r13, r1
    240c:	09 f4       	brne	.+2      	; 0x2410 <strtod+0xc4>
    240e:	e9 c0       	rjmp	.+466    	; 0x25e2 <strtod+0x296>
    2410:	f2 e0       	ldi	r31, 0x02	; 2
    2412:	ef 0e       	add	r14, r31
    2414:	f1 1c       	adc	r15, r1
    2416:	f6 01       	movw	r30, r12
    2418:	e0 82       	st	Z, r14
    241a:	f1 82       	std	Z+1, r15	; 0x01
    241c:	e2 c0       	rjmp	.+452    	; 0x25e2 <strtod+0x296>
    241e:	20 e0       	ldi	r18, 0x00	; 0
    2420:	30 e0       	ldi	r19, 0x00	; 0
    2422:	a9 01       	movw	r20, r18
    2424:	c0 e0       	ldi	r28, 0x00	; 0
    2426:	d0 e0       	ldi	r29, 0x00	; 0
    2428:	f7 01       	movw	r30, r14
    242a:	60 ed       	ldi	r22, 0xD0	; 208
    242c:	a6 2e       	mov	r10, r22
    242e:	a0 0e       	add	r10, r16
    2430:	89 e0       	ldi	r24, 0x09	; 9
    2432:	8a 15       	cp	r24, r10
    2434:	30 f1       	brcs	.+76     	; 0x2482 <strtod+0x136>
    2436:	91 2f       	mov	r25, r17
    2438:	92 60       	ori	r25, 0x02	; 2
    243a:	b9 2e       	mov	r11, r25
    243c:	81 2f       	mov	r24, r17
    243e:	88 70       	andi	r24, 0x08	; 8
    2440:	12 ff       	sbrs	r17, 2
    2442:	04 c0       	rjmp	.+8      	; 0x244c <strtod+0x100>
    2444:	81 11       	cpse	r24, r1
    2446:	24 c0       	rjmp	.+72     	; 0x2490 <strtod+0x144>
    2448:	21 96       	adiw	r28, 0x01	; 1
    244a:	22 c0       	rjmp	.+68     	; 0x2490 <strtod+0x144>
    244c:	81 11       	cpse	r24, r1
    244e:	21 97       	sbiw	r28, 0x01	; 1
    2450:	a5 e0       	ldi	r26, 0x05	; 5
    2452:	b0 e0       	ldi	r27, 0x00	; 0
    2454:	0e 94 d9 17 	call	0x2fb2	; 0x2fb2 <__muluhisi3>
    2458:	dc 01       	movw	r26, r24
    245a:	cb 01       	movw	r24, r22
    245c:	88 0f       	add	r24, r24
    245e:	99 1f       	adc	r25, r25
    2460:	aa 1f       	adc	r26, r26
    2462:	bb 1f       	adc	r27, r27
    2464:	9c 01       	movw	r18, r24
    2466:	ad 01       	movw	r20, r26
    2468:	2a 0d       	add	r18, r10
    246a:	31 1d       	adc	r19, r1
    246c:	41 1d       	adc	r20, r1
    246e:	51 1d       	adc	r21, r1
    2470:	28 39       	cpi	r18, 0x98	; 152
    2472:	89 e9       	ldi	r24, 0x99	; 153
    2474:	38 07       	cpc	r19, r24
    2476:	48 07       	cpc	r20, r24
    2478:	89 e1       	ldi	r24, 0x19	; 25
    247a:	58 07       	cpc	r21, r24
    247c:	48 f0       	brcs	.+18     	; 0x2490 <strtod+0x144>
    247e:	16 60       	ori	r17, 0x06	; 6
    2480:	06 c0       	rjmp	.+12     	; 0x248e <strtod+0x142>
    2482:	9e ef       	ldi	r25, 0xFE	; 254
    2484:	a9 12       	cpse	r10, r25
    2486:	0a c0       	rjmp	.+20     	; 0x249c <strtod+0x150>
    2488:	13 fd       	sbrc	r17, 3
    248a:	40 c0       	rjmp	.+128    	; 0x250c <strtod+0x1c0>
    248c:	18 60       	ori	r17, 0x08	; 8
    248e:	b1 2e       	mov	r11, r17
    2490:	8f ef       	ldi	r24, 0xFF	; 255
    2492:	e8 1a       	sub	r14, r24
    2494:	f8 0a       	sbc	r15, r24
    2496:	00 81       	ld	r16, Z
    2498:	1b 2d       	mov	r17, r11
    249a:	c6 cf       	rjmp	.-116    	; 0x2428 <strtod+0xdc>
    249c:	80 2f       	mov	r24, r16
    249e:	8f 7d       	andi	r24, 0xDF	; 223
    24a0:	85 34       	cpi	r24, 0x45	; 69
    24a2:	a1 f5       	brne	.+104    	; 0x250c <strtod+0x1c0>
    24a4:	80 81       	ld	r24, Z
    24a6:	8d 32       	cpi	r24, 0x2D	; 45
    24a8:	11 f4       	brne	.+4      	; 0x24ae <strtod+0x162>
    24aa:	10 61       	ori	r17, 0x10	; 16
    24ac:	06 c0       	rjmp	.+12     	; 0x24ba <strtod+0x16e>
    24ae:	8b 32       	cpi	r24, 0x2B	; 43
    24b0:	21 f0       	breq	.+8      	; 0x24ba <strtod+0x16e>
    24b2:	31 96       	adiw	r30, 0x01	; 1
    24b4:	61 e0       	ldi	r22, 0x01	; 1
    24b6:	70 e0       	ldi	r23, 0x00	; 0
    24b8:	04 c0       	rjmp	.+8      	; 0x24c2 <strtod+0x176>
    24ba:	81 81       	ldd	r24, Z+1	; 0x01
    24bc:	32 96       	adiw	r30, 0x02	; 2
    24be:	62 e0       	ldi	r22, 0x02	; 2
    24c0:	70 e0       	ldi	r23, 0x00	; 0
    24c2:	80 53       	subi	r24, 0x30	; 48
    24c4:	8a 30       	cpi	r24, 0x0A	; 10
    24c6:	18 f0       	brcs	.+6      	; 0x24ce <strtod+0x182>
    24c8:	e6 1b       	sub	r30, r22
    24ca:	f7 0b       	sbc	r31, r23
    24cc:	1f c0       	rjmp	.+62     	; 0x250c <strtod+0x1c0>
    24ce:	60 e0       	ldi	r22, 0x00	; 0
    24d0:	70 e0       	ldi	r23, 0x00	; 0
    24d2:	60 38       	cpi	r22, 0x80	; 128
    24d4:	9c e0       	ldi	r25, 0x0C	; 12
    24d6:	79 07       	cpc	r23, r25
    24d8:	5c f4       	brge	.+22     	; 0x24f0 <strtod+0x1a4>
    24da:	db 01       	movw	r26, r22
    24dc:	aa 0f       	add	r26, r26
    24de:	bb 1f       	adc	r27, r27
    24e0:	aa 0f       	add	r26, r26
    24e2:	bb 1f       	adc	r27, r27
    24e4:	6a 0f       	add	r22, r26
    24e6:	7b 1f       	adc	r23, r27
    24e8:	66 0f       	add	r22, r22
    24ea:	77 1f       	adc	r23, r23
    24ec:	68 0f       	add	r22, r24
    24ee:	71 1d       	adc	r23, r1
    24f0:	31 96       	adiw	r30, 0x01	; 1
    24f2:	df 01       	movw	r26, r30
    24f4:	11 97       	sbiw	r26, 0x01	; 1
    24f6:	8c 91       	ld	r24, X
    24f8:	80 53       	subi	r24, 0x30	; 48
    24fa:	8a 30       	cpi	r24, 0x0A	; 10
    24fc:	50 f3       	brcs	.-44     	; 0x24d2 <strtod+0x186>
    24fe:	14 ff       	sbrs	r17, 4
    2500:	03 c0       	rjmp	.+6      	; 0x2508 <strtod+0x1bc>
    2502:	71 95       	neg	r23
    2504:	61 95       	neg	r22
    2506:	71 09       	sbc	r23, r1
    2508:	c6 0f       	add	r28, r22
    250a:	d7 1f       	adc	r29, r23
    250c:	11 ff       	sbrs	r17, 1
    250e:	08 c0       	rjmp	.+16     	; 0x2520 <strtod+0x1d4>
    2510:	c1 14       	cp	r12, r1
    2512:	d1 04       	cpc	r13, r1
    2514:	29 f0       	breq	.+10     	; 0x2520 <strtod+0x1d4>
    2516:	cf 01       	movw	r24, r30
    2518:	01 97       	sbiw	r24, 0x01	; 1
    251a:	f6 01       	movw	r30, r12
    251c:	80 83       	st	Z, r24
    251e:	91 83       	std	Z+1, r25	; 0x01
    2520:	ca 01       	movw	r24, r20
    2522:	b9 01       	movw	r22, r18
    2524:	0e 94 e3 0f 	call	0x1fc6	; 0x1fc6 <__floatunsisf>
    2528:	21 2f       	mov	r18, r17
    252a:	23 70       	andi	r18, 0x03	; 3
    252c:	23 30       	cpi	r18, 0x03	; 3
    252e:	19 f0       	breq	.+6      	; 0x2536 <strtod+0x1ea>
    2530:	4b 01       	movw	r8, r22
    2532:	5c 01       	movw	r10, r24
    2534:	06 c0       	rjmp	.+12     	; 0x2542 <strtod+0x1f6>
    2536:	4b 01       	movw	r8, r22
    2538:	5c 01       	movw	r10, r24
    253a:	b7 fa       	bst	r11, 7
    253c:	b0 94       	com	r11
    253e:	b7 f8       	bld	r11, 7
    2540:	b0 94       	com	r11
    2542:	20 e0       	ldi	r18, 0x00	; 0
    2544:	30 e0       	ldi	r19, 0x00	; 0
    2546:	a9 01       	movw	r20, r18
    2548:	c5 01       	movw	r24, r10
    254a:	b4 01       	movw	r22, r8
    254c:	0e 94 3d 0f 	call	0x1e7a	; 0x1e7a <__cmpsf2>
    2550:	88 23       	and	r24, r24
    2552:	09 f4       	brne	.+2      	; 0x2556 <strtod+0x20a>
    2554:	3e c0       	rjmp	.+124    	; 0x25d2 <strtod+0x286>
    2556:	d7 ff       	sbrs	r29, 7
    2558:	06 c0       	rjmp	.+12     	; 0x2566 <strtod+0x21a>
    255a:	d1 95       	neg	r29
    255c:	c1 95       	neg	r28
    255e:	d1 09       	sbc	r29, r1
    2560:	07 e0       	ldi	r16, 0x07	; 7
    2562:	11 e0       	ldi	r17, 0x01	; 1
    2564:	02 c0       	rjmp	.+4      	; 0x256a <strtod+0x21e>
    2566:	0f e1       	ldi	r16, 0x1F	; 31
    2568:	11 e0       	ldi	r17, 0x01	; 1
    256a:	68 01       	movw	r12, r16
    256c:	f8 e1       	ldi	r31, 0x18	; 24
    256e:	cf 1a       	sub	r12, r31
    2570:	d1 08       	sbc	r13, r1
    2572:	90 e2       	ldi	r25, 0x20	; 32
    2574:	e9 2e       	mov	r14, r25
    2576:	f1 2c       	mov	r15, r1
    2578:	ce 15       	cp	r28, r14
    257a:	df 05       	cpc	r29, r15
    257c:	74 f0       	brlt	.+28     	; 0x259a <strtod+0x24e>
    257e:	f8 01       	movw	r30, r16
    2580:	25 91       	lpm	r18, Z+
    2582:	35 91       	lpm	r19, Z+
    2584:	45 91       	lpm	r20, Z+
    2586:	54 91       	lpm	r21, Z
    2588:	c5 01       	movw	r24, r10
    258a:	b4 01       	movw	r22, r8
    258c:	0e 94 95 10 	call	0x212a	; 0x212a <__mulsf3>
    2590:	4b 01       	movw	r8, r22
    2592:	5c 01       	movw	r10, r24
    2594:	ce 19       	sub	r28, r14
    2596:	df 09       	sbc	r29, r15
    2598:	ef cf       	rjmp	.-34     	; 0x2578 <strtod+0x22c>
    259a:	04 50       	subi	r16, 0x04	; 4
    259c:	11 09       	sbc	r17, r1
    259e:	f5 94       	asr	r15
    25a0:	e7 94       	ror	r14
    25a2:	0c 15       	cp	r16, r12
    25a4:	1d 05       	cpc	r17, r13
    25a6:	41 f7       	brne	.-48     	; 0x2578 <strtod+0x22c>
    25a8:	8a 2d       	mov	r24, r10
    25aa:	88 0f       	add	r24, r24
    25ac:	8b 2d       	mov	r24, r11
    25ae:	88 1f       	adc	r24, r24
    25b0:	8f 3f       	cpi	r24, 0xFF	; 255
    25b2:	49 f0       	breq	.+18     	; 0x25c6 <strtod+0x27a>
    25b4:	20 e0       	ldi	r18, 0x00	; 0
    25b6:	30 e0       	ldi	r19, 0x00	; 0
    25b8:	a9 01       	movw	r20, r18
    25ba:	c5 01       	movw	r24, r10
    25bc:	b4 01       	movw	r22, r8
    25be:	0e 94 3d 0f 	call	0x1e7a	; 0x1e7a <__cmpsf2>
    25c2:	81 11       	cpse	r24, r1
    25c4:	06 c0       	rjmp	.+12     	; 0x25d2 <strtod+0x286>
    25c6:	82 e2       	ldi	r24, 0x22	; 34
    25c8:	90 e0       	ldi	r25, 0x00	; 0
    25ca:	80 93 f3 45 	sts	0x45F3, r24	; 0x8045f3 <errno>
    25ce:	90 93 f4 45 	sts	0x45F4, r25	; 0x8045f4 <errno+0x1>
    25d2:	c5 01       	movw	r24, r10
    25d4:	b4 01       	movw	r22, r8
    25d6:	09 c0       	rjmp	.+18     	; 0x25ea <strtod+0x29e>
    25d8:	60 e0       	ldi	r22, 0x00	; 0
    25da:	70 e0       	ldi	r23, 0x00	; 0
    25dc:	80 e8       	ldi	r24, 0x80	; 128
    25de:	9f ef       	ldi	r25, 0xFF	; 255
    25e0:	04 c0       	rjmp	.+8      	; 0x25ea <strtod+0x29e>
    25e2:	60 e0       	ldi	r22, 0x00	; 0
    25e4:	70 e0       	ldi	r23, 0x00	; 0
    25e6:	80 ec       	ldi	r24, 0xC0	; 192
    25e8:	9f e7       	ldi	r25, 0x7F	; 127
    25ea:	df 91       	pop	r29
    25ec:	cf 91       	pop	r28
    25ee:	1f 91       	pop	r17
    25f0:	0f 91       	pop	r16
    25f2:	ff 90       	pop	r15
    25f4:	ef 90       	pop	r14
    25f6:	df 90       	pop	r13
    25f8:	cf 90       	pop	r12
    25fa:	bf 90       	pop	r11
    25fc:	af 90       	pop	r10
    25fe:	9f 90       	pop	r9
    2600:	8f 90       	pop	r8
    2602:	08 95       	ret

00002604 <strtoul>:
    2604:	3f 92       	push	r3
    2606:	4f 92       	push	r4
    2608:	5f 92       	push	r5
    260a:	6f 92       	push	r6
    260c:	7f 92       	push	r7
    260e:	8f 92       	push	r8
    2610:	9f 92       	push	r9
    2612:	af 92       	push	r10
    2614:	bf 92       	push	r11
    2616:	cf 92       	push	r12
    2618:	df 92       	push	r13
    261a:	ef 92       	push	r14
    261c:	ff 92       	push	r15
    261e:	0f 93       	push	r16
    2620:	1f 93       	push	r17
    2622:	cf 93       	push	r28
    2624:	df 93       	push	r29
    2626:	5c 01       	movw	r10, r24
    2628:	6b 01       	movw	r12, r22
    262a:	7a 01       	movw	r14, r20
    262c:	61 15       	cp	r22, r1
    262e:	71 05       	cpc	r23, r1
    2630:	19 f0       	breq	.+6      	; 0x2638 <strtoul+0x34>
    2632:	fb 01       	movw	r30, r22
    2634:	80 83       	st	Z, r24
    2636:	91 83       	std	Z+1, r25	; 0x01
    2638:	e1 14       	cp	r14, r1
    263a:	f1 04       	cpc	r15, r1
    263c:	29 f0       	breq	.+10     	; 0x2648 <strtoul+0x44>
    263e:	c7 01       	movw	r24, r14
    2640:	02 97       	sbiw	r24, 0x02	; 2
    2642:	83 97       	sbiw	r24, 0x23	; 35
    2644:	08 f0       	brcs	.+2      	; 0x2648 <strtoul+0x44>
    2646:	c9 c0       	rjmp	.+402    	; 0x27da <strtoul+0x1d6>
    2648:	e5 01       	movw	r28, r10
    264a:	21 96       	adiw	r28, 0x01	; 1
    264c:	f5 01       	movw	r30, r10
    264e:	10 81       	ld	r17, Z
    2650:	81 2f       	mov	r24, r17
    2652:	90 e0       	ldi	r25, 0x00	; 0
    2654:	0e 94 2d 14 	call	0x285a	; 0x285a <isspace>
    2658:	89 2b       	or	r24, r25
    265a:	11 f0       	breq	.+4      	; 0x2660 <strtoul+0x5c>
    265c:	5e 01       	movw	r10, r28
    265e:	f4 cf       	rjmp	.-24     	; 0x2648 <strtoul+0x44>
    2660:	1d 32       	cpi	r17, 0x2D	; 45
    2662:	29 f4       	brne	.+10     	; 0x266e <strtoul+0x6a>
    2664:	21 96       	adiw	r28, 0x01	; 1
    2666:	f5 01       	movw	r30, r10
    2668:	11 81       	ldd	r17, Z+1	; 0x01
    266a:	01 e0       	ldi	r16, 0x01	; 1
    266c:	07 c0       	rjmp	.+14     	; 0x267c <strtoul+0x78>
    266e:	1b 32       	cpi	r17, 0x2B	; 43
    2670:	21 f4       	brne	.+8      	; 0x267a <strtoul+0x76>
    2672:	e5 01       	movw	r28, r10
    2674:	22 96       	adiw	r28, 0x02	; 2
    2676:	f5 01       	movw	r30, r10
    2678:	11 81       	ldd	r17, Z+1	; 0x01
    267a:	00 e0       	ldi	r16, 0x00	; 0
    267c:	e1 14       	cp	r14, r1
    267e:	f1 04       	cpc	r15, r1
    2680:	b1 f0       	breq	.+44     	; 0x26ae <strtoul+0xaa>
    2682:	f0 e1       	ldi	r31, 0x10	; 16
    2684:	ef 16       	cp	r14, r31
    2686:	f1 04       	cpc	r15, r1
    2688:	29 f4       	brne	.+10     	; 0x2694 <strtoul+0x90>
    268a:	b0 c0       	rjmp	.+352    	; 0x27ec <strtoul+0x1e8>
    268c:	10 e3       	ldi	r17, 0x30	; 48
    268e:	e1 14       	cp	r14, r1
    2690:	f1 04       	cpc	r15, r1
    2692:	01 f1       	breq	.+64     	; 0x26d4 <strtoul+0xd0>
    2694:	2a e0       	ldi	r18, 0x0A	; 10
    2696:	e2 16       	cp	r14, r18
    2698:	f1 04       	cpc	r15, r1
    269a:	b1 f1       	breq	.+108    	; 0x2708 <strtoul+0x104>
    269c:	80 e1       	ldi	r24, 0x10	; 16
    269e:	e8 16       	cp	r14, r24
    26a0:	f1 04       	cpc	r15, r1
    26a2:	71 f0       	breq	.+28     	; 0x26c0 <strtoul+0xbc>
    26a4:	e8 e0       	ldi	r30, 0x08	; 8
    26a6:	ee 16       	cp	r14, r30
    26a8:	f1 04       	cpc	r15, r1
    26aa:	f1 f4       	brne	.+60     	; 0x26e8 <strtoul+0xe4>
    26ac:	13 c0       	rjmp	.+38     	; 0x26d4 <strtoul+0xd0>
    26ae:	10 33       	cpi	r17, 0x30	; 48
    26b0:	41 f5       	brne	.+80     	; 0x2702 <strtoul+0xfe>
    26b2:	88 81       	ld	r24, Y
    26b4:	8f 7d       	andi	r24, 0xDF	; 223
    26b6:	88 35       	cpi	r24, 0x58	; 88
    26b8:	49 f7       	brne	.-46     	; 0x268c <strtoul+0x88>
    26ba:	19 81       	ldd	r17, Y+1	; 0x01
    26bc:	22 96       	adiw	r28, 0x02	; 2
    26be:	02 60       	ori	r16, 0x02	; 2
    26c0:	f0 e1       	ldi	r31, 0x10	; 16
    26c2:	ef 2e       	mov	r14, r31
    26c4:	f1 2c       	mov	r15, r1
    26c6:	88 24       	eor	r8, r8
    26c8:	8a 94       	dec	r8
    26ca:	98 2c       	mov	r9, r8
    26cc:	a8 2c       	mov	r10, r8
    26ce:	af e0       	ldi	r26, 0x0F	; 15
    26d0:	ba 2e       	mov	r11, r26
    26d2:	20 c0       	rjmp	.+64     	; 0x2714 <strtoul+0x110>
    26d4:	78 e0       	ldi	r23, 0x08	; 8
    26d6:	e7 2e       	mov	r14, r23
    26d8:	f1 2c       	mov	r15, r1
    26da:	88 24       	eor	r8, r8
    26dc:	8a 94       	dec	r8
    26de:	98 2c       	mov	r9, r8
    26e0:	a8 2c       	mov	r10, r8
    26e2:	ef e1       	ldi	r30, 0x1F	; 31
    26e4:	be 2e       	mov	r11, r30
    26e6:	16 c0       	rjmp	.+44     	; 0x2714 <strtoul+0x110>
    26e8:	6f ef       	ldi	r22, 0xFF	; 255
    26ea:	7f ef       	ldi	r23, 0xFF	; 255
    26ec:	cb 01       	movw	r24, r22
    26ee:	97 01       	movw	r18, r14
    26f0:	0f 2c       	mov	r0, r15
    26f2:	00 0c       	add	r0, r0
    26f4:	44 0b       	sbc	r20, r20
    26f6:	55 0b       	sbc	r21, r21
    26f8:	0e 94 16 11 	call	0x222c	; 0x222c <__udivmodsi4>
    26fc:	49 01       	movw	r8, r18
    26fe:	5a 01       	movw	r10, r20
    2700:	09 c0       	rjmp	.+18     	; 0x2714 <strtoul+0x110>
    2702:	8a e0       	ldi	r24, 0x0A	; 10
    2704:	e8 2e       	mov	r14, r24
    2706:	f1 2c       	mov	r15, r1
    2708:	69 e9       	ldi	r22, 0x99	; 153
    270a:	86 2e       	mov	r8, r22
    270c:	98 2c       	mov	r9, r8
    270e:	a8 2c       	mov	r10, r8
    2710:	69 e1       	ldi	r22, 0x19	; 25
    2712:	b6 2e       	mov	r11, r22
    2714:	40 e0       	ldi	r20, 0x00	; 0
    2716:	60 e0       	ldi	r22, 0x00	; 0
    2718:	70 e0       	ldi	r23, 0x00	; 0
    271a:	cb 01       	movw	r24, r22
    271c:	27 01       	movw	r4, r14
    271e:	0f 2c       	mov	r0, r15
    2720:	00 0c       	add	r0, r0
    2722:	66 08       	sbc	r6, r6
    2724:	77 08       	sbc	r7, r7
    2726:	fe 01       	movw	r30, r28
    2728:	50 ed       	ldi	r21, 0xD0	; 208
    272a:	35 2e       	mov	r3, r21
    272c:	31 0e       	add	r3, r17
    272e:	29 e0       	ldi	r18, 0x09	; 9
    2730:	23 15       	cp	r18, r3
    2732:	70 f4       	brcc	.+28     	; 0x2750 <strtoul+0x14c>
    2734:	2f eb       	ldi	r18, 0xBF	; 191
    2736:	21 0f       	add	r18, r17
    2738:	2a 31       	cpi	r18, 0x1A	; 26
    273a:	18 f4       	brcc	.+6      	; 0x2742 <strtoul+0x13e>
    273c:	39 ec       	ldi	r19, 0xC9	; 201
    273e:	33 2e       	mov	r3, r19
    2740:	06 c0       	rjmp	.+12     	; 0x274e <strtoul+0x14a>
    2742:	2f e9       	ldi	r18, 0x9F	; 159
    2744:	21 0f       	add	r18, r17
    2746:	2a 31       	cpi	r18, 0x1A	; 26
    2748:	30 f5       	brcc	.+76     	; 0x2796 <strtoul+0x192>
    274a:	29 ea       	ldi	r18, 0xA9	; 169
    274c:	32 2e       	mov	r3, r18
    274e:	31 0e       	add	r3, r17
    2750:	23 2d       	mov	r18, r3
    2752:	30 e0       	ldi	r19, 0x00	; 0
    2754:	2e 15       	cp	r18, r14
    2756:	3f 05       	cpc	r19, r15
    2758:	f4 f4       	brge	.+60     	; 0x2796 <strtoul+0x192>
    275a:	4f 3f       	cpi	r20, 0xFF	; 255
    275c:	c9 f0       	breq	.+50     	; 0x2790 <strtoul+0x18c>
    275e:	86 16       	cp	r8, r22
    2760:	97 06       	cpc	r9, r23
    2762:	a8 06       	cpc	r10, r24
    2764:	b9 06       	cpc	r11, r25
    2766:	88 f0       	brcs	.+34     	; 0x278a <strtoul+0x186>
    2768:	a3 01       	movw	r20, r6
    276a:	92 01       	movw	r18, r4
    276c:	0e 94 aa 17 	call	0x2f54	; 0x2f54 <__mulsi3>
    2770:	23 2d       	mov	r18, r3
    2772:	30 e0       	ldi	r19, 0x00	; 0
    2774:	40 e0       	ldi	r20, 0x00	; 0
    2776:	50 e0       	ldi	r21, 0x00	; 0
    2778:	62 0f       	add	r22, r18
    277a:	73 1f       	adc	r23, r19
    277c:	84 1f       	adc	r24, r20
    277e:	95 1f       	adc	r25, r21
    2780:	62 17       	cp	r22, r18
    2782:	73 07       	cpc	r23, r19
    2784:	84 07       	cpc	r24, r20
    2786:	95 07       	cpc	r25, r21
    2788:	10 f4       	brcc	.+4      	; 0x278e <strtoul+0x18a>
    278a:	4f ef       	ldi	r20, 0xFF	; 255
    278c:	01 c0       	rjmp	.+2      	; 0x2790 <strtoul+0x18c>
    278e:	41 e0       	ldi	r20, 0x01	; 1
    2790:	21 96       	adiw	r28, 0x01	; 1
    2792:	10 81       	ld	r17, Z
    2794:	c8 cf       	rjmp	.-112    	; 0x2726 <strtoul+0x122>
    2796:	c1 14       	cp	r12, r1
    2798:	d1 04       	cpc	r13, r1
    279a:	51 f0       	breq	.+20     	; 0x27b0 <strtoul+0x1ac>
    279c:	44 23       	and	r20, r20
    279e:	11 f0       	breq	.+4      	; 0x27a4 <strtoul+0x1a0>
    27a0:	21 97       	sbiw	r28, 0x01	; 1
    27a2:	03 c0       	rjmp	.+6      	; 0x27aa <strtoul+0x1a6>
    27a4:	01 ff       	sbrs	r16, 1
    27a6:	04 c0       	rjmp	.+8      	; 0x27b0 <strtoul+0x1ac>
    27a8:	22 97       	sbiw	r28, 0x02	; 2
    27aa:	f6 01       	movw	r30, r12
    27ac:	c0 83       	st	Z, r28
    27ae:	d1 83       	std	Z+1, r29	; 0x01
    27b0:	00 ff       	sbrs	r16, 0
    27b2:	07 c0       	rjmp	.+14     	; 0x27c2 <strtoul+0x1be>
    27b4:	90 95       	com	r25
    27b6:	80 95       	com	r24
    27b8:	70 95       	com	r23
    27ba:	61 95       	neg	r22
    27bc:	7f 4f       	sbci	r23, 0xFF	; 255
    27be:	8f 4f       	sbci	r24, 0xFF	; 255
    27c0:	9f 4f       	sbci	r25, 0xFF	; 255
    27c2:	4f 3f       	cpi	r20, 0xFF	; 255
    27c4:	79 f4       	brne	.+30     	; 0x27e4 <strtoul+0x1e0>
    27c6:	82 e2       	ldi	r24, 0x22	; 34
    27c8:	90 e0       	ldi	r25, 0x00	; 0
    27ca:	80 93 f3 45 	sts	0x45F3, r24	; 0x8045f3 <errno>
    27ce:	90 93 f4 45 	sts	0x45F4, r25	; 0x8045f4 <errno+0x1>
    27d2:	3f ef       	ldi	r19, 0xFF	; 255
    27d4:	2f ef       	ldi	r18, 0xFF	; 255
    27d6:	9f ef       	ldi	r25, 0xFF	; 255
    27d8:	0d c0       	rjmp	.+26     	; 0x27f4 <strtoul+0x1f0>
    27da:	40 e0       	ldi	r20, 0x00	; 0
    27dc:	30 e0       	ldi	r19, 0x00	; 0
    27de:	20 e0       	ldi	r18, 0x00	; 0
    27e0:	90 e0       	ldi	r25, 0x00	; 0
    27e2:	08 c0       	rjmp	.+16     	; 0x27f4 <strtoul+0x1f0>
    27e4:	46 2f       	mov	r20, r22
    27e6:	37 2f       	mov	r19, r23
    27e8:	28 2f       	mov	r18, r24
    27ea:	04 c0       	rjmp	.+8      	; 0x27f4 <strtoul+0x1f0>
    27ec:	10 33       	cpi	r17, 0x30	; 48
    27ee:	09 f0       	breq	.+2      	; 0x27f2 <strtoul+0x1ee>
    27f0:	67 cf       	rjmp	.-306    	; 0x26c0 <strtoul+0xbc>
    27f2:	5f cf       	rjmp	.-322    	; 0x26b2 <strtoul+0xae>
    27f4:	64 2f       	mov	r22, r20
    27f6:	73 2f       	mov	r23, r19
    27f8:	82 2f       	mov	r24, r18
    27fa:	df 91       	pop	r29
    27fc:	cf 91       	pop	r28
    27fe:	1f 91       	pop	r17
    2800:	0f 91       	pop	r16
    2802:	ff 90       	pop	r15
    2804:	ef 90       	pop	r14
    2806:	df 90       	pop	r13
    2808:	cf 90       	pop	r12
    280a:	bf 90       	pop	r11
    280c:	af 90       	pop	r10
    280e:	9f 90       	pop	r9
    2810:	8f 90       	pop	r8
    2812:	7f 90       	pop	r7
    2814:	6f 90       	pop	r6
    2816:	5f 90       	pop	r5
    2818:	4f 90       	pop	r4
    281a:	3f 90       	pop	r3
    281c:	08 95       	ret

0000281e <atoi>:
    281e:	fc 01       	movw	r30, r24
    2820:	88 27       	eor	r24, r24
    2822:	99 27       	eor	r25, r25
    2824:	e8 94       	clt
    2826:	21 91       	ld	r18, Z+
    2828:	20 32       	cpi	r18, 0x20	; 32
    282a:	e9 f3       	breq	.-6      	; 0x2826 <atoi+0x8>
    282c:	29 30       	cpi	r18, 0x09	; 9
    282e:	10 f0       	brcs	.+4      	; 0x2834 <atoi+0x16>
    2830:	2e 30       	cpi	r18, 0x0E	; 14
    2832:	c8 f3       	brcs	.-14     	; 0x2826 <atoi+0x8>
    2834:	2b 32       	cpi	r18, 0x2B	; 43
    2836:	41 f0       	breq	.+16     	; 0x2848 <atoi+0x2a>
    2838:	2d 32       	cpi	r18, 0x2D	; 45
    283a:	39 f4       	brne	.+14     	; 0x284a <atoi+0x2c>
    283c:	68 94       	set
    283e:	04 c0       	rjmp	.+8      	; 0x2848 <atoi+0x2a>
    2840:	0e 94 85 14 	call	0x290a	; 0x290a <__mulhi_const_10>
    2844:	82 0f       	add	r24, r18
    2846:	91 1d       	adc	r25, r1
    2848:	21 91       	ld	r18, Z+
    284a:	20 53       	subi	r18, 0x30	; 48
    284c:	2a 30       	cpi	r18, 0x0A	; 10
    284e:	c0 f3       	brcs	.-16     	; 0x2840 <atoi+0x22>
    2850:	1e f4       	brtc	.+6      	; 0x2858 <atoi+0x3a>
    2852:	90 95       	com	r25
    2854:	81 95       	neg	r24
    2856:	9f 4f       	sbci	r25, 0xFF	; 255
    2858:	08 95       	ret

0000285a <isspace>:
    285a:	91 11       	cpse	r25, r1
    285c:	0c 94 f7 16 	jmp	0x2dee	; 0x2dee <__ctype_isfalse>
    2860:	80 32       	cpi	r24, 0x20	; 32
    2862:	19 f0       	breq	.+6      	; 0x286a <isspace+0x10>
    2864:	89 50       	subi	r24, 0x09	; 9
    2866:	85 50       	subi	r24, 0x05	; 5
    2868:	c8 f7       	brcc	.-14     	; 0x285c <isspace+0x2>
    286a:	08 95       	ret

0000286c <strncasecmp_P>:
    286c:	fb 01       	movw	r30, r22
    286e:	dc 01       	movw	r26, r24
    2870:	41 50       	subi	r20, 0x01	; 1
    2872:	50 40       	sbci	r21, 0x00	; 0
    2874:	88 f0       	brcs	.+34     	; 0x2898 <strncasecmp_P+0x2c>
    2876:	8d 91       	ld	r24, X+
    2878:	81 34       	cpi	r24, 0x41	; 65
    287a:	1c f0       	brlt	.+6      	; 0x2882 <strncasecmp_P+0x16>
    287c:	8b 35       	cpi	r24, 0x5B	; 91
    287e:	0c f4       	brge	.+2      	; 0x2882 <strncasecmp_P+0x16>
    2880:	80 5e       	subi	r24, 0xE0	; 224
    2882:	65 91       	lpm	r22, Z+
    2884:	61 34       	cpi	r22, 0x41	; 65
    2886:	1c f0       	brlt	.+6      	; 0x288e <strncasecmp_P+0x22>
    2888:	6b 35       	cpi	r22, 0x5B	; 91
    288a:	0c f4       	brge	.+2      	; 0x288e <strncasecmp_P+0x22>
    288c:	60 5e       	subi	r22, 0xE0	; 224
    288e:	86 1b       	sub	r24, r22
    2890:	61 11       	cpse	r22, r1
    2892:	71 f3       	breq	.-36     	; 0x2870 <strncasecmp_P+0x4>
    2894:	99 0b       	sbc	r25, r25
    2896:	08 95       	ret
    2898:	88 1b       	sub	r24, r24
    289a:	fc cf       	rjmp	.-8      	; 0x2894 <strncasecmp_P+0x28>

0000289c <strcmp>:
    289c:	fb 01       	movw	r30, r22
    289e:	dc 01       	movw	r26, r24
    28a0:	8d 91       	ld	r24, X+
    28a2:	01 90       	ld	r0, Z+
    28a4:	80 19       	sub	r24, r0
    28a6:	01 10       	cpse	r0, r1
    28a8:	d9 f3       	breq	.-10     	; 0x28a0 <strcmp+0x4>
    28aa:	99 0b       	sbc	r25, r25
    28ac:	08 95       	ret

000028ae <strcpy>:
    28ae:	fb 01       	movw	r30, r22
    28b0:	dc 01       	movw	r26, r24
    28b2:	01 90       	ld	r0, Z+
    28b4:	0d 92       	st	X+, r0
    28b6:	00 20       	and	r0, r0
    28b8:	e1 f7       	brne	.-8      	; 0x28b2 <strcpy+0x4>
    28ba:	08 95       	ret

000028bc <strtok_r>:
    28bc:	fa 01       	movw	r30, r20
    28be:	a1 91       	ld	r26, Z+
    28c0:	b0 81       	ld	r27, Z
    28c2:	00 97       	sbiw	r24, 0x00	; 0
    28c4:	19 f4       	brne	.+6      	; 0x28cc <strtok_r+0x10>
    28c6:	10 97       	sbiw	r26, 0x00	; 0
    28c8:	e1 f0       	breq	.+56     	; 0x2902 <strtok_r+0x46>
    28ca:	cd 01       	movw	r24, r26
    28cc:	dc 01       	movw	r26, r24
    28ce:	cd 01       	movw	r24, r26
    28d0:	0d 90       	ld	r0, X+
    28d2:	00 20       	and	r0, r0
    28d4:	11 f4       	brne	.+4      	; 0x28da <strtok_r+0x1e>
    28d6:	c0 01       	movw	r24, r0
    28d8:	13 c0       	rjmp	.+38     	; 0x2900 <strtok_r+0x44>
    28da:	fb 01       	movw	r30, r22
    28dc:	21 91       	ld	r18, Z+
    28de:	22 23       	and	r18, r18
    28e0:	19 f0       	breq	.+6      	; 0x28e8 <strtok_r+0x2c>
    28e2:	20 15       	cp	r18, r0
    28e4:	d9 f7       	brne	.-10     	; 0x28dc <strtok_r+0x20>
    28e6:	f3 cf       	rjmp	.-26     	; 0x28ce <strtok_r+0x12>
    28e8:	fb 01       	movw	r30, r22
    28ea:	21 91       	ld	r18, Z+
    28ec:	20 15       	cp	r18, r0
    28ee:	19 f4       	brne	.+6      	; 0x28f6 <strtok_r+0x3a>
    28f0:	1e 92       	st	-X, r1
    28f2:	11 96       	adiw	r26, 0x01	; 1
    28f4:	06 c0       	rjmp	.+12     	; 0x2902 <strtok_r+0x46>
    28f6:	22 23       	and	r18, r18
    28f8:	c1 f7       	brne	.-16     	; 0x28ea <strtok_r+0x2e>
    28fa:	0d 90       	ld	r0, X+
    28fc:	00 20       	and	r0, r0
    28fe:	a1 f7       	brne	.-24     	; 0x28e8 <strtok_r+0x2c>
    2900:	d0 01       	movw	r26, r0
    2902:	fa 01       	movw	r30, r20
    2904:	a1 93       	st	Z+, r26
    2906:	b0 83       	st	Z, r27
    2908:	08 95       	ret

0000290a <__mulhi_const_10>:
    290a:	7a e0       	ldi	r23, 0x0A	; 10
    290c:	97 9f       	mul	r25, r23
    290e:	90 2d       	mov	r25, r0
    2910:	87 9f       	mul	r24, r23
    2912:	80 2d       	mov	r24, r0
    2914:	91 0d       	add	r25, r1
    2916:	11 24       	eor	r1, r1
    2918:	08 95       	ret

0000291a <vsnprintf>:
    291a:	0f 93       	push	r16
    291c:	1f 93       	push	r17
    291e:	cf 93       	push	r28
    2920:	df 93       	push	r29
    2922:	cd b7       	in	r28, 0x3d	; 61
    2924:	de b7       	in	r29, 0x3e	; 62
    2926:	2e 97       	sbiw	r28, 0x0e	; 14
    2928:	cd bf       	out	0x3d, r28	; 61
    292a:	de bf       	out	0x3e, r29	; 62
    292c:	8c 01       	movw	r16, r24
    292e:	fa 01       	movw	r30, r20
    2930:	86 e0       	ldi	r24, 0x06	; 6
    2932:	8c 83       	std	Y+4, r24	; 0x04
    2934:	09 83       	std	Y+1, r16	; 0x01
    2936:	1a 83       	std	Y+2, r17	; 0x02
    2938:	77 ff       	sbrs	r23, 7
    293a:	02 c0       	rjmp	.+4      	; 0x2940 <vsnprintf+0x26>
    293c:	60 e0       	ldi	r22, 0x00	; 0
    293e:	70 e8       	ldi	r23, 0x80	; 128
    2940:	cb 01       	movw	r24, r22
    2942:	01 97       	sbiw	r24, 0x01	; 1
    2944:	8d 83       	std	Y+5, r24	; 0x05
    2946:	9e 83       	std	Y+6, r25	; 0x06
    2948:	a9 01       	movw	r20, r18
    294a:	bf 01       	movw	r22, r30
    294c:	ce 01       	movw	r24, r28
    294e:	01 96       	adiw	r24, 0x01	; 1
    2950:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <vfprintf>
    2954:	4d 81       	ldd	r20, Y+5	; 0x05
    2956:	5e 81       	ldd	r21, Y+6	; 0x06
    2958:	57 fd       	sbrc	r21, 7
    295a:	0a c0       	rjmp	.+20     	; 0x2970 <vsnprintf+0x56>
    295c:	2f 81       	ldd	r18, Y+7	; 0x07
    295e:	38 85       	ldd	r19, Y+8	; 0x08
    2960:	42 17       	cp	r20, r18
    2962:	53 07       	cpc	r21, r19
    2964:	0c f4       	brge	.+2      	; 0x2968 <vsnprintf+0x4e>
    2966:	9a 01       	movw	r18, r20
    2968:	f8 01       	movw	r30, r16
    296a:	e2 0f       	add	r30, r18
    296c:	f3 1f       	adc	r31, r19
    296e:	10 82       	st	Z, r1
    2970:	2e 96       	adiw	r28, 0x0e	; 14
    2972:	cd bf       	out	0x3d, r28	; 61
    2974:	de bf       	out	0x3e, r29	; 62
    2976:	df 91       	pop	r29
    2978:	cf 91       	pop	r28
    297a:	1f 91       	pop	r17
    297c:	0f 91       	pop	r16
    297e:	08 95       	ret

00002980 <vsnprintf_P>:
    2980:	0f 93       	push	r16
    2982:	1f 93       	push	r17
    2984:	cf 93       	push	r28
    2986:	df 93       	push	r29
    2988:	cd b7       	in	r28, 0x3d	; 61
    298a:	de b7       	in	r29, 0x3e	; 62
    298c:	2e 97       	sbiw	r28, 0x0e	; 14
    298e:	cd bf       	out	0x3d, r28	; 61
    2990:	de bf       	out	0x3e, r29	; 62
    2992:	8c 01       	movw	r16, r24
    2994:	fa 01       	movw	r30, r20
    2996:	8e e0       	ldi	r24, 0x0E	; 14
    2998:	8c 83       	std	Y+4, r24	; 0x04
    299a:	09 83       	std	Y+1, r16	; 0x01
    299c:	1a 83       	std	Y+2, r17	; 0x02
    299e:	77 ff       	sbrs	r23, 7
    29a0:	02 c0       	rjmp	.+4      	; 0x29a6 <vsnprintf_P+0x26>
    29a2:	60 e0       	ldi	r22, 0x00	; 0
    29a4:	70 e8       	ldi	r23, 0x80	; 128
    29a6:	cb 01       	movw	r24, r22
    29a8:	01 97       	sbiw	r24, 0x01	; 1
    29aa:	8d 83       	std	Y+5, r24	; 0x05
    29ac:	9e 83       	std	Y+6, r25	; 0x06
    29ae:	a9 01       	movw	r20, r18
    29b0:	bf 01       	movw	r22, r30
    29b2:	ce 01       	movw	r24, r28
    29b4:	01 96       	adiw	r24, 0x01	; 1
    29b6:	0e 94 f3 14 	call	0x29e6	; 0x29e6 <vfprintf>
    29ba:	4d 81       	ldd	r20, Y+5	; 0x05
    29bc:	5e 81       	ldd	r21, Y+6	; 0x06
    29be:	57 fd       	sbrc	r21, 7
    29c0:	0a c0       	rjmp	.+20     	; 0x29d6 <vsnprintf_P+0x56>
    29c2:	2f 81       	ldd	r18, Y+7	; 0x07
    29c4:	38 85       	ldd	r19, Y+8	; 0x08
    29c6:	42 17       	cp	r20, r18
    29c8:	53 07       	cpc	r21, r19
    29ca:	0c f4       	brge	.+2      	; 0x29ce <vsnprintf_P+0x4e>
    29cc:	9a 01       	movw	r18, r20
    29ce:	f8 01       	movw	r30, r16
    29d0:	e2 0f       	add	r30, r18
    29d2:	f3 1f       	adc	r31, r19
    29d4:	10 82       	st	Z, r1
    29d6:	2e 96       	adiw	r28, 0x0e	; 14
    29d8:	cd bf       	out	0x3d, r28	; 61
    29da:	de bf       	out	0x3e, r29	; 62
    29dc:	df 91       	pop	r29
    29de:	cf 91       	pop	r28
    29e0:	1f 91       	pop	r17
    29e2:	0f 91       	pop	r16
    29e4:	08 95       	ret

000029e6 <vfprintf>:
    29e6:	2f 92       	push	r2
    29e8:	3f 92       	push	r3
    29ea:	4f 92       	push	r4
    29ec:	5f 92       	push	r5
    29ee:	6f 92       	push	r6
    29f0:	7f 92       	push	r7
    29f2:	8f 92       	push	r8
    29f4:	9f 92       	push	r9
    29f6:	af 92       	push	r10
    29f8:	bf 92       	push	r11
    29fa:	cf 92       	push	r12
    29fc:	df 92       	push	r13
    29fe:	ef 92       	push	r14
    2a00:	ff 92       	push	r15
    2a02:	0f 93       	push	r16
    2a04:	1f 93       	push	r17
    2a06:	cf 93       	push	r28
    2a08:	df 93       	push	r29
    2a0a:	cd b7       	in	r28, 0x3d	; 61
    2a0c:	de b7       	in	r29, 0x3e	; 62
    2a0e:	2b 97       	sbiw	r28, 0x0b	; 11
    2a10:	cd bf       	out	0x3d, r28	; 61
    2a12:	de bf       	out	0x3e, r29	; 62
    2a14:	6c 01       	movw	r12, r24
    2a16:	7b 01       	movw	r14, r22
    2a18:	8a 01       	movw	r16, r20
    2a1a:	fc 01       	movw	r30, r24
    2a1c:	16 82       	std	Z+6, r1	; 0x06
    2a1e:	17 82       	std	Z+7, r1	; 0x07
    2a20:	83 81       	ldd	r24, Z+3	; 0x03
    2a22:	81 ff       	sbrs	r24, 1
    2a24:	cc c1       	rjmp	.+920    	; 0x2dbe <vfprintf+0x3d8>
    2a26:	ce 01       	movw	r24, r28
    2a28:	01 96       	adiw	r24, 0x01	; 1
    2a2a:	3c 01       	movw	r6, r24
    2a2c:	f6 01       	movw	r30, r12
    2a2e:	93 81       	ldd	r25, Z+3	; 0x03
    2a30:	f7 01       	movw	r30, r14
    2a32:	93 fd       	sbrc	r25, 3
    2a34:	85 91       	lpm	r24, Z+
    2a36:	93 ff       	sbrs	r25, 3
    2a38:	81 91       	ld	r24, Z+
    2a3a:	7f 01       	movw	r14, r30
    2a3c:	88 23       	and	r24, r24
    2a3e:	09 f4       	brne	.+2      	; 0x2a42 <vfprintf+0x5c>
    2a40:	ba c1       	rjmp	.+884    	; 0x2db6 <vfprintf+0x3d0>
    2a42:	85 32       	cpi	r24, 0x25	; 37
    2a44:	39 f4       	brne	.+14     	; 0x2a54 <vfprintf+0x6e>
    2a46:	93 fd       	sbrc	r25, 3
    2a48:	85 91       	lpm	r24, Z+
    2a4a:	93 ff       	sbrs	r25, 3
    2a4c:	81 91       	ld	r24, Z+
    2a4e:	7f 01       	movw	r14, r30
    2a50:	85 32       	cpi	r24, 0x25	; 37
    2a52:	29 f4       	brne	.+10     	; 0x2a5e <vfprintf+0x78>
    2a54:	b6 01       	movw	r22, r12
    2a56:	90 e0       	ldi	r25, 0x00	; 0
    2a58:	0e 94 10 17 	call	0x2e20	; 0x2e20 <fputc>
    2a5c:	e7 cf       	rjmp	.-50     	; 0x2a2c <vfprintf+0x46>
    2a5e:	91 2c       	mov	r9, r1
    2a60:	21 2c       	mov	r2, r1
    2a62:	31 2c       	mov	r3, r1
    2a64:	ff e1       	ldi	r31, 0x1F	; 31
    2a66:	f3 15       	cp	r31, r3
    2a68:	d8 f0       	brcs	.+54     	; 0x2aa0 <vfprintf+0xba>
    2a6a:	8b 32       	cpi	r24, 0x2B	; 43
    2a6c:	79 f0       	breq	.+30     	; 0x2a8c <vfprintf+0xa6>
    2a6e:	38 f4       	brcc	.+14     	; 0x2a7e <vfprintf+0x98>
    2a70:	80 32       	cpi	r24, 0x20	; 32
    2a72:	79 f0       	breq	.+30     	; 0x2a92 <vfprintf+0xac>
    2a74:	83 32       	cpi	r24, 0x23	; 35
    2a76:	a1 f4       	brne	.+40     	; 0x2aa0 <vfprintf+0xba>
    2a78:	23 2d       	mov	r18, r3
    2a7a:	20 61       	ori	r18, 0x10	; 16
    2a7c:	1d c0       	rjmp	.+58     	; 0x2ab8 <vfprintf+0xd2>
    2a7e:	8d 32       	cpi	r24, 0x2D	; 45
    2a80:	61 f0       	breq	.+24     	; 0x2a9a <vfprintf+0xb4>
    2a82:	80 33       	cpi	r24, 0x30	; 48
    2a84:	69 f4       	brne	.+26     	; 0x2aa0 <vfprintf+0xba>
    2a86:	23 2d       	mov	r18, r3
    2a88:	21 60       	ori	r18, 0x01	; 1
    2a8a:	16 c0       	rjmp	.+44     	; 0x2ab8 <vfprintf+0xd2>
    2a8c:	83 2d       	mov	r24, r3
    2a8e:	82 60       	ori	r24, 0x02	; 2
    2a90:	38 2e       	mov	r3, r24
    2a92:	e3 2d       	mov	r30, r3
    2a94:	e4 60       	ori	r30, 0x04	; 4
    2a96:	3e 2e       	mov	r3, r30
    2a98:	2a c0       	rjmp	.+84     	; 0x2aee <vfprintf+0x108>
    2a9a:	f3 2d       	mov	r31, r3
    2a9c:	f8 60       	ori	r31, 0x08	; 8
    2a9e:	1d c0       	rjmp	.+58     	; 0x2ada <vfprintf+0xf4>
    2aa0:	37 fc       	sbrc	r3, 7
    2aa2:	2d c0       	rjmp	.+90     	; 0x2afe <vfprintf+0x118>
    2aa4:	20 ed       	ldi	r18, 0xD0	; 208
    2aa6:	28 0f       	add	r18, r24
    2aa8:	2a 30       	cpi	r18, 0x0A	; 10
    2aaa:	40 f0       	brcs	.+16     	; 0x2abc <vfprintf+0xd6>
    2aac:	8e 32       	cpi	r24, 0x2E	; 46
    2aae:	b9 f4       	brne	.+46     	; 0x2ade <vfprintf+0xf8>
    2ab0:	36 fc       	sbrc	r3, 6
    2ab2:	81 c1       	rjmp	.+770    	; 0x2db6 <vfprintf+0x3d0>
    2ab4:	23 2d       	mov	r18, r3
    2ab6:	20 64       	ori	r18, 0x40	; 64
    2ab8:	32 2e       	mov	r3, r18
    2aba:	19 c0       	rjmp	.+50     	; 0x2aee <vfprintf+0x108>
    2abc:	36 fe       	sbrs	r3, 6
    2abe:	06 c0       	rjmp	.+12     	; 0x2acc <vfprintf+0xe6>
    2ac0:	8a e0       	ldi	r24, 0x0A	; 10
    2ac2:	98 9e       	mul	r9, r24
    2ac4:	20 0d       	add	r18, r0
    2ac6:	11 24       	eor	r1, r1
    2ac8:	92 2e       	mov	r9, r18
    2aca:	11 c0       	rjmp	.+34     	; 0x2aee <vfprintf+0x108>
    2acc:	ea e0       	ldi	r30, 0x0A	; 10
    2ace:	2e 9e       	mul	r2, r30
    2ad0:	20 0d       	add	r18, r0
    2ad2:	11 24       	eor	r1, r1
    2ad4:	22 2e       	mov	r2, r18
    2ad6:	f3 2d       	mov	r31, r3
    2ad8:	f0 62       	ori	r31, 0x20	; 32
    2ada:	3f 2e       	mov	r3, r31
    2adc:	08 c0       	rjmp	.+16     	; 0x2aee <vfprintf+0x108>
    2ade:	8c 36       	cpi	r24, 0x6C	; 108
    2ae0:	21 f4       	brne	.+8      	; 0x2aea <vfprintf+0x104>
    2ae2:	83 2d       	mov	r24, r3
    2ae4:	80 68       	ori	r24, 0x80	; 128
    2ae6:	38 2e       	mov	r3, r24
    2ae8:	02 c0       	rjmp	.+4      	; 0x2aee <vfprintf+0x108>
    2aea:	88 36       	cpi	r24, 0x68	; 104
    2aec:	41 f4       	brne	.+16     	; 0x2afe <vfprintf+0x118>
    2aee:	f7 01       	movw	r30, r14
    2af0:	93 fd       	sbrc	r25, 3
    2af2:	85 91       	lpm	r24, Z+
    2af4:	93 ff       	sbrs	r25, 3
    2af6:	81 91       	ld	r24, Z+
    2af8:	7f 01       	movw	r14, r30
    2afa:	81 11       	cpse	r24, r1
    2afc:	b3 cf       	rjmp	.-154    	; 0x2a64 <vfprintf+0x7e>
    2afe:	98 2f       	mov	r25, r24
    2b00:	9f 7d       	andi	r25, 0xDF	; 223
    2b02:	95 54       	subi	r25, 0x45	; 69
    2b04:	93 30       	cpi	r25, 0x03	; 3
    2b06:	28 f4       	brcc	.+10     	; 0x2b12 <vfprintf+0x12c>
    2b08:	0c 5f       	subi	r16, 0xFC	; 252
    2b0a:	1f 4f       	sbci	r17, 0xFF	; 255
    2b0c:	9f e3       	ldi	r25, 0x3F	; 63
    2b0e:	99 83       	std	Y+1, r25	; 0x01
    2b10:	0d c0       	rjmp	.+26     	; 0x2b2c <vfprintf+0x146>
    2b12:	83 36       	cpi	r24, 0x63	; 99
    2b14:	31 f0       	breq	.+12     	; 0x2b22 <vfprintf+0x13c>
    2b16:	83 37       	cpi	r24, 0x73	; 115
    2b18:	71 f0       	breq	.+28     	; 0x2b36 <vfprintf+0x150>
    2b1a:	83 35       	cpi	r24, 0x53	; 83
    2b1c:	09 f0       	breq	.+2      	; 0x2b20 <vfprintf+0x13a>
    2b1e:	59 c0       	rjmp	.+178    	; 0x2bd2 <vfprintf+0x1ec>
    2b20:	21 c0       	rjmp	.+66     	; 0x2b64 <vfprintf+0x17e>
    2b22:	f8 01       	movw	r30, r16
    2b24:	80 81       	ld	r24, Z
    2b26:	89 83       	std	Y+1, r24	; 0x01
    2b28:	0e 5f       	subi	r16, 0xFE	; 254
    2b2a:	1f 4f       	sbci	r17, 0xFF	; 255
    2b2c:	88 24       	eor	r8, r8
    2b2e:	83 94       	inc	r8
    2b30:	91 2c       	mov	r9, r1
    2b32:	53 01       	movw	r10, r6
    2b34:	13 c0       	rjmp	.+38     	; 0x2b5c <vfprintf+0x176>
    2b36:	28 01       	movw	r4, r16
    2b38:	f2 e0       	ldi	r31, 0x02	; 2
    2b3a:	4f 0e       	add	r4, r31
    2b3c:	51 1c       	adc	r5, r1
    2b3e:	f8 01       	movw	r30, r16
    2b40:	a0 80       	ld	r10, Z
    2b42:	b1 80       	ldd	r11, Z+1	; 0x01
    2b44:	36 fe       	sbrs	r3, 6
    2b46:	03 c0       	rjmp	.+6      	; 0x2b4e <vfprintf+0x168>
    2b48:	69 2d       	mov	r22, r9
    2b4a:	70 e0       	ldi	r23, 0x00	; 0
    2b4c:	02 c0       	rjmp	.+4      	; 0x2b52 <vfprintf+0x16c>
    2b4e:	6f ef       	ldi	r22, 0xFF	; 255
    2b50:	7f ef       	ldi	r23, 0xFF	; 255
    2b52:	c5 01       	movw	r24, r10
    2b54:	0e 94 05 17 	call	0x2e0a	; 0x2e0a <strnlen>
    2b58:	4c 01       	movw	r8, r24
    2b5a:	82 01       	movw	r16, r4
    2b5c:	f3 2d       	mov	r31, r3
    2b5e:	ff 77       	andi	r31, 0x7F	; 127
    2b60:	3f 2e       	mov	r3, r31
    2b62:	16 c0       	rjmp	.+44     	; 0x2b90 <vfprintf+0x1aa>
    2b64:	28 01       	movw	r4, r16
    2b66:	22 e0       	ldi	r18, 0x02	; 2
    2b68:	42 0e       	add	r4, r18
    2b6a:	51 1c       	adc	r5, r1
    2b6c:	f8 01       	movw	r30, r16
    2b6e:	a0 80       	ld	r10, Z
    2b70:	b1 80       	ldd	r11, Z+1	; 0x01
    2b72:	36 fe       	sbrs	r3, 6
    2b74:	03 c0       	rjmp	.+6      	; 0x2b7c <vfprintf+0x196>
    2b76:	69 2d       	mov	r22, r9
    2b78:	70 e0       	ldi	r23, 0x00	; 0
    2b7a:	02 c0       	rjmp	.+4      	; 0x2b80 <vfprintf+0x19a>
    2b7c:	6f ef       	ldi	r22, 0xFF	; 255
    2b7e:	7f ef       	ldi	r23, 0xFF	; 255
    2b80:	c5 01       	movw	r24, r10
    2b82:	0e 94 fa 16 	call	0x2df4	; 0x2df4 <strnlen_P>
    2b86:	4c 01       	movw	r8, r24
    2b88:	f3 2d       	mov	r31, r3
    2b8a:	f0 68       	ori	r31, 0x80	; 128
    2b8c:	3f 2e       	mov	r3, r31
    2b8e:	82 01       	movw	r16, r4
    2b90:	33 fc       	sbrc	r3, 3
    2b92:	1b c0       	rjmp	.+54     	; 0x2bca <vfprintf+0x1e4>
    2b94:	82 2d       	mov	r24, r2
    2b96:	90 e0       	ldi	r25, 0x00	; 0
    2b98:	88 16       	cp	r8, r24
    2b9a:	99 06       	cpc	r9, r25
    2b9c:	b0 f4       	brcc	.+44     	; 0x2bca <vfprintf+0x1e4>
    2b9e:	b6 01       	movw	r22, r12
    2ba0:	80 e2       	ldi	r24, 0x20	; 32
    2ba2:	90 e0       	ldi	r25, 0x00	; 0
    2ba4:	0e 94 10 17 	call	0x2e20	; 0x2e20 <fputc>
    2ba8:	2a 94       	dec	r2
    2baa:	f4 cf       	rjmp	.-24     	; 0x2b94 <vfprintf+0x1ae>
    2bac:	f5 01       	movw	r30, r10
    2bae:	37 fc       	sbrc	r3, 7
    2bb0:	85 91       	lpm	r24, Z+
    2bb2:	37 fe       	sbrs	r3, 7
    2bb4:	81 91       	ld	r24, Z+
    2bb6:	5f 01       	movw	r10, r30
    2bb8:	b6 01       	movw	r22, r12
    2bba:	90 e0       	ldi	r25, 0x00	; 0
    2bbc:	0e 94 10 17 	call	0x2e20	; 0x2e20 <fputc>
    2bc0:	21 10       	cpse	r2, r1
    2bc2:	2a 94       	dec	r2
    2bc4:	21 e0       	ldi	r18, 0x01	; 1
    2bc6:	82 1a       	sub	r8, r18
    2bc8:	91 08       	sbc	r9, r1
    2bca:	81 14       	cp	r8, r1
    2bcc:	91 04       	cpc	r9, r1
    2bce:	71 f7       	brne	.-36     	; 0x2bac <vfprintf+0x1c6>
    2bd0:	e8 c0       	rjmp	.+464    	; 0x2da2 <vfprintf+0x3bc>
    2bd2:	84 36       	cpi	r24, 0x64	; 100
    2bd4:	11 f0       	breq	.+4      	; 0x2bda <vfprintf+0x1f4>
    2bd6:	89 36       	cpi	r24, 0x69	; 105
    2bd8:	41 f5       	brne	.+80     	; 0x2c2a <vfprintf+0x244>
    2bda:	f8 01       	movw	r30, r16
    2bdc:	37 fe       	sbrs	r3, 7
    2bde:	07 c0       	rjmp	.+14     	; 0x2bee <vfprintf+0x208>
    2be0:	60 81       	ld	r22, Z
    2be2:	71 81       	ldd	r23, Z+1	; 0x01
    2be4:	82 81       	ldd	r24, Z+2	; 0x02
    2be6:	93 81       	ldd	r25, Z+3	; 0x03
    2be8:	0c 5f       	subi	r16, 0xFC	; 252
    2bea:	1f 4f       	sbci	r17, 0xFF	; 255
    2bec:	08 c0       	rjmp	.+16     	; 0x2bfe <vfprintf+0x218>
    2bee:	60 81       	ld	r22, Z
    2bf0:	71 81       	ldd	r23, Z+1	; 0x01
    2bf2:	07 2e       	mov	r0, r23
    2bf4:	00 0c       	add	r0, r0
    2bf6:	88 0b       	sbc	r24, r24
    2bf8:	99 0b       	sbc	r25, r25
    2bfa:	0e 5f       	subi	r16, 0xFE	; 254
    2bfc:	1f 4f       	sbci	r17, 0xFF	; 255
    2bfe:	f3 2d       	mov	r31, r3
    2c00:	ff 76       	andi	r31, 0x6F	; 111
    2c02:	3f 2e       	mov	r3, r31
    2c04:	97 ff       	sbrs	r25, 7
    2c06:	09 c0       	rjmp	.+18     	; 0x2c1a <vfprintf+0x234>
    2c08:	90 95       	com	r25
    2c0a:	80 95       	com	r24
    2c0c:	70 95       	com	r23
    2c0e:	61 95       	neg	r22
    2c10:	7f 4f       	sbci	r23, 0xFF	; 255
    2c12:	8f 4f       	sbci	r24, 0xFF	; 255
    2c14:	9f 4f       	sbci	r25, 0xFF	; 255
    2c16:	f0 68       	ori	r31, 0x80	; 128
    2c18:	3f 2e       	mov	r3, r31
    2c1a:	2a e0       	ldi	r18, 0x0A	; 10
    2c1c:	30 e0       	ldi	r19, 0x00	; 0
    2c1e:	a3 01       	movw	r20, r6
    2c20:	0e 94 4c 17 	call	0x2e98	; 0x2e98 <__ultoa_invert>
    2c24:	88 2e       	mov	r8, r24
    2c26:	86 18       	sub	r8, r6
    2c28:	45 c0       	rjmp	.+138    	; 0x2cb4 <vfprintf+0x2ce>
    2c2a:	85 37       	cpi	r24, 0x75	; 117
    2c2c:	31 f4       	brne	.+12     	; 0x2c3a <vfprintf+0x254>
    2c2e:	23 2d       	mov	r18, r3
    2c30:	2f 7e       	andi	r18, 0xEF	; 239
    2c32:	b2 2e       	mov	r11, r18
    2c34:	2a e0       	ldi	r18, 0x0A	; 10
    2c36:	30 e0       	ldi	r19, 0x00	; 0
    2c38:	25 c0       	rjmp	.+74     	; 0x2c84 <vfprintf+0x29e>
    2c3a:	93 2d       	mov	r25, r3
    2c3c:	99 7f       	andi	r25, 0xF9	; 249
    2c3e:	b9 2e       	mov	r11, r25
    2c40:	8f 36       	cpi	r24, 0x6F	; 111
    2c42:	c1 f0       	breq	.+48     	; 0x2c74 <vfprintf+0x28e>
    2c44:	18 f4       	brcc	.+6      	; 0x2c4c <vfprintf+0x266>
    2c46:	88 35       	cpi	r24, 0x58	; 88
    2c48:	79 f0       	breq	.+30     	; 0x2c68 <vfprintf+0x282>
    2c4a:	b5 c0       	rjmp	.+362    	; 0x2db6 <vfprintf+0x3d0>
    2c4c:	80 37       	cpi	r24, 0x70	; 112
    2c4e:	19 f0       	breq	.+6      	; 0x2c56 <vfprintf+0x270>
    2c50:	88 37       	cpi	r24, 0x78	; 120
    2c52:	21 f0       	breq	.+8      	; 0x2c5c <vfprintf+0x276>
    2c54:	b0 c0       	rjmp	.+352    	; 0x2db6 <vfprintf+0x3d0>
    2c56:	e9 2f       	mov	r30, r25
    2c58:	e0 61       	ori	r30, 0x10	; 16
    2c5a:	be 2e       	mov	r11, r30
    2c5c:	b4 fe       	sbrs	r11, 4
    2c5e:	0d c0       	rjmp	.+26     	; 0x2c7a <vfprintf+0x294>
    2c60:	fb 2d       	mov	r31, r11
    2c62:	f4 60       	ori	r31, 0x04	; 4
    2c64:	bf 2e       	mov	r11, r31
    2c66:	09 c0       	rjmp	.+18     	; 0x2c7a <vfprintf+0x294>
    2c68:	34 fe       	sbrs	r3, 4
    2c6a:	0a c0       	rjmp	.+20     	; 0x2c80 <vfprintf+0x29a>
    2c6c:	29 2f       	mov	r18, r25
    2c6e:	26 60       	ori	r18, 0x06	; 6
    2c70:	b2 2e       	mov	r11, r18
    2c72:	06 c0       	rjmp	.+12     	; 0x2c80 <vfprintf+0x29a>
    2c74:	28 e0       	ldi	r18, 0x08	; 8
    2c76:	30 e0       	ldi	r19, 0x00	; 0
    2c78:	05 c0       	rjmp	.+10     	; 0x2c84 <vfprintf+0x29e>
    2c7a:	20 e1       	ldi	r18, 0x10	; 16
    2c7c:	30 e0       	ldi	r19, 0x00	; 0
    2c7e:	02 c0       	rjmp	.+4      	; 0x2c84 <vfprintf+0x29e>
    2c80:	20 e1       	ldi	r18, 0x10	; 16
    2c82:	32 e0       	ldi	r19, 0x02	; 2
    2c84:	f8 01       	movw	r30, r16
    2c86:	b7 fe       	sbrs	r11, 7
    2c88:	07 c0       	rjmp	.+14     	; 0x2c98 <vfprintf+0x2b2>
    2c8a:	60 81       	ld	r22, Z
    2c8c:	71 81       	ldd	r23, Z+1	; 0x01
    2c8e:	82 81       	ldd	r24, Z+2	; 0x02
    2c90:	93 81       	ldd	r25, Z+3	; 0x03
    2c92:	0c 5f       	subi	r16, 0xFC	; 252
    2c94:	1f 4f       	sbci	r17, 0xFF	; 255
    2c96:	06 c0       	rjmp	.+12     	; 0x2ca4 <vfprintf+0x2be>
    2c98:	60 81       	ld	r22, Z
    2c9a:	71 81       	ldd	r23, Z+1	; 0x01
    2c9c:	80 e0       	ldi	r24, 0x00	; 0
    2c9e:	90 e0       	ldi	r25, 0x00	; 0
    2ca0:	0e 5f       	subi	r16, 0xFE	; 254
    2ca2:	1f 4f       	sbci	r17, 0xFF	; 255
    2ca4:	a3 01       	movw	r20, r6
    2ca6:	0e 94 4c 17 	call	0x2e98	; 0x2e98 <__ultoa_invert>
    2caa:	88 2e       	mov	r8, r24
    2cac:	86 18       	sub	r8, r6
    2cae:	fb 2d       	mov	r31, r11
    2cb0:	ff 77       	andi	r31, 0x7F	; 127
    2cb2:	3f 2e       	mov	r3, r31
    2cb4:	36 fe       	sbrs	r3, 6
    2cb6:	0d c0       	rjmp	.+26     	; 0x2cd2 <vfprintf+0x2ec>
    2cb8:	23 2d       	mov	r18, r3
    2cba:	2e 7f       	andi	r18, 0xFE	; 254
    2cbc:	a2 2e       	mov	r10, r18
    2cbe:	89 14       	cp	r8, r9
    2cc0:	58 f4       	brcc	.+22     	; 0x2cd8 <vfprintf+0x2f2>
    2cc2:	34 fe       	sbrs	r3, 4
    2cc4:	0b c0       	rjmp	.+22     	; 0x2cdc <vfprintf+0x2f6>
    2cc6:	32 fc       	sbrc	r3, 2
    2cc8:	09 c0       	rjmp	.+18     	; 0x2cdc <vfprintf+0x2f6>
    2cca:	83 2d       	mov	r24, r3
    2ccc:	8e 7e       	andi	r24, 0xEE	; 238
    2cce:	a8 2e       	mov	r10, r24
    2cd0:	05 c0       	rjmp	.+10     	; 0x2cdc <vfprintf+0x2f6>
    2cd2:	b8 2c       	mov	r11, r8
    2cd4:	a3 2c       	mov	r10, r3
    2cd6:	03 c0       	rjmp	.+6      	; 0x2cde <vfprintf+0x2f8>
    2cd8:	b8 2c       	mov	r11, r8
    2cda:	01 c0       	rjmp	.+2      	; 0x2cde <vfprintf+0x2f8>
    2cdc:	b9 2c       	mov	r11, r9
    2cde:	a4 fe       	sbrs	r10, 4
    2ce0:	0f c0       	rjmp	.+30     	; 0x2d00 <vfprintf+0x31a>
    2ce2:	fe 01       	movw	r30, r28
    2ce4:	e8 0d       	add	r30, r8
    2ce6:	f1 1d       	adc	r31, r1
    2ce8:	80 81       	ld	r24, Z
    2cea:	80 33       	cpi	r24, 0x30	; 48
    2cec:	21 f4       	brne	.+8      	; 0x2cf6 <vfprintf+0x310>
    2cee:	9a 2d       	mov	r25, r10
    2cf0:	99 7e       	andi	r25, 0xE9	; 233
    2cf2:	a9 2e       	mov	r10, r25
    2cf4:	09 c0       	rjmp	.+18     	; 0x2d08 <vfprintf+0x322>
    2cf6:	a2 fe       	sbrs	r10, 2
    2cf8:	06 c0       	rjmp	.+12     	; 0x2d06 <vfprintf+0x320>
    2cfa:	b3 94       	inc	r11
    2cfc:	b3 94       	inc	r11
    2cfe:	04 c0       	rjmp	.+8      	; 0x2d08 <vfprintf+0x322>
    2d00:	8a 2d       	mov	r24, r10
    2d02:	86 78       	andi	r24, 0x86	; 134
    2d04:	09 f0       	breq	.+2      	; 0x2d08 <vfprintf+0x322>
    2d06:	b3 94       	inc	r11
    2d08:	a3 fc       	sbrc	r10, 3
    2d0a:	11 c0       	rjmp	.+34     	; 0x2d2e <vfprintf+0x348>
    2d0c:	a0 fe       	sbrs	r10, 0
    2d0e:	06 c0       	rjmp	.+12     	; 0x2d1c <vfprintf+0x336>
    2d10:	b2 14       	cp	r11, r2
    2d12:	88 f4       	brcc	.+34     	; 0x2d36 <vfprintf+0x350>
    2d14:	28 0c       	add	r2, r8
    2d16:	92 2c       	mov	r9, r2
    2d18:	9b 18       	sub	r9, r11
    2d1a:	0e c0       	rjmp	.+28     	; 0x2d38 <vfprintf+0x352>
    2d1c:	b2 14       	cp	r11, r2
    2d1e:	60 f4       	brcc	.+24     	; 0x2d38 <vfprintf+0x352>
    2d20:	b6 01       	movw	r22, r12
    2d22:	80 e2       	ldi	r24, 0x20	; 32
    2d24:	90 e0       	ldi	r25, 0x00	; 0
    2d26:	0e 94 10 17 	call	0x2e20	; 0x2e20 <fputc>
    2d2a:	b3 94       	inc	r11
    2d2c:	f7 cf       	rjmp	.-18     	; 0x2d1c <vfprintf+0x336>
    2d2e:	b2 14       	cp	r11, r2
    2d30:	18 f4       	brcc	.+6      	; 0x2d38 <vfprintf+0x352>
    2d32:	2b 18       	sub	r2, r11
    2d34:	02 c0       	rjmp	.+4      	; 0x2d3a <vfprintf+0x354>
    2d36:	98 2c       	mov	r9, r8
    2d38:	21 2c       	mov	r2, r1
    2d3a:	a4 fe       	sbrs	r10, 4
    2d3c:	10 c0       	rjmp	.+32     	; 0x2d5e <vfprintf+0x378>
    2d3e:	b6 01       	movw	r22, r12
    2d40:	80 e3       	ldi	r24, 0x30	; 48
    2d42:	90 e0       	ldi	r25, 0x00	; 0
    2d44:	0e 94 10 17 	call	0x2e20	; 0x2e20 <fputc>
    2d48:	a2 fe       	sbrs	r10, 2
    2d4a:	17 c0       	rjmp	.+46     	; 0x2d7a <vfprintf+0x394>
    2d4c:	a1 fc       	sbrc	r10, 1
    2d4e:	03 c0       	rjmp	.+6      	; 0x2d56 <vfprintf+0x370>
    2d50:	88 e7       	ldi	r24, 0x78	; 120
    2d52:	90 e0       	ldi	r25, 0x00	; 0
    2d54:	02 c0       	rjmp	.+4      	; 0x2d5a <vfprintf+0x374>
    2d56:	88 e5       	ldi	r24, 0x58	; 88
    2d58:	90 e0       	ldi	r25, 0x00	; 0
    2d5a:	b6 01       	movw	r22, r12
    2d5c:	0c c0       	rjmp	.+24     	; 0x2d76 <vfprintf+0x390>
    2d5e:	8a 2d       	mov	r24, r10
    2d60:	86 78       	andi	r24, 0x86	; 134
    2d62:	59 f0       	breq	.+22     	; 0x2d7a <vfprintf+0x394>
    2d64:	a1 fe       	sbrs	r10, 1
    2d66:	02 c0       	rjmp	.+4      	; 0x2d6c <vfprintf+0x386>
    2d68:	8b e2       	ldi	r24, 0x2B	; 43
    2d6a:	01 c0       	rjmp	.+2      	; 0x2d6e <vfprintf+0x388>
    2d6c:	80 e2       	ldi	r24, 0x20	; 32
    2d6e:	a7 fc       	sbrc	r10, 7
    2d70:	8d e2       	ldi	r24, 0x2D	; 45
    2d72:	b6 01       	movw	r22, r12
    2d74:	90 e0       	ldi	r25, 0x00	; 0
    2d76:	0e 94 10 17 	call	0x2e20	; 0x2e20 <fputc>
    2d7a:	89 14       	cp	r8, r9
    2d7c:	38 f4       	brcc	.+14     	; 0x2d8c <vfprintf+0x3a6>
    2d7e:	b6 01       	movw	r22, r12
    2d80:	80 e3       	ldi	r24, 0x30	; 48
    2d82:	90 e0       	ldi	r25, 0x00	; 0
    2d84:	0e 94 10 17 	call	0x2e20	; 0x2e20 <fputc>
    2d88:	9a 94       	dec	r9
    2d8a:	f7 cf       	rjmp	.-18     	; 0x2d7a <vfprintf+0x394>
    2d8c:	8a 94       	dec	r8
    2d8e:	f3 01       	movw	r30, r6
    2d90:	e8 0d       	add	r30, r8
    2d92:	f1 1d       	adc	r31, r1
    2d94:	80 81       	ld	r24, Z
    2d96:	b6 01       	movw	r22, r12
    2d98:	90 e0       	ldi	r25, 0x00	; 0
    2d9a:	0e 94 10 17 	call	0x2e20	; 0x2e20 <fputc>
    2d9e:	81 10       	cpse	r8, r1
    2da0:	f5 cf       	rjmp	.-22     	; 0x2d8c <vfprintf+0x3a6>
    2da2:	22 20       	and	r2, r2
    2da4:	09 f4       	brne	.+2      	; 0x2da8 <vfprintf+0x3c2>
    2da6:	42 ce       	rjmp	.-892    	; 0x2a2c <vfprintf+0x46>
    2da8:	b6 01       	movw	r22, r12
    2daa:	80 e2       	ldi	r24, 0x20	; 32
    2dac:	90 e0       	ldi	r25, 0x00	; 0
    2dae:	0e 94 10 17 	call	0x2e20	; 0x2e20 <fputc>
    2db2:	2a 94       	dec	r2
    2db4:	f6 cf       	rjmp	.-20     	; 0x2da2 <vfprintf+0x3bc>
    2db6:	f6 01       	movw	r30, r12
    2db8:	86 81       	ldd	r24, Z+6	; 0x06
    2dba:	97 81       	ldd	r25, Z+7	; 0x07
    2dbc:	02 c0       	rjmp	.+4      	; 0x2dc2 <vfprintf+0x3dc>
    2dbe:	8f ef       	ldi	r24, 0xFF	; 255
    2dc0:	9f ef       	ldi	r25, 0xFF	; 255
    2dc2:	2b 96       	adiw	r28, 0x0b	; 11
    2dc4:	cd bf       	out	0x3d, r28	; 61
    2dc6:	de bf       	out	0x3e, r29	; 62
    2dc8:	df 91       	pop	r29
    2dca:	cf 91       	pop	r28
    2dcc:	1f 91       	pop	r17
    2dce:	0f 91       	pop	r16
    2dd0:	ff 90       	pop	r15
    2dd2:	ef 90       	pop	r14
    2dd4:	df 90       	pop	r13
    2dd6:	cf 90       	pop	r12
    2dd8:	bf 90       	pop	r11
    2dda:	af 90       	pop	r10
    2ddc:	9f 90       	pop	r9
    2dde:	8f 90       	pop	r8
    2de0:	7f 90       	pop	r7
    2de2:	6f 90       	pop	r6
    2de4:	5f 90       	pop	r5
    2de6:	4f 90       	pop	r4
    2de8:	3f 90       	pop	r3
    2dea:	2f 90       	pop	r2
    2dec:	08 95       	ret

00002dee <__ctype_isfalse>:
    2dee:	99 27       	eor	r25, r25
    2df0:	88 27       	eor	r24, r24

00002df2 <__ctype_istrue>:
    2df2:	08 95       	ret

00002df4 <strnlen_P>:
    2df4:	fc 01       	movw	r30, r24
    2df6:	05 90       	lpm	r0, Z+
    2df8:	61 50       	subi	r22, 0x01	; 1
    2dfa:	70 40       	sbci	r23, 0x00	; 0
    2dfc:	01 10       	cpse	r0, r1
    2dfe:	d8 f7       	brcc	.-10     	; 0x2df6 <strnlen_P+0x2>
    2e00:	80 95       	com	r24
    2e02:	90 95       	com	r25
    2e04:	8e 0f       	add	r24, r30
    2e06:	9f 1f       	adc	r25, r31
    2e08:	08 95       	ret

00002e0a <strnlen>:
    2e0a:	fc 01       	movw	r30, r24
    2e0c:	61 50       	subi	r22, 0x01	; 1
    2e0e:	70 40       	sbci	r23, 0x00	; 0
    2e10:	01 90       	ld	r0, Z+
    2e12:	01 10       	cpse	r0, r1
    2e14:	d8 f7       	brcc	.-10     	; 0x2e0c <strnlen+0x2>
    2e16:	80 95       	com	r24
    2e18:	90 95       	com	r25
    2e1a:	8e 0f       	add	r24, r30
    2e1c:	9f 1f       	adc	r25, r31
    2e1e:	08 95       	ret

00002e20 <fputc>:
    2e20:	0f 93       	push	r16
    2e22:	1f 93       	push	r17
    2e24:	cf 93       	push	r28
    2e26:	df 93       	push	r29
    2e28:	fb 01       	movw	r30, r22
    2e2a:	23 81       	ldd	r18, Z+3	; 0x03
    2e2c:	21 fd       	sbrc	r18, 1
    2e2e:	03 c0       	rjmp	.+6      	; 0x2e36 <fputc+0x16>
    2e30:	8f ef       	ldi	r24, 0xFF	; 255
    2e32:	9f ef       	ldi	r25, 0xFF	; 255
    2e34:	2c c0       	rjmp	.+88     	; 0x2e8e <fputc+0x6e>
    2e36:	22 ff       	sbrs	r18, 2
    2e38:	16 c0       	rjmp	.+44     	; 0x2e66 <fputc+0x46>
    2e3a:	46 81       	ldd	r20, Z+6	; 0x06
    2e3c:	57 81       	ldd	r21, Z+7	; 0x07
    2e3e:	24 81       	ldd	r18, Z+4	; 0x04
    2e40:	35 81       	ldd	r19, Z+5	; 0x05
    2e42:	42 17       	cp	r20, r18
    2e44:	53 07       	cpc	r21, r19
    2e46:	44 f4       	brge	.+16     	; 0x2e58 <fputc+0x38>
    2e48:	a0 81       	ld	r26, Z
    2e4a:	b1 81       	ldd	r27, Z+1	; 0x01
    2e4c:	9d 01       	movw	r18, r26
    2e4e:	2f 5f       	subi	r18, 0xFF	; 255
    2e50:	3f 4f       	sbci	r19, 0xFF	; 255
    2e52:	20 83       	st	Z, r18
    2e54:	31 83       	std	Z+1, r19	; 0x01
    2e56:	8c 93       	st	X, r24
    2e58:	26 81       	ldd	r18, Z+6	; 0x06
    2e5a:	37 81       	ldd	r19, Z+7	; 0x07
    2e5c:	2f 5f       	subi	r18, 0xFF	; 255
    2e5e:	3f 4f       	sbci	r19, 0xFF	; 255
    2e60:	26 83       	std	Z+6, r18	; 0x06
    2e62:	37 83       	std	Z+7, r19	; 0x07
    2e64:	14 c0       	rjmp	.+40     	; 0x2e8e <fputc+0x6e>
    2e66:	8b 01       	movw	r16, r22
    2e68:	ec 01       	movw	r28, r24
    2e6a:	fb 01       	movw	r30, r22
    2e6c:	00 84       	ldd	r0, Z+8	; 0x08
    2e6e:	f1 85       	ldd	r31, Z+9	; 0x09
    2e70:	e0 2d       	mov	r30, r0
    2e72:	09 95       	icall
    2e74:	89 2b       	or	r24, r25
    2e76:	e1 f6       	brne	.-72     	; 0x2e30 <fputc+0x10>
    2e78:	d8 01       	movw	r26, r16
    2e7a:	16 96       	adiw	r26, 0x06	; 6
    2e7c:	8d 91       	ld	r24, X+
    2e7e:	9c 91       	ld	r25, X
    2e80:	17 97       	sbiw	r26, 0x07	; 7
    2e82:	01 96       	adiw	r24, 0x01	; 1
    2e84:	16 96       	adiw	r26, 0x06	; 6
    2e86:	8d 93       	st	X+, r24
    2e88:	9c 93       	st	X, r25
    2e8a:	17 97       	sbiw	r26, 0x07	; 7
    2e8c:	ce 01       	movw	r24, r28
    2e8e:	df 91       	pop	r29
    2e90:	cf 91       	pop	r28
    2e92:	1f 91       	pop	r17
    2e94:	0f 91       	pop	r16
    2e96:	08 95       	ret

00002e98 <__ultoa_invert>:
    2e98:	fa 01       	movw	r30, r20
    2e9a:	aa 27       	eor	r26, r26
    2e9c:	28 30       	cpi	r18, 0x08	; 8
    2e9e:	51 f1       	breq	.+84     	; 0x2ef4 <__ultoa_invert+0x5c>
    2ea0:	20 31       	cpi	r18, 0x10	; 16
    2ea2:	81 f1       	breq	.+96     	; 0x2f04 <__ultoa_invert+0x6c>
    2ea4:	e8 94       	clt
    2ea6:	6f 93       	push	r22
    2ea8:	6e 7f       	andi	r22, 0xFE	; 254
    2eaa:	6e 5f       	subi	r22, 0xFE	; 254
    2eac:	7f 4f       	sbci	r23, 0xFF	; 255
    2eae:	8f 4f       	sbci	r24, 0xFF	; 255
    2eb0:	9f 4f       	sbci	r25, 0xFF	; 255
    2eb2:	af 4f       	sbci	r26, 0xFF	; 255
    2eb4:	b1 e0       	ldi	r27, 0x01	; 1
    2eb6:	3e d0       	rcall	.+124    	; 0x2f34 <__ultoa_invert+0x9c>
    2eb8:	b4 e0       	ldi	r27, 0x04	; 4
    2eba:	3c d0       	rcall	.+120    	; 0x2f34 <__ultoa_invert+0x9c>
    2ebc:	67 0f       	add	r22, r23
    2ebe:	78 1f       	adc	r23, r24
    2ec0:	89 1f       	adc	r24, r25
    2ec2:	9a 1f       	adc	r25, r26
    2ec4:	a1 1d       	adc	r26, r1
    2ec6:	68 0f       	add	r22, r24
    2ec8:	79 1f       	adc	r23, r25
    2eca:	8a 1f       	adc	r24, r26
    2ecc:	91 1d       	adc	r25, r1
    2ece:	a1 1d       	adc	r26, r1
    2ed0:	6a 0f       	add	r22, r26
    2ed2:	71 1d       	adc	r23, r1
    2ed4:	81 1d       	adc	r24, r1
    2ed6:	91 1d       	adc	r25, r1
    2ed8:	a1 1d       	adc	r26, r1
    2eda:	20 d0       	rcall	.+64     	; 0x2f1c <__ultoa_invert+0x84>
    2edc:	09 f4       	brne	.+2      	; 0x2ee0 <__ultoa_invert+0x48>
    2ede:	68 94       	set
    2ee0:	3f 91       	pop	r19
    2ee2:	2a e0       	ldi	r18, 0x0A	; 10
    2ee4:	26 9f       	mul	r18, r22
    2ee6:	11 24       	eor	r1, r1
    2ee8:	30 19       	sub	r19, r0
    2eea:	30 5d       	subi	r19, 0xD0	; 208
    2eec:	31 93       	st	Z+, r19
    2eee:	de f6       	brtc	.-74     	; 0x2ea6 <__ultoa_invert+0xe>
    2ef0:	cf 01       	movw	r24, r30
    2ef2:	08 95       	ret
    2ef4:	46 2f       	mov	r20, r22
    2ef6:	47 70       	andi	r20, 0x07	; 7
    2ef8:	40 5d       	subi	r20, 0xD0	; 208
    2efa:	41 93       	st	Z+, r20
    2efc:	b3 e0       	ldi	r27, 0x03	; 3
    2efe:	0f d0       	rcall	.+30     	; 0x2f1e <__ultoa_invert+0x86>
    2f00:	c9 f7       	brne	.-14     	; 0x2ef4 <__ultoa_invert+0x5c>
    2f02:	f6 cf       	rjmp	.-20     	; 0x2ef0 <__ultoa_invert+0x58>
    2f04:	46 2f       	mov	r20, r22
    2f06:	4f 70       	andi	r20, 0x0F	; 15
    2f08:	40 5d       	subi	r20, 0xD0	; 208
    2f0a:	4a 33       	cpi	r20, 0x3A	; 58
    2f0c:	18 f0       	brcs	.+6      	; 0x2f14 <__ultoa_invert+0x7c>
    2f0e:	49 5d       	subi	r20, 0xD9	; 217
    2f10:	31 fd       	sbrc	r19, 1
    2f12:	40 52       	subi	r20, 0x20	; 32
    2f14:	41 93       	st	Z+, r20
    2f16:	02 d0       	rcall	.+4      	; 0x2f1c <__ultoa_invert+0x84>
    2f18:	a9 f7       	brne	.-22     	; 0x2f04 <__ultoa_invert+0x6c>
    2f1a:	ea cf       	rjmp	.-44     	; 0x2ef0 <__ultoa_invert+0x58>
    2f1c:	b4 e0       	ldi	r27, 0x04	; 4
    2f1e:	a6 95       	lsr	r26
    2f20:	97 95       	ror	r25
    2f22:	87 95       	ror	r24
    2f24:	77 95       	ror	r23
    2f26:	67 95       	ror	r22
    2f28:	ba 95       	dec	r27
    2f2a:	c9 f7       	brne	.-14     	; 0x2f1e <__ultoa_invert+0x86>
    2f2c:	00 97       	sbiw	r24, 0x00	; 0
    2f2e:	61 05       	cpc	r22, r1
    2f30:	71 05       	cpc	r23, r1
    2f32:	08 95       	ret
    2f34:	9b 01       	movw	r18, r22
    2f36:	ac 01       	movw	r20, r24
    2f38:	0a 2e       	mov	r0, r26
    2f3a:	06 94       	lsr	r0
    2f3c:	57 95       	ror	r21
    2f3e:	47 95       	ror	r20
    2f40:	37 95       	ror	r19
    2f42:	27 95       	ror	r18
    2f44:	ba 95       	dec	r27
    2f46:	c9 f7       	brne	.-14     	; 0x2f3a <__ultoa_invert+0xa2>
    2f48:	62 0f       	add	r22, r18
    2f4a:	73 1f       	adc	r23, r19
    2f4c:	84 1f       	adc	r24, r20
    2f4e:	95 1f       	adc	r25, r21
    2f50:	a0 1d       	adc	r26, r0
    2f52:	08 95       	ret

00002f54 <__mulsi3>:
    2f54:	db 01       	movw	r26, r22
    2f56:	8f 93       	push	r24
    2f58:	9f 93       	push	r25
    2f5a:	0e 94 d9 17 	call	0x2fb2	; 0x2fb2 <__muluhisi3>
    2f5e:	bf 91       	pop	r27
    2f60:	af 91       	pop	r26
    2f62:	a2 9f       	mul	r26, r18
    2f64:	80 0d       	add	r24, r0
    2f66:	91 1d       	adc	r25, r1
    2f68:	a3 9f       	mul	r26, r19
    2f6a:	90 0d       	add	r25, r0
    2f6c:	b2 9f       	mul	r27, r18
    2f6e:	90 0d       	add	r25, r0
    2f70:	11 24       	eor	r1, r1
    2f72:	08 95       	ret

00002f74 <__divmodsi4>:
    2f74:	05 2e       	mov	r0, r21
    2f76:	97 fb       	bst	r25, 7
    2f78:	1e f4       	brtc	.+6      	; 0x2f80 <__divmodsi4+0xc>
    2f7a:	00 94       	com	r0
    2f7c:	0e 94 d1 17 	call	0x2fa2	; 0x2fa2 <__negsi2>
    2f80:	57 fd       	sbrc	r21, 7
    2f82:	07 d0       	rcall	.+14     	; 0x2f92 <__divmodsi4_neg2>
    2f84:	0e 94 16 11 	call	0x222c	; 0x222c <__udivmodsi4>
    2f88:	07 fc       	sbrc	r0, 7
    2f8a:	03 d0       	rcall	.+6      	; 0x2f92 <__divmodsi4_neg2>
    2f8c:	4e f4       	brtc	.+18     	; 0x2fa0 <__divmodsi4_exit>
    2f8e:	0c 94 d1 17 	jmp	0x2fa2	; 0x2fa2 <__negsi2>

00002f92 <__divmodsi4_neg2>:
    2f92:	50 95       	com	r21
    2f94:	40 95       	com	r20
    2f96:	30 95       	com	r19
    2f98:	21 95       	neg	r18
    2f9a:	3f 4f       	sbci	r19, 0xFF	; 255
    2f9c:	4f 4f       	sbci	r20, 0xFF	; 255
    2f9e:	5f 4f       	sbci	r21, 0xFF	; 255

00002fa0 <__divmodsi4_exit>:
    2fa0:	08 95       	ret

00002fa2 <__negsi2>:
    2fa2:	90 95       	com	r25
    2fa4:	80 95       	com	r24
    2fa6:	70 95       	com	r23
    2fa8:	61 95       	neg	r22
    2faa:	7f 4f       	sbci	r23, 0xFF	; 255
    2fac:	8f 4f       	sbci	r24, 0xFF	; 255
    2fae:	9f 4f       	sbci	r25, 0xFF	; 255
    2fb0:	08 95       	ret

00002fb2 <__muluhisi3>:
    2fb2:	0e 94 ec 17 	call	0x2fd8	; 0x2fd8 <__umulhisi3>
    2fb6:	a5 9f       	mul	r26, r21
    2fb8:	90 0d       	add	r25, r0
    2fba:	b4 9f       	mul	r27, r20
    2fbc:	90 0d       	add	r25, r0
    2fbe:	a4 9f       	mul	r26, r20
    2fc0:	80 0d       	add	r24, r0
    2fc2:	91 1d       	adc	r25, r1
    2fc4:	11 24       	eor	r1, r1
    2fc6:	08 95       	ret

00002fc8 <__mulshisi3>:
    2fc8:	b7 ff       	sbrs	r27, 7
    2fca:	0c 94 d9 17 	jmp	0x2fb2	; 0x2fb2 <__muluhisi3>

00002fce <__mulohisi3>:
    2fce:	0e 94 d9 17 	call	0x2fb2	; 0x2fb2 <__muluhisi3>
    2fd2:	82 1b       	sub	r24, r18
    2fd4:	93 0b       	sbc	r25, r19
    2fd6:	08 95       	ret

00002fd8 <__umulhisi3>:
    2fd8:	a2 9f       	mul	r26, r18
    2fda:	b0 01       	movw	r22, r0
    2fdc:	b3 9f       	mul	r27, r19
    2fde:	c0 01       	movw	r24, r0
    2fe0:	a3 9f       	mul	r26, r19
    2fe2:	70 0d       	add	r23, r0
    2fe4:	81 1d       	adc	r24, r1
    2fe6:	11 24       	eor	r1, r1
    2fe8:	91 1d       	adc	r25, r1
    2fea:	b2 9f       	mul	r27, r18
    2fec:	70 0d       	add	r23, r0
    2fee:	81 1d       	adc	r24, r1
    2ff0:	11 24       	eor	r1, r1
    2ff2:	91 1d       	adc	r25, r1
    2ff4:	08 95       	ret

00002ff6 <_exit>:
    2ff6:	f8 94       	cli

00002ff8 <__stop_program>:
    2ff8:	ff cf       	rjmp	.-2      	; 0x2ff8 <__stop_program>
